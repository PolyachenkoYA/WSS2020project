(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    416814,       8142]
NotebookOptionsPosition[    308351,       6017]
NotebookOutlinePosition[    403310,       7871]
CellTagsIndexPosition[    402452,       7843]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["PDBImport", "Title",
 CellTags->"Title"],

Cell["Import protein data in the Protein Data Bank (PDB) format", "Text",
 CellTags->"Description"],

Cell[CellGroupData[{

Cell[TextData[{
 "Definition",
 Cell[BoxData[
  TemplateBox[{"Definition", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Define your function using the name you gave in the Title line above. \
You can add input cells and extra code to define additional input cases or \
prerequisites. All definitions, including dependencies, will be included in \
the generated resource function.\n\nThis section should be evaluated before \
creating the Examples section below.", "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoDefinition"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Section",
 Editable->False,
 Deletable->False,
 DefaultNewCellStyle->"Input",
 CellTags->{"Definition", "Function", "TemplateCellGroup"},
 CellID->271561301],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PDBImport", "[", 
    RowBox[{"url_String", ",", " ", "startrow_Integer"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"Catch", "[", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "src", ",", " ", "data", ",", " ", "spaced", ",", " ", "temp", ",", 
         " ", "str", ",", " ", "fullrecord", ",", " ", "splitted", ",", " ", 
         "atomsOnly", ",", "atomWeightRules", ",", "atom", ",", " ", "mass", 
         ",", " ", "xcoor", ",", " ", "ycoor", ",", " ", "zcoor"}], "}"}], 
       ",", " ", 
       RowBox[{
        RowBox[{"src", " ", "=", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"FileExistsQ", "[", "url", "]"}], ",", " ", "url", ",", 
           " ", 
           RowBox[{"tFailed", "[", 
            RowBox[{"URLDownload", "[", "url", "]"}], "]"}]}], "]"}]}], ";", 
        " ", 
        RowBox[{"data", " ", "=", " ", 
         RowBox[{"tFailed", "[", 
          RowBox[{"Import", "[", 
           RowBox[{"src", ",", " ", "\"\<String\>\""}], "]"}], "]"}]}], ";", 
        " ", 
        RowBox[{"spaced", " ", "=", " ", 
         RowBox[{"StringReplace", "[", 
          RowBox[{"data", ",", " ", 
           RowBox[{"\"\<-\>\"", " ", "->", " ", "\"\< -\>\""}]}], "]"}]}], 
        ";", " ", 
        RowBox[{"temp", " ", "=", " ", 
         RowBox[{"tFailed", "[", 
          RowBox[{"CreateTemporary", "[", "]"}], "]"}]}], ";", " ", 
        RowBox[{"tFailed", "[", 
         RowBox[{"Export", "[", 
          RowBox[{"temp", ",", " ", "spaced", ",", " ", "\"\<Text\>\""}], 
          "]"}], "]"}], ";", " ", 
        RowBox[{"str", " ", "=", " ", 
         RowBox[{"tFailed", "[", 
          RowBox[{"OpenRead", "[", "temp", "]"}], "]"}]}], ";", " ", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"tFailed", "[", 
              RowBox[{"#1", ",", " ", "temp"}], "]"}], " ", "&"}], " ", ")"}],
            "[", 
           RowBox[{"Read", "[", 
            RowBox[{"str", ",", " ", "\"\<String\>\""}], "]"}], "]"}], ",", 
          " ", "startrow"}], "]"}], ";", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"tFailed", "[", 
            RowBox[{"#1", ",", " ", "temp"}], "]"}], " ", "&"}], " ", ")"}], 
         "[", 
         RowBox[{"Read", "[", 
          RowBox[{"str", ",", " ", "\"\<String\>\""}], "]"}], "]"}], ";", " ", 
        RowBox[{"fullrecord", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"tFailed", "[", 
             RowBox[{"#1", ",", " ", "temp"}], "]"}], " ", "&"}], " ", ")"}], 
          "[", 
          RowBox[{"ReadList", "[", 
           RowBox[{"str", ",", " ", "\"\<Word\>\"", ",", " ", 
            RowBox[{"RecordLists", " ", "->", " ", "True"}]}], "]"}], "]"}]}],
         ";", " ", 
        RowBox[{"splitted", " ", "=", " ", 
         RowBox[{"Split", "[", 
          RowBox[{"fullrecord", ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"First", "[", "#1", "]"}], " ", "===", " ", 
             RowBox[{"First", "[", "#2", "]"}]}], " ", "&"}]}], " ", "]"}]}], 
        ";", " ", 
        RowBox[{"atomsOnly", " ", "=", " ", 
         RowBox[{"Select", "[", 
          RowBox[{"splitted", ",", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], "===", 
              "\"\<ATOM\>\""}], ")"}], "&"}]}], "]"}]}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"Close", "[", "temp", "]"}], ";", " ", 
        RowBox[{"DeleteFile", "[", "temp", "]"}], ";", " ", 
        RowBox[{"atom", " ", "=", " ", 
         RowBox[{"atomsOnly", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "All", ",", 
            RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"atomWeightRules", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "\[Rule]", 
             RowBox[{"QuantityMagnitude", "[", 
              RowBox[{"ElementData", "[", 
               RowBox[{"#", ",", "\"\<AtomicWeight\>\""}], "]"}], "]"}]}], 
            "&"}], ",", 
           RowBox[{"Union", "[", 
            RowBox[{"Flatten", "[", "atom", "]"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Association", "[", 
         RowBox[{
          RowBox[{"\"\<Atom\>\"", " ", "->", " ", "atom"}], ",", " ", 
          RowBox[{"\"\<Mass\>\"", " ", "->", " ", 
           RowBox[{"(", 
            RowBox[{"atom", "/.", " ", "atomWeightRules"}], ")"}]}], ",", " ", 
          RowBox[{"\"\<XCoordinate\>\"", " ", "->", " ", 
           RowBox[{"ToExpression", "[", 
            RowBox[{"atomsOnly", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "All", ",", "7"}], "]"}], "]"}], "]"}]}], 
          ",", " ", 
          RowBox[{"\"\<YCoordinate\>\"", " ", "->", " ", 
           RowBox[{"ToExpression", "[", 
            RowBox[{"atomsOnly", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "All", ",", "8"}], "]"}], "]"}], "]"}]}], 
          ",", " ", 
          RowBox[{"\"\<ZCoordinate\>\"", " ", "->", " ", 
           RowBox[{"ToExpression", "[", 
            RowBox[{"atomsOnly", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "All", ",", "9"}], "]"}], "]"}], "]"}]}]}], 
         "]"}]}]}], "]"}], ",", " ", "$tag"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PDBImport", "[", 
    RowBox[{"url_String", ",", " ", "\"\<AtomAssociation\>\""}], "]"}], " ", ":=", 
   RowBox[{"PDBImport", "[", 
    RowBox[{"url", ",", " ", "1"}], "]"}]}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PDBImport", "[", "url_String", "]"}], ":=", 
   RowBox[{"Import", "[", 
    RowBox[{"url", ",", "\"\<PDB\>\""}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PDBImport", "[", 
    RowBox[{"url_String", ",", "\"\<String\>\""}], "]"}], ":=", 
   RowBox[{"Import", "[", 
    RowBox[{"url", ",", "\"\<String\>\""}], "]"}]}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PDBImport", "[", 
    RowBox[{
     RowBox[{"\"\<RCSB\>\"", "\[Rule]", "pdbID_"}], ",", "arguments___"}], 
    "]"}], ":=", 
   RowBox[{"PDBImport", "[", 
    RowBox[{
     RowBox[{
     "\"\<http://www.rcsb.org/pdb/download/downloadFile.do?fileFormat=pdb&\
compression=NO&structureId=\>\"", "<>", "pdbID"}], ",", " ", "arguments"}], 
    "]"}]}], "\[IndentingNewLine]", " "}], "\n", 
 RowBox[{
  RowBox[{"MakeBoxes", "[", 
   RowBox[{"PDBImport", ",", " ", "_"}], "]"}], " ", "^:=", " ", 
  RowBox[{
  "MakeResourceFunctionBoxes", "[", "\"\<PDBImport\>\"", "]"}]}]}], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJwdzE0ow3EAxvG1KTtscdomZVNTowi1UixNS5I0a4pkWIayNjdSIm8zlOyl
TJpsLnOQ4iCRzDa12JZl/7bScqDWlpe1bBzk9/wPT596Dt9KrVGlYzIYjHIy
qMgnfLq+jJwnub2De0ora4zoLmLz4dBZg3iFyF5w0rrapF74Lc0FoIl3TUFj
VvMMS8WTKbimy9COGCKqVaLgMq2GjeNlFljyUWyHMa7eASdC0QPYHU6m4d+c
4BPq5v0VJqJYPiyCodaXKvj2w6+BR9VaC9zVy2xQezgYh7NCVhIeL7a4zEQq
TLlhLU9hXicarnpoC1NPbljnSNGyOZR6g7js6eqFEqZlCya2O6wwN23egfbY
L22T17G/SbTZgm74fiPzwHb16CnUcB79UOTrDNC/IX4PCwP9D1ApbI7Ci2A9
Bc9nTpIw7/S+wgg7/UV3lrhZ+A/dieCv
  "],
 CellLabel->"In[11]:=",
 CellID->138161661],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"tFailed", "[", 
    RowBox[{"e_", ",", " ", "file_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Close", "[", "file", "]"}], ";", " ", 
      RowBox[{"DeleteFile", "[", "file", "]"}], ";", " ", 
      RowBox[{"tFailed", "[", "e", "]"}]}], ")"}], " ", "/;", " ", 
    RowBox[{"FailureQ", "[", "e", "]"}]}]}], "\n", " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tFailed", "[", "e_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"Throw", "[", 
     RowBox[{"e", ",", " ", "$tag"}], "]"}], " ", "/;", " ", 
    RowBox[{"FailureQ", "[", "e", "]"}]}]}], "\n", " "}], "\n", 
 RowBox[{
  RowBox[{"tFailed", "[", 
   RowBox[{"e_", ",", " ", "___"}], "]"}], " ", ":=", " ", "e"}]}], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellLabel->"In[17]:=",
 CellID->653214020],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$tag", " ", "=", " ", 
  "\"\<70b4e1a5-6155-4eb2-aadb-fd47bf103ba0\>\""}]], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellLabel->"In[20]:=",
 CellID->631630676],

Cell[BoxData["\<\"70b4e1a5-6155-4eb2-aadb-fd47bf103ba0\"\>"], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.804442854264226*^9, {3.804500875834766*^9, 3.80450087589466*^9}, 
   3.804506223650951*^9, 3.8045065214668417`*^9, 3.804507572758479*^9, 
   3.80450823835285*^9, 3.804509044193007*^9, 3.804511507393856*^9, 
   3.804511868907815*^9, {3.8045119365343027`*^9, 3.804511936611882*^9}, 
   3.8045177058097773`*^9, 3.804519046847702*^9, 3.8045203394709663`*^9, {
   3.804521943459466*^9, 3.804521943574518*^9}, 3.804522040941996*^9, 
   3.804522114435545*^9, {3.8046014000400257`*^9, 3.804601400114417*^9}},
 CellLabel->"Out[20]=",
 CellID->1393703902]
}, Open  ]]
}, Open  ]],

Cell["Documentation", "Section",
 CellTags->"Documentation",
 CellID->363488142],

Cell[CellGroupData[{

Cell[TextData[{
 "Usage",
 Cell[BoxData[
  TemplateBox[{"Usage", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
        TextData[{
         "Document input usage cases by first typing an input structure, then \
pressing ", 
          Cell[
           BoxData[
            StyleBox[
             DynamicBox[
              ToBoxes[
               
               If[$OperatingSystem === "MacOSX", "\[ReturnKey]", 
                "\[EnterKey]"], StandardForm], SingleEvaluation -> True, 
              Evaluator -> "System"], ShowStringCharacters -> False]]], 
          " to add a brief explanation of the function\[CloseCurlyQuote]s \
behavior for that structure. Pressing ", 
          Cell[
           BoxData[
            StyleBox[
             DynamicBox[
              ToBoxes[
               
               If[$OperatingSystem === "MacOSX", "\[ReturnKey]", 
                "\[EnterKey]"], StandardForm], SingleEvaluation -> True, 
              Evaluator -> "System"], ShowStringCharacters -> False]]], 
          " repeatedly will create new cases as needed. Every input usage \
case defined above should be demonstrated explicitly here.\n\nSee existing \
documentation pages for examples."}], "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoUsage"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Subsection",
 Editable->False,
 Deletable->False,
 DefaultNewCellStyle->{"UsageInputs", FontFamily -> "Source Sans Pro"},
 CellTags->{"TemplateCellGroup", "Usage"},
 CellID->657272351],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDBImport", "[", 
  StyleBox["src", "TI"], "]"}]], "UsageInputs"],

Cell[TextData[{
 "applies a PDB import to the source ",
 Cell[BoxData[
  StyleBox["src", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 "."
}], "UsageDescription"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDBImport", "[", 
  RowBox[{
   StyleBox["src", "TI"], ",", "\"\<String\>\""}], "]"}]], "UsageInputs"],

Cell[TextData[{
 "imports protein data from the source ",
 Cell[BoxData[
  StyleBox["src", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " as a string of PDB format."
}], "UsageDescription"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDBImport", "[", 
  RowBox[{
   StyleBox["src", "TI"], ",", " ", "\"\<AtomAssociation\>\""}], 
  "]"}]], "UsageInputs"],

Cell[TextData[{
 "imports a protein atom association from the source ",
 Cell[BoxData[
  StyleBox["src", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " in the RCSB Protein Data Bank format."
}], "UsageDescription"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDBImport", "[", 
  RowBox[{
   StyleBox["src", "TI"], ",", 
   StyleBox["row", "TI"]}], "]"}]], "UsageInputs"],

Cell[TextData[{
 "imports a protein atom starting from the specified ",
 Cell[BoxData[
  StyleBox["row", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 "."
}], "UsageDescription"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDBImport", "[", 
  RowBox[{
   RowBox[{
    StyleBox["provider", "TI"], "\[Rule]", 
    StyleBox["identifier", "TI"]}], ",", "\[Ellipsis]"}], 
  "]"}]], "UsageInputs"],

Cell[TextData[{
 "imports the protein data from the given ",
 Cell[BoxData[
  StyleBox["provider", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " with the ",
 Cell[BoxData[
  StyleBox["identifer", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " appropriate to that ",
 Cell[BoxData[
  StyleBox["provider", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 "."
}], "UsageDescription"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details & Options",
 Cell[BoxData[
  TemplateBox[{"Details & Options", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Give a detailed explanation of how the function is used and \
configured (e.g. acceptable input types, result formats, options \
specifications, background information). This section may include multiple \
cells, bullet lists, tables, hyperlinks and additional styles/structures as \
needed.\n\nAdd any other information that may be relevant, such as when the \
function was first discovered or how and why it is used within a given field. \
Include all relevant background or contextual information related to the \
function, its development, and its usage.", "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoDetailsOptions"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Subsection",
 Editable->False,
 Deletable->False,
 DefaultNewCellStyle->"Notes",
 CellTags->{"Details & Options", "Notes", "TemplateCellGroup"},
 CellID->25317349],

Cell[TextData[{
 "The string ",
 Cell[BoxData[
  StyleBox["src", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " in ",
 Cell[BoxData[
  RowBox[{"PDBImport", "[", 
   RowBox[{
    StyleBox["src", "TI"], ",", "\[Ellipsis]"}], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " can refer to a local file or a URL."
}], "Notes",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.751861376226686*^9, 3.751861396638529*^9}, {
  3.751888119646595*^9, 3.7518881643362722`*^9}, {3.751888364721773*^9, 
  3.7518883647229424`*^9}, {3.763067188686949*^9, 3.763067191030572*^9}, {
  3.785578422415331*^9, 3.785578505939258*^9}, {3.804442877024493*^9, 
  3.8044428770245743`*^9}, {3.804601288885545*^9, 3.804601291194171*^9}, {
  3.804601362592476*^9, 3.8046013736667767`*^9}, {3.805042575346615*^9, 
  3.805042576649574*^9}, {3.8050426815343933`*^9, 3.8050426947889805`*^9}},
 CellTags->"TabNext",
 CellID->162665517],

Cell[TextData[{
 Cell[BoxData["PDBImport"], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " with \"AtomAssociation\" or ",
 Cell[BoxData[
  StyleBox["row", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " returns an association with elements \"Atom\", \"Mass\", \"XCoordinate\", \
\"YCoordinate\", and \"ZCoordinate\" representing atomic mass and coordinates."
}], "Notes",
 TaggingRules->{"AttachedInlineCell" -> CellObject[124609]},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.751861376226686*^9, 3.751861396638529*^9}, {
   3.751888119646595*^9, 3.7518881643362722`*^9}, {3.7518884180648823`*^9, 
   3.751888478783607*^9}, {3.785578537720549*^9, 3.7855785539167128`*^9}, {
   3.785578617318013*^9, 3.7855786717949877`*^9}, {3.7855792646969223`*^9, 
   3.785579307017218*^9}, {3.785579393207258*^9, 3.785579418767869*^9}, {
   3.804504979216096*^9, 3.804504997594344*^9}, {3.8045113652307243`*^9, 
   3.804511366838469*^9}, {3.8045179844170237`*^9, 3.804517984960845*^9}, 
   3.804518787813036*^9, 3.805042704387261*^9},
 CellID->206194200],

Cell[TextData[{
 Cell[BoxData["PDBImport"], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " with \"String\" returns the text of the associated PDB file, suitable for \
later use in ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["ImportString", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/ImportString",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 "."
}], "Notes",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.751861376226686*^9, 3.751861396638529*^9}, {
  3.751888119646595*^9, 3.7518881643362722`*^9}, {3.7518884180648823`*^9, 
  3.751888478783607*^9}, {3.785578537720549*^9, 3.7855785539167128`*^9}, {
  3.785578617318013*^9, 3.7855786717949877`*^9}, {3.7855792646969223`*^9, 
  3.785579307017218*^9}, {3.785579393207258*^9, 3.785579418767869*^9}, {
  3.804504979216096*^9, 3.804505072156933*^9}, {3.804517992273676*^9, 
  3.804518009375815*^9}, {3.8045213648936*^9, 3.8045213687089157`*^9}},
 CellID->599508142]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples",
 Cell[BoxData[
  TemplateBox[{"Examples", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
        TextData[{
         "Demonstrate the function\[CloseCurlyQuote]s usage, starting with \
the most basic use case and describing each example in a preceding text cell.\
\n\nWithin a group, individual examples can be delimited by inserting page \
breaks between them (either using ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"[Right-click]\"", FontFamily -> "Source Sans Pro", 
                FontWeight -> "SemiBold", FontColor -> GrayLevel[0.2863], 
                FontSize -> 14, StripOnInput -> False], 
               StyleBox[
               "\" \[FilledRightTriangle] \"", FontFamily -> 
                "Source Sans Pro", FontSize -> 13.86, FontColor -> 
                GrayLevel[0.5], StripOnInput -> False], 
               StyleBox[
               "\"Insert Page Break\"", FontFamily -> "Source Sans Pro", 
                FontWeight -> "SemiBold", FontColor -> GrayLevel[0.2863], 
                FontSize -> 14, StripOnInput -> False]}, "RowDefault"], 
             ShowStringCharacters -> False]]], 
          " between cells or through the menu using ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"Insert\"", FontFamily -> "Source Sans Pro", FontWeight -> 
                "SemiBold", FontColor -> GrayLevel[0.2863], FontSize -> 14, 
                StripOnInput -> False], 
               StyleBox[
               "\" \[FilledRightTriangle] \"", FontFamily -> 
                "Source Sans Pro", FontSize -> 13.86, FontColor -> 
                GrayLevel[0.5], StripOnInput -> False], 
               StyleBox[
               "\"Page Break\"", FontFamily -> "Source Sans Pro", FontWeight -> 
                "SemiBold", FontColor -> GrayLevel[0.2863], FontSize -> 14, 
                StripOnInput -> False]}, "RowDefault"], ShowStringCharacters -> 
             False]]], 
          ").\n\nExamples should be grouped into Subsection and Subsubsection \
cells similarly to existing documentation pages. Here are some typical \
Subsection names and the types of examples they normally contain:\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Basic Examples: \"", FontFamily -> "Source Sans Pro", 
                FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                False]}, "RowDefault"], ShowStringCharacters -> False]]], 
          "most basic function usage\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Scope: \"", FontFamily -> "Source Sans Pro", FontWeight -> 
                "SemiBold", FontSize -> 14, StripOnInput -> False]}, 
              "RowDefault"], ShowStringCharacters -> False]]], 
          "input and display conventions, standard computational attributes \
(e.g. threading over lists)\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Options: \"", FontFamily -> "Source Sans Pro", FontWeight -> 
                "SemiBold", FontSize -> 14, StripOnInput -> False]}, 
              "RowDefault"], ShowStringCharacters -> False]]], 
          "available options and parameters for the function\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Applications: \"", FontFamily -> "Source Sans Pro", 
                FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                False]}, "RowDefault"], ShowStringCharacters -> False]]], 
          "standard industry or academic applications\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Properties and Relations: \"", FontFamily -> 
                "Source Sans Pro", FontWeight -> "SemiBold", FontSize -> 14, 
                StripOnInput -> False]}, "RowDefault"], ShowStringCharacters -> 
             False]]], "how the function relates to other functions\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Possible Issues: \"", FontFamily -> "Source Sans Pro", 
                FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                False]}, "RowDefault"], ShowStringCharacters -> False]]], 
          "limitations or unexpected behavior a user might experience\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Neat Examples: \"", FontFamily -> "Source Sans Pro", 
                FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                False]}, "RowDefault"], ShowStringCharacters -> False]]], 
          "particularly interesting, unconventional, or otherwise unique \
usage"}], "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
       FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5]], "MoreInfoText", 
     Deletable -> True, CellTags -> {"SectionMoreInfoExamples"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Section",
 Editable->False,
 Deletable->False,
 CellTags->{"Examples", "TemplateCellGroup"},
 CellID->487306095],

Cell[CellGroupData[{

Cell["Basic Examples", "Subsection",
 TaggingRules->{},
 CellLabel->"In[21]:=",
 CellID->285421464],

Cell["Import a PDB file corresponding to a RCSB id :", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.80451968608467*^9, 3.804519720685009*^9}, {
  3.80452139214915*^9, 3.804521392780012*^9}},
 CellID->403524650],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDBImport", "[", 
  RowBox[{"\"\<RCSB\>\"", "\[Rule]", "\"\<3J3I\>\""}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.804519030640068*^9, 3.804519044759272*^9}},
 CellLabel->"In[1]:=",
 CellID->1436758559],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3XdXFEnjPvzv+T3vwUTOGYachwGGmWESk8g555xRFMVMEFQMiBhQCWZd
c3YlCQqYdY1kMa26q6669lMj3uveRjCue1+fU6fPzNDVXT3/zEVXdZVaWLIk
7P/7v//7P2Wy6fx///d/8tcUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAP0nfwIMpJc0xeY3SuFYH
7xa630m6f0dQ7t2quiu9A/e/d+sAAADgx9bdO1RR3aRpladsGKFGS1IzTVE2
ihqvJRun7mHCXMYIOh9R+KKo+l77qVvfu6UAAADwQypfukfXbrqmZY6NS1Jj
y5ljzV3dPYOkkD+RbVHZGmvneAOneSR1iDJeLG+48b3bCwAAAD8YhnC2tk2B
I29qU+v59+1DUkft+r0in2wDemlE4Z/LG65/yxYCAADAD80/eqmGRWZGfs1I
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
eumNP4l8s1VpcZaizc7hF9gJt0nekM9SPpGKn9bxXZo6Wq9ucZjmW7N/Yki6
BGHPSOSIyKYGh14/kNvSftXAsYzmWm3F324nOezg2ezk2+kccIFEDrfQXrew
PrJlhly3FR8sKlv7Ha8FAADgh5aWVUnCRlL26bf/VFS2RlE/wNhtsVNIFytu
gJf21CNHvhYbCR5b9pz/9k39BD7BZVq0PDvufqbXZY7/TVEkRSJHZM6rv+ZM
22xILzdxXW7BabDib7UV7bOXHnP0anPy6WD4n3EOOO/sf87Z/yyNudKelftd
rwMAAODHpmWYJQx6tnn76f47j3Y031i27UzUzJ+MxLMMRdP13KeM1eBr2eTa
+zcyo29wU37zyH659usUyj+3+3s3/ONCYhsMrEvMGWtsOLvoHsddPS+xfLs9
IilpLFVe/SIgplrPbraBY6mx81Iz1lpL7mZr4S5b8UF76c8OsiYHz2YHz1Y7
6VEas9qelXesuet7Xw0AAMCPauDOIyfuNK7vHXPRCpr3fC3XFCVLn/GGXCtO
uCQky5IVPEbDXcUkxkqy/eWQ0TuCTHl/inQyJcqjpi089b2b/yHNrRdV9eLU
9OONbMtMnVbasHc4CI7RRe2uXpeEES/E0ZQ5c62O9VR9h2JjxmJTt1XmnAZL
3lZr4U4bjz02on2kkBBi4FBqz8r5+MkAAADgLQN3n9QcHspa3cOacsaQM4cp
uWzkUDZv2caSxbWNx1//I7+/7YVjYKuBS6mBc4m93zG3mF5e6mN5l0o+JSug
wqb/0XZq8DtexYcNT/lFioZhioHVXBOHSguXehv2T3bcA24+1zwiKX7oXW3L
fD27OYb0+SYuy0zdasw59RbcjZa8LaasGj272RqmGWl5Vd/7OgAAAH4kLzPG
rZy1NwVFA9yZ11yym6wj65hh81Ly5tsyd4Ul33+7Sn61vOuEFFEe5RbX6+Df
TA8+yU9/5vFy1KhsChUwaeDbX8jI/RU51A1TtE3zDayLTRwrzZ3X2XB2cQIG
xdEUjVGpazPdwKHEyKmCRA4acxWNuULHulDDNN2BPfFbzhYCAADwo+u8+jCi
6q508TN+0YBLbot00p6grGXFFWuG/0p+lLWNJwoCHrWevN4/9Hjg1pOBW3/I
y+1n4kmUZPKryCGbKr+nIcyhXCIvuURcEmZT4jx56phVNdIJPHv6by1YvUeQ
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
ckOLUj1aoaZBppp2rKpWlIpmmLJGiJZBtiP7GNfzlrvfTdes4zUHbzW2dmm7
prMnX+TNHBAW3ROV/kaKYO4d7vRel8xW+7idpj6LW7uu/dWY1MkLNRzj2JMu
0TzmvU4dhikaxmnappP0rGYa2S8wZay0ZG10FDW5B98Vx8ojxwgVl9WOV5co
aPtpW0y24GwkkYPhe9ZecozmUk13n9bU8ik3lAAAAH5c3b2DdqLkmLVP56/a
Odq6JQsamLHX6w6O5nTdg0Ula0nqUFTzI8lBTSdOQy9F12SKsdUCc4fVVk4b
rRlbydbcocbUtsrYcr78sVnDXA3dZJI0lNWDldQCFFV9ySeOrMMkbEiCKWkI
RY885F3Yahu5iVvYLZx7VzL/qWwR5bmE8lxMSRf8KZhzm550wDxg+aLa/3rs
NyC1QlT62LuSUjL38QwvKCpdM5w6lLSCVHTD1QziNIzTdcwLDO3KTBnV9sIj
7KCb4jhq4doRXWbdhoNjlDljVbhKuiG6NjMsOBsM7OdpmeX6hpWP5gsGAAD4
96jbvNfAYxpvTnfSZmpe1YiWiB12rLnLxnvP5FWfctKXwaNGLMseryRSUPFS
VPNXVg9S0QxX1Y5R10nQ1M/QMZpEcoWmfrqadqyyRijJJxOUZQqqPgZmRU7u
rXyfh7JQyjNMnjfsJbvdJp52n3bdo+S+dOELr0rKZ7l8nXqyJcGDhBDLoNX5
C/9rNbqqbecl5X96LaUmmEhsBYmvmtQzOJw6xirzFTR8lLQCVfSiXk49OtXI
YaEtbz8v7GHslBFd3frNjWNVeSRyjFMXKeuHa1vka9DSfULnfco3BQAA8G/R
3TtYvGiNiVeJoHSIpI6GbYdGVKtn0Ii1MKr4z886dffgscau2vq9SSnF5tZB
YxXcxypwxykJxyuLxykKxynyyXasAo8UVa1oc7tVzrwOod8fw2GDbMWBlJvs
F6fUI8Kiu9IKyrtSnjT8VlF+KykSJ/izBhwT9kVMfb3Yffu5QW5hr98KSjzv
j+JF65raz759UUlpJSR1jFMVyefl0PQnqUPTJNOEvszV57Ioltp79MH7rqW3
/9fjJ7tb2681H780QdNLfotDla+g5VdWsb2p9fznfEsAAAA/tJ7+O60d1zft
6iJlftUeVatwmrTCKeWo74wTLe2/NLdfajp+rrv33XNStZy4TA85IZn8Jdvz
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
2xJj+hIzlzWW7E3y4OHxs5P0hIv3eTf/G6zAXpI65GEj4jE/4rEg6k8SM0jY
EEQ+40c8IcGDbFkBvQxZpzmzbuO2E38/C/lWmYE3uJEPl639xCAHAADw+fr6
Hy6tPMkT1vX03PouDWhq6wzZ8TR099Pw/ZSWY4pLzMWT50c9jrG7b9A6cq1X
9YvwqYWqdg5abmxG9sSJLSe3XvoCQzH/rq5+33hF4QRliaKqr4pmOIkcWgY5
usYFIZEjmoH8L00tZ1X0IlUN4tSNkkjq0DLN1bWcZmhXakKvNHOpsXBrsOJs
teHusuXtsxMcdPA46ihqcpK2MTxPOXuddfW+6Orzi6vvZRefCySQkE8Ysi6y
jyVrI9Oj4u9nIWGDFTIoiHsxrbTzi34NAAAAo+AfuFhRyXfMWJaaRpSPf2d3
z9edjfNtjW2dAZvv+zUMRc1ew89YqGIZ6BR2smhd32iPU7/tgNuUTquwPBVb
e1ZkdE9/v71Expw8bdrZX4Z+++0LNjg5tezlarDc8UoiRTV/Ejk09TMMzUq2
bh/dOMyS8npF7UBl3XAV/WiSOtQMEzVM0nUsCgxsi4wcFpo4LTNzWW3OrLNk
bbBib7F2/8mGu9OGt8eWv8+Of8BOQMpBeeEfIJ/YcHdbc7abOq80tC9vbn19
E4OEDU7YHY8EamrpJw6JAQAA+Hw+viUkaZCSlFyclFzCYB4PCf+m/fskbMhW
XPZe01u1Q/5MSnffgDgo09ZvP6/gev3J0d1sadh+mJFRo8PhcWITWjrk/8uT
yOGXkha0YVvNpWtfsM2WNuHj5EvPk7whVlT1UVYP0dLPpFkt6esfXaopmrd2
grqnopafknaQsk6oil6Eqn6MunGKttlEXctCfZs5hnZlxo6LTOhLaU5VJEuY
Oq8iCcTMZY256zqyNXOpIW/J5yb0SmOHRSSiMD0WtvxtjTYSNrLmPhTGU1NL
TnygGQAAAF9VRmY1SRrWNtHDb2vr9rB5VwOCv3DvwweQdMErOea1+vqMtYfJ
27tPn1EvH4m1kKx3jm0TlDdPP/yh0ReD95/sP3errn1w/qHu8v3XBBnzTf2D
TP2Di7a9fpy2+cRJ25iE9DO/nL9153Oauqejs6H95NHr8kktxpKwMYEzXlGo
oOKlpBaoohmmYzjR1Gb56u2jC0hJGaVjVfjj1cQTNDwVNH0UtQKUtENU9KLV
jZJfDurI1jabpGs5Tddyup7VTH2buf8pcwxsi/Wt5+hZzXj510Ky1bEoCIxa
/vqbufV83fbnokRKEPsiJuvo51w4AADA52hqPkfCho1tQnPLq9vvRcU1PNHt
5LRvN9uk18yNvrWDSRXyR0frjp+Yebmv7deHx1q6aLwql9hzGsxAVuGOzMN/
bjjz28azjzaee7S07eGStoeFh++l7L4fsOmub12/dPkFQVkzc+oWu8T5Zv7B
VuHRulxffnnz3lOvu2O84xN8VtVOv3Dtk9sZOilfjy/QF4oiqlauP3F2zHg2
KROUpfIhoxqhqlpRWgZZFg616uYJVVtHsXqLhVPoGCXOG2Wcqsd4dZmClr+y
TpiqQbx8aIdJmqZJBokfmrQsUjRomfI0YpJJPtR6+SGJH4XzTp26+GLw9ov5
S/ZFF1DSVIob8UAS0bhlF6baAACA76moqEZZNWjTptd32lNS5wulj6fP/Ebz
M6RPn+9d051W/TN5ffz0GX2h2HPaLOplL4COYwE7ZfB413Vbj1B6xirf2n7P
VVdl1Zcky856LO4QlDe7TtnskVvpHJSZMmVuyZLV9Vt3c5PS7eNTbKILyldu
C8yam7Clv7vv1QQUPf39hmJZysmzx3r7P6GdQdk5Knb29lKZT0IiNzHJZ0Xd
mPEsUhRVfZXVg1U1I9W04zT10nXMJo3T5443EGbPrh3hkcV+WW/njbHK3P8E
D+FwGavCI9sJGl7j1STjVAXjVUXj1aXy/hf9aJI0mAHXOKG3eVFPhHGUKIHy
iKO8484sXtne23/vEy4WAADgy0pKKlZSCdi2/fUSomnpS8VeVGXVt8gbjW2d
7Nn7JUvPtp+XLxriFhFt6hfU0vlqoXYVWgQ7+WbH+fvdfQMkS/y9kIqkvHG0
ZVu3O6ZkWkem+a8j6eIWqWUWPC19/+snatOnz/Bbu376hXdMuflOQw+fDb8I
zp1IwsaidVuWNLSF528yEkynyUJe5g22vCdFI1xNK0ZDN5nkjbF67qSMI0Wf
m1ZQOZKziIOzVC0i5BlDRaCiF6lulKxJyyRFwyRNwyRdzTBezShRVT6UNFbN
MNE7uKiodM2xpi5SqJepjJSmlrNNLefqNxxq2NxYvmjX/CV7F1QeHuE1AgAA
fAMkb6iohf604/UqG3TGZKkPtXXbt7gDHzp5keeqq8t3tpHXFXX1xp6+hStr
/vqrJGCiW0L3yq0jGrm6vbGJnp7tmJKRMX2+S86xDS8zS9nyOve5B+cfenV1
Pf39NB//7Evd54beO8Sit+/XrdsvbN1+ftuOyyFzO+auPB+dudGcO4MXssCU
s9SIXWrgMlOXPkXHPkmeNyawlTVCVLWi1XWSNHRTFPRkY3U5r4oeKe7JeaXF
G2+WbL5duvXevs5HpJy6/scbZyxauEbdIdaIW6JqEjNBw8uKHmPlGGVhH0aK
fMl4Ze4YZfexKtxxqiKJ76RRfsEAAPC5Bu4M7etobmjaV3x4/YzjG/fc6Pre
LfohFRXVqGvEevm+HlppaDKX5I2+vq++gJc8DMw+GFC+n/pPT4p5cMTfd0jK
KnWOOrfqp4/P0jl99VpGZh4je9LG3Xu6ewdLK9c7JO+IrX3efqHfyCsz88jz
v/b0jk8I276n/MybE16RmLGk6qTUr5Et7mF5XGXyzzmxWxyYh+2cd9o4bbNh
bLdy3Ghut8bUpooUM9sVxpYLFZS9SORQVg9R047X0E3WMEh6HTb+VrScM3SY
uQbc6aaei21CNzJSGoNLuudte7Cv6/Fw9mhs7VK1DrMMWuuS0b5gz5/zdz+b
v/vp/q4nb7Tw7ZnJAQDga+u8fF40KzWwalr8T4tyjtcVXtldcH57w5WWUR1k
6MHdbWcaKzp27L3xvzsDUnf34NhxXJrZ0pWreobfWlivFsmekd/fr3rexrZO
u+SlnNkHhntSJs5fSPMN3Hrkv56hIHnDNe6Xlds+MhNI4vwKl9zJztmTmk92
/PVhyeJ1FsHLIqvv2iXUea8ePH761fOhzSdOMrLyZl/rG3oof2q1t/cuiRkO
zENs0Q22qNvZ/YSR+Tx7pyxbx1QV3SBVvWAlLZmaoa+qYbCygf/wgI3hbpS/
XiupBcpvbuglk2ih657ydt6QhU8hEYiUxuOn6jbvT5lU7pdYpu2abeG/mpHS
ElzaM2/b/eqfrgRlVutzC20iNtuEb7KN2OKS0VZz8O4X/tIBAGCUcleWyUqz
IupL0g6vLLjw06zeg5O6NnmV5+Ttqh5J9bUHt0vnpgUtn5q8d8mUs5vm9O4r
Obdj1+X2r93sf6bauj1qGrG+/l0DA49J3tA3mimQ/Nbb+3XHGfqlFrpM2jC9
5sDwW32hxCI4/I19RH7ZbvHXdx370BOsSRVLmZMLvWfMIUHijT/Vbdmn7hRt
GbaCN/d67JonB8/LB2P09Pf7p6ZF7T+6+GhHwfQmjriXK7vlwjttbLHAgZFX
Ulp/rFEePjcfaDYQJdL84llTpztlTPNY1O5Vc8Wntsc6eqGKtd9YbXmQGK/L
eTle1E9DN3m4J4WRU/923rBkhrzdbHn8aO0qXrTOK3qGplOKsbjMOnS9JHvf
9BUd7MilypaBSua+FWuPfPLXCwAAny9rZgG/IM5n4cSYTeUZP6+efnUPyRuh
q2dxJ8VEbSy7dLv3w9WPn+rg5UdJi9LCa+ek7FtacG5z0eDB9MPLc35a+m3a
/09DMoZInGFMK51bLP/qNLSS2Pzrx4+PdGH0vr77fX0PyIuaw8d2tXds2L2n
+UQH+fUnv+zvq9J88rRlRJFVVGn/bfldlEX162m+gVOWLn9jN3FALiupb9ex
D/Wn7O06Lcmf+r5zkZ/14kVrlK28jGVzXHIbo1c9rG97FhhVbsuqY4t62KIb
9q4HdM3z7ULXR68cHHoorzJw9yEpuWWr9IRxbpOn+q1rMJQmOmYsd5+7T1J1
2nvtddHiTuuohfIsoc1R1BZYiCZP0JWQtxqMUOGC1hHmjTcaSbJH0cI1kpAc
JXO/cQY8Umy48b0DnzVVCAAAfCZ2mDdvSqzvovzYrQuymtbO7j04p/+QsDCR
mRbsv7RgXuPmD1d39hZwJ0WJZiYFr5iWuLNi8umNJbeO5Heu9yzNbLx2+ttc
wj8N+adeRTXE27f9xMnbXj4zjWhlUu8js+ZcWr7yclX1hWXLzy5feWXmnItJ
qadSMy76B190415i869xhL088S2B9IGH5xNSxGH3PKJ/kWSdFmWe8F98ImrX
yZmX+zfs2v326XxTCml++ZXbGoffGnhIzQJDewbeHBdq5RLFTrm58+fPXcwl
vbDcPmW5pmuYnkO+pXMty+O6K++sud0aR8akzIJV9NTdogX3/NdRKVsp1ykb
XPIbGHlrdXlRlmFJYdt3W0em6YsSDCUpVlFznSfVCcqPea686FPbLVrcocNO
1OVKUztOjzd0I7lCX5jKLT7wjiEcepzOKyOdcXS45+UzrxcAAL4IK38eNz9G
nje2zM9srJnVc2DuwGHh9ET7cKlXWc7EPSs/ULd3oE/bydw5yY9EDr/FE2M2
zctrry2+eWjK2U3e83Nm7Vr9za7in0YkztA3LExK6ezuHhRLs1XVI9Q0ojW1
0/QNpxmazDailZqYLTSzrDK3Xm1qUUmTlyU08wpj0zI9w6naerkm5hXW9hsc
GPud3Fpd3c+w+FcEPkPMyA3huw5P7bpU2db1V3/H+p2HdAVxZkHTht9GTJth
6hdcuWXb202yZsZxUm/v/PlzV3Lp7hsw5GabMhbZOe9yYrcY0GZqWcZwCkvy
mjqNZXNoPmUueU2yyqcBdZRz7k+abkEarv76ogjfNXVR+w7r8mP0hHEkchiI
Eo29M+0SF7KmbxMtPuFVc4VEDnp6RejWHWZ+CfL7GBEzWTO2vzNvrNrzKTN+
AADAd9Qz0Gflz+fkRvosmBi9qSzj6OpZvQeKbh4VFCbaBHl4lmZH1JdcHOr5
wBEYXnz7cDEzLUhWnB66ekbqwao5ffuLbx32KEyYsX1Ewz/+lY41diop+1rZ
NLS3y38ca+v2iCQZIkkm2YolmRJpXnLKvKLiGlLIn0gh+w8Xkk827jzgvXxL
zPQl5K9JycWkioVVkIVNDU98m+81aC0sly5ZGXOwpaDr0pLmdie/eG33yG0/
y58nWr5jt/vM4qiZc97ZpPrNh/cef/Pp0dHq7bsXFrle32Smhd0aU6tKQ+cC
64hydXqgiadPctsp66gSI+ksi6BKduEZ75UUiRyHL1M5xcsdU3ITmtq03Lx1
eVG6/Gg9QYyeB0kdiaSYBRXQM1dwi/ZLl58RL21nTpoSsmmPqr2feWihU/ZK
ZStfEjDGGwgmGInHG4qGI0f09L2feRUAAPCNkbxhJmW6ZYTISrMiG0rSDq2Y
eWNf8a2fSfyw8uPzJseSvNF0/UNzcWfPmmLhzXGMlnEnRvpW5MVuLpt+ZUfp
naM+C3KT1xR/swv5BzK3CNTUSvmEij6zSjIv9G059HqOKRJCSPYYN4FvS9/h
4fmEI77qFpRqFhDKzC8UL1wmXrS6cN/RwlVrhPMWhRUUfrkr+C8kaSyuPG5o
WqJjkKehm6qmF6NsKVW281C2FdiJIlTt3YRlFeKK9UaSmcaec21jGvhF3b5r
qJTtlEVIbvT+I8Gbdmq7h+twI3S4kf9JHbH6HvHy7hVpilV0kUt+vWB+k01U
VsrJU/qiKLPgAvKhmkOYAs3ThpdYunRjT9+QOCiL5A2XgLlf6RoBAOArIXnD
kEd3TvIXz04NrZmdtKdy2i87i28fIy+s/HgeM5LD64q3n/vQg7EtHW16brbW
AXx6tKdoZlLIqsL8zvUlt48ELJuSuLroW13HP05j46kJCuKcnIbRVty070BA
/fbYI+94umc4daiqRzizO6MTqbaOa3SfKC2m2C0i3jI0ijmpkBUV9yXa/qa+
/geLljZr62cpqQWOVxTbOqQ2rD/S3Tfw16yk/qllGgx/mm9A8KY9ZgGzjaSz
SOSgp+4aHsghWbQ2teOMhquXNjtUmxOm8zJ16PIiSeTQFbzuXjHxybFPXmSX
VBy8aSs9Y7ppYL55yLSKdfv/6xvoHSR5Q5Hm9TUuEwAAviqGl8AxypM/JS5g
2dTYbQvzT28uvvVz6sFq6wAByRshq2ZtO9v8geq9A30ML75NIJ9EDnZWqGdp
Rsq+pXN692UcXZFSO++bXcU/R2/v3YDAxYqKXkrKvs3Nb06E9VH5FUuS2s7P
2bDlfTuQ1DFOQejMahd431I2lzHDJ8tPOji4ae/+91V5w8Dg08Gbz7pOP+46
/eRv5Y+uU487T/3e0fWwo+t+R+f95SsvVy4/7S5Ypa6dOEFJNGY8y9ImsrRs
0xtH84ou0HSJ13CJUqfz2NNmSpc2GIoKXw7kmOeS18idU5N57rKgpFrD1V+L
HUKKNuev1PHXjY4Y/ZfdKwbiRJp/jlN6ZmJLh4lfrnnw1DP9D984Xd2mveMN
+J2X3/wcAAD+4fyTouxCxW4ZIV7lOZHrSzMba+b0Hyq6eYSbH0PyRkR9yYfz
BrFx5zZDdwcLL7ZtsNA9LyL0/2fvLdzaytaG/T/gd73n/b73e7+Z006nLS0U
aAst7g7BAiRECSGEICFogrtDkODuLsHd3V1LhQotkASpTsfPnMlvp/SrULQy
M+c9+77WxRWSlbX3Trm676z1PM8qCg++VR+x2hb2UfEblaMdTTdHP+pS/nxS
UvvPnbf4+mttWVlKVdXQR4yACAhzu7lW19N3SB+ecpw2UNEcg6K3G7tvHDkm
m/3D7NzTghIOI/ExifISZvK7MY77XjPlNZjJb1DkC104B2K4qqTRLywaepaP
cOqMEWAaMvKUuISaD0cemVz4+1Xts7KmF9Uo/OpkQR09w/gUNa+Mq/AwEQRd
3i7KdfE2uXcImcUWx0efVzTm1yIIQMxfW8fu8gpvouOVdRjuLq84XjYi4csr
dcLTJIghNzg/fHhQY3PPgvYj0rRBQEBAQP5qJOVlSmF1lW3RRmFOhNxQu6ZU
3pLKzpBFMR2d6AP4xvCDI+5ogG9chsiJGqiII7UULeGwCEeP0aKIh22Myr0l
IA5h6/mT4s56CbSWOEIjeKCIvbP1aZf1RzM6evMiv8O3Z3GnTsPiP5gEOD7G
6QXU2ZUNzoFZnOzHzzPrB/kUsafOGSqq9ZIduRzO3mLd79LYfFdOpVVBrVNe
tUNWuV5GscYQ0UC0LCEQ88yIOXhiNt48E4dPxJrGYnBRaGwEGhuuqOItp0iF
IdxiGMWM2LKR0QP/ABhpxYBvAI1P0ZJfze6CMlLCjGhaVi9uFiJmEmTbP+K6
dEfNo82khIvM3LygavqNhNYFNYyAtjlgHR8ur7yKI7W/bGR7DUu06RoUxbgu
b/704UHXNjbD8v99a9iCgICA/IsyPjt9VVdJGqev6WKOjHMnlUZ5TpRHsfuC
bjWiE7wty2KO9A2/hEh5C9glVcmreooSKC1NGt6iKCxgqSZr51jTFDsvn9XP
DyAZLpJoiLqJIcnL0aqcXj3R9Tku7o9gbW0zIbHxPJ/1ufMWaAx9ff3jC1yk
MaspgzNxLfvkX7Afv5hZ2chtnRbDB11QNTkjrYdzCpeQIsirtFnb/8rh7HNf
3mA9J1qVX7lGv3TZKyGxYTf55aPP7SCMLdwB3zglontR1faimvUFZT1lmjup
uYMyMOZxZ1UYSlaitsKSn5qWcxEZm6fFNU+La5yVhfJr4t8ur+iSBPVeL68I
G9pdgTsKG1npRzNMShq6b/6LaScICAgIyCGYOtlIonXkiDA9PzKOV/grCZCN
SFavQ2uGdVX8zvdH7P2hYGms62Ol7mwKKIeIvpIkRlvX28quITH8QWvj1mHf
Qx9//7zl1ph1ZTQ2yRPtTcmo4NX6mFycwyZ5ZCy1jX7/oO3Fcvmtv/pW4CYm
sXwXbJWU/cfGPmkT2MmlZYO4NOrc3cbB4d1nAMfIa5/N71zUCGyAhLVphbbI
kOP5lFDyMKvEAt7qBuAPElJm0vIVlpTv31WOjY1nSSkdfPzks3zmsvL2X0Iz
3rC2sSkFIQDKcUYCya9uz6/hIAghXzGyETezlybRRJGR17Fx6t7DyKxf8BVc
dZ8OwDd223llBG9thTfRwbOO3YmOy6/CRy/DHEXgOKu2zuJ7rC935iAgICAg
fzDVrY1XtBXEURAVO6xhqKNpZiCtNy/0XmvY/TbryrjD31vT2qgfYIuMdTcv
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
HrI6ELk54bvYemN9dbc/zyX+lxnh4lht4mHlmAAzgZ4t8dPi7Lx8cUi39JJs
CBVR0Fx25Hninayv6iooWhoRcvz958sYnI6Ep70Jz/riH/fEbncB+hG51hx8
s8p/ttR/tsSlO43WnRYyVFQy3zm2duPJT98dNKy8vTvgG6ztz7AJV0VF94UL
lMZG3ow91BYbs1bTt3iysBC9mJHU4T+0HiagE4KqQZqO9wx8f9HzeCqP79IJ
HzdIXPZveJvDG5ddAM9s0YkqO6+AFdCyFcfHaPh3I7I4uIrfAM0g1HMJtVxc
+T9gKY+UXWtF0SHq5oHjc7dGJufFcCSvlTtyFLpO+KRR8ioy9ym25Fd4Ortl
/D0TVjWjkDree4bmn3JRwSGtbDCtopfgmSqgaXvVOEDOvtQo8WFC+ybgHodd
EU85LJRd25wbudvf/f7uS5XNnfoJXUn99z7HJwcCAgICwsMm2DNta3r1h8OS
RADTqJ0dcuwqQCX64eneuY1V1a1N1+AQZIK/dU0qta/Me6456G5vBGs04HZn
3cLbWyegHGpXyVi+bl/1A7fECkxM5P9aD8c/bCkz59dbNfxg/6yNtOIsXIJ9
6/DRtSZqWhuF1KRUKEjL4hCP4dzItRZAM+IedwM/GZsd0Rut9NXG0Ds1gYsV
frMlXmP5niO5nsM5rn0Zbn2ZabMHFs5S8wmnLmywtj5D5oKTE4Ofn8pi8fyK
QLMJXixidOcf/+11PZOogvX6vuPuUH8km0/+UdL1o0/eP3wLuP5FvJbcyGUO
cpdW3/Zh1g+o2sxCqI/0vV5AqGvSmPrzilhtSsy744xOz2kGZ+Jr5k6L6/Mp
mwnqOIjjo1W9mo2S7yOzt1B5TwwTVrTDxmRtc7UpcUnFzbvvqqjvuIY287h1
U9IC8JNe/Zgb8NR1ZM4TXfrs7Mp7ydpmnsH42gXgKK8PN7V86oqhoKbbZaiH
oI7TBRXit9KIS9qOis5V8IxtbNGvTvX/LB0+LN0bUA6EpbeySyu1hbvMeasc
zKYOk4q7jKbP9gmDgICAgNR2tNjUpgbcbEthTwy9fL1VOiAYS2v3maPdfY/v
5z2c9F9us6pKNglxA0xjt8P47PRVfTVoCI1YGu/QXuAxUet/szP00VDwvb6Y
gfdqKvGqe10xw18YiKF2fXh0++hgCazBVW0tkf8imQlMWpn30Qargseamlf2
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
xpZvNFbk43jzAhAMYV2u1P4PqTi9M2/lvgj0y3NhFqXxTL2x4yWPXqy3LVVX
rCWXPY9ef7L6tZaB1KnJOItR5umxbeixPQKxZRqrQDzUmaaUGPplaOtEKXb+
vPsnvSAspl4rrezeIdv5UVg6iJS0KDa17V1eZHlprqI8LS7GPjZSP9iPLS6c
KycVVlchOtAuhRqV30AbP12//eZ51tvXQwfoRmmMPaZZFNMslu4CH+ndYYYL
WEdyhIeG0J8t/iyYSvjzjp0FaU+sLJFlpaJdnf+DmdshICD+x8jOaGcg89BV
3bmc92cA5cgtyV5YWvjyLfA0tDDxNtLK5aXPEGfvVOBbURZ4qrIVf714psi/
JsM9Ls7Wri5ZryCS7+JY29Z8wMWN8/MbEoLzsqJP0aiHiV4NSvgJBiS1FuQD
NpQTVhSj5uT9RqTN6gTZX/MN0FsB+gKgHEsLB1xz8jXAr4hFnNY123bj+Zq1
u3HqQ2/fyuuLSwvsUvSfjW8AzejdrM9+4pf7IiAJ7aFn4ygqeN3CKuquXa2n
Q4v31W6/a0MpITNVOUv9bY9ALC+89HVPhpOnajDPqmNjRo1pUpVxFJiGPF2r
FE01nCylIP2w2T/uRZnkj14+ZCM/itKKDO8wgdgcxAGuRaNRIPr7mmqqM4ID
raPC9CKCObKS+Ye6pF88NMO8DNtnO6tLqJoIXUwX4nkeLDfcdveTt8Y6PC1k
z7/Mh2HatZ6sf3PGNtBnPT2ykWHk9NT/Zj5VCAiI/xlEeL3oSG411uMsS9Uc
arWpcSArvTk7vTUnoy3YrzzYryLYrzLEryrYt6y1aRwnd7lzq1Mevm4o6yeN
F6hFmGdM1mZFMWJNOW5FMQxk4wppmz5xFfJcVGlq19da0FYKFmGswUlnPkPP
UvOit4JlrE7kuIt7jdXgJLagCUJdyOSezvYJwDS6Nx4UvA6KQ7lFdt3VNLlE
8LvUuWOi54+JUBJLk51UB0F1+iIDnj07gTsf8X04eYo4VaE0TS0IAdIYIBhK
DH2KF3qR9B1ydM3SNNXilPkCpLGchDioGOISYJQ9cKh5nx9IenaQT4RgXqkr
TloDj/LysrQAPyt/H82WGrF3L/ZWjtG+Jux4Ra9EVzDr+MB+F+5WFSarwk4v
JHFjRvSebewg87tjbY0sKRLp6Dhs7WYICAiIoyM7o42e5PatqxU/uiPfwML8
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
TfhlUzmMIH3cXEeSLk+y8WLHM8V+fBtP49hBlcDpx/1ottdWPHQkLdmvBQri
5CoS3TWkWLClA1FcIINve7DSCoZhz4uZpEjYZk6x7sP4KozteY3PUcOW2oLl
Iq6l9q/ma4qxlIuQxgeF/Pdd6ZXoLhuwofVbU7eYUPRYUh0MVp73It11JR+4
0u+XeZ29VU1jaeod7c1HJ/1b6ysw2Kvju+kSRliTld6k60phvV/KDQZEkNkw
IOV4uXXqWZprCyS4rt40J013p2pLYJ4v40YayxoyzVf/iwRni+stxbDKooiY
IMuMaJtQN0VVCWwFSRwlDVI7N0bfEHb3AFYXX2ZHTyZ7d0YrJ3pLB7rAKM7C
arHh+RtLyx/H08bGqx891VleU/sG2TiiKDVUl+iK6W8XlS78oozzW5AWaXMa
F3KlyWNVZNaO50jTeLOrfLAkl+BL1+BDOxjFBGYlwa7C3r1Mexs5axOyW3Gs
zbd5p3qQIRxv91XAI9WNpcjPznIrSrM9h6Mslik/7fipluzMMHcHqqkh+2+7
CxQoUKD4V6EqbEL4ExvRT+xkP/NyXzYQuGothe6lghWli5thQVDlQtLjRjrQ
FPPghB4g3+D4TQdqqIwVZYJf6kY66EE2ttB38Ddd8ORgF7jFDfqC/qb+TwZ6
mitQXfLiwwoXxS1VJek1pgSBbCAFvl3la8aJDilHpAx+nRH5gjv9o0CW3yfe
R5hEB1hslsM2ho8PxkixVXAXxEImB0vj0WNBk6G+JEt9SZ3hii0cM0gC98nO
ucMFW8vzYyB7yVLYme0/Y5ORib7EZs3Nw5N8IyrAQlUIw16DwMuAKMWFsjqc
oT+Dbb0GjszT9UAaLBuA309Rjq0NBOQbDhoE4dbXy4LphrLZ95r5kOGgm3L+
gVzpkUxV2Rwdjwtm994P6WxuIm5lhcP4sKBNSBxP15hSx5hS25BCU59cXe+6
lgGF4Q0q/3CO2rsyS7v2h0/eh602NSc+fan3zbLxcGXFk5ZW/pdfLKiovLSl
NZXwbUzJCtPYh9uF7g+Kb8xIr4xLLo1I9DQIVORyBdpTdgYzNIcxICNa12QP
lusg37AwIk2JYq4r5hnrFFmfkf4DEpVHqlsPPvrG1iaiPENv6DasIp55oKv0
q1/XJkJeCic7if3Rwx+TBhYFChQo/os4GPkS/Yed7oIkwU8stBckuC7pCl61
kcXwV8eON8DLtSNq9SQb9SQdSdWY+loPvR3DbL9pCKHZq2HHWxLWe5CNupP+
jcEb7RFaoEn4xXTND+nt+e7abk/5uZrEuppbc6B7wLESpAhqNMn2XRlBIhwM
Z+qyoJlzIZeolOmSzTjTHQaxfFjT6mXMsXGb+3D9mJmRGEu5UEm8h/7MoEjA
gRfTgA1Nk+mqBuMVOziGnyhOS+xJQYZf42iIY96JbqXgrGU7hsf7oqpV7u90
ndTtBkLyXZpQO3X8ABOSWx5UjTGMI9kcO0epQSHlWDldOSBpMZbFcdUlTHGl
bE9kXqrgQS482ZKL8ObLiWe5GcwZ0Wnd/jpjcLP5QxPIOuoaipTU2CDrgAti
y6sQSykQyioRK6iRqGiRmVrT5JSLzG5oD828v9n6Rr/DZzpnvPEvCZOQkPz5
5yA6uqM/oYd+ZJi1p6uipRFJXppUVbFxZ4vv2EBqX2fy8tJAkofSWDRzaxwz
2JIHc5Ivn26EBluZ6ZPEhTJW5SNDRhGTUq8f3gCPfQ/3Pt5RfqLOYjN/bYbk
wr1T5rwcbOWsTMkWZs5XZBYFChQo/j4KQtsc2Qu8uOpClWrror7qBl8SHZBK
8h9Ohl/laC6IQcrB8Ks892V9ETQHOYybWjgpxvhFkHK4kw56kY2F8062xBzz
W7syr40HGSzqr4+X60TS7UU28fcFbyCme0EF/w8p2daTGzkQqDlkSrVgQ7cZ
KL5f5HnYf6aZC+QQB+UlR27MMBHccjVSEMAGUnlBqYWfoTRkC17C2MXapPfd
6B/d/FgqpSKA9u2dzyeAJgc6M4258jVI0lWIQLFAqhKRMz+WDQ+GGSe67TvZ
yDDi+ua7ay3PL9Ui3Y+WOuPxG5urftkyY6unfAMttQWQcpjJ49iq4QffIM3z
pWmJYxrN4ThoeV9zDawZglcnKcfWBkJJAN1eHT/UkqwilH62mPsoX6ijGWlG
JNPc/EBSZqxLvk7ri7SBjebP2kLWYWmjAFkHvwiukDieiCS+hByhmg5ZUa34
wq7uyv77eYfGFptnL79x+CtIXFz5wi+xDAwHK6dHSve3FBXYUy5ncSCzgmzL
v55ASs7YaHdPV9nqyuDi/f7UaOa1OZfPWrU3FT1o5W8vkDmuy49sbyF8PJQF
edFVFfDWEOeL4UGBAgWKvwk76SgFDD99nDRLgrIb+EXGuFk59mfNftzbMXT9
ZzjTRQXuS/rMFxWJfmJnuajMfdlABM3xXTqOFAO8PGvCBleSPkg5vMkmIvim
W2P/sjDEUNwDftlMAzvJiqjBg2zUg3SsIvfzJ8UPo1QRVAm83P/elSkLI93x
EvhZckTlqiSQcqzY0b30Yn7mwfwqSvp5mfezwcoXC4MnNC+MD3LkxvDiw2rX
JwfxMJDOez9K111PUp3xCiQMSUqER0tUjg6eGOmauMX2etj2Q/Pt9ZWK1NB2
c8o+a6pmU4pWUwpQIhgsgesvhuMuiA1Zh6cQdqgU3urkt2c7R+YaZUPb8mLc
nD5T1Gh1Q0lklcr8VuepR+ZnhBwph4MGfrgVWb4fUjnGcjgetfKDaXHktMKG
EThsOaEHFwsZW3V8P2OSXF+a4Rx25NjIlpy3HUVewntDg5TDOU+76WnKwHrT
l803NxFH1sEriA0XxJZVIhq8p7r+1GD5QG//EGnaBUVKL16fUsfta1hd+i32
2rWpgoJTj/zj+WaoOedUPEt/KTdycGNG4uFU8KcHbG0ilOVw12Y/z+1WHMV0
MCg6M1xxQudQW31NIlEBDD0t1umzZYtFgQIFir+VteVNC8lAkau2ihiBejgp
VgS37YnqkcqBBynHmebuId+g+EUAMg34ZWPhqzY0F8Qh5WBGlpg3EENzlsO4
qYYdq4ObboxfbEvU5ELS60k26kU2Hsk3m6oxE6vaF67SDgmJJWGdE3G3J9mY
G+mgJWHtp/0vT/au5BiBZisw+l11OpCXGqMD6oUOx6u+sx+IECXWYCGcJCmC
HAWiCjXSO3rk921okTMjN9lACAcIYke+iZMFuWagyhe5jdWA8RowUQNWhsFU
7U5Lcr0xJYhDmgZIgYMY7vEU58KEYHlaZKhngDhuvRH5li/T/hzyn2B7A9Ec
zgCmkD9+IdPoLYja9GHaD2De8WNCeDFCvvEsiPV1DGeOOnGMHAGkHK4CWDfF
cSdbPi5VeH64/vz8hci99KXuO9P1h2qd5WCfKOPyOfNHT7dPPRK6HUg5pGFo
5gq4jpoEkHLk+dI0xzGNZHNs1/OCCTHkKMeGLHhUAF4d31tzbYGdOr6rLmGG
B9X9Mm5wHzmf4u9A0ftJ/dMj5Wh5lrr66PixstHRHiU1NrgAdnqBwNyW9sM3
JksPdTd3kEs5HJ2UpucUn7/4fNHKqUzcvRuEdrUVF+cQcUzqUYiXTzae7o4+
Xsx6NmXfFM1U40kzn8OJnEiaFF9t5LvX93mNY3sbubu1/KvLH901OcrmYEBk
sM7shMsYH+12s6M01iGuqTxTqV8UKFCg+AfwNovlvKQpdNVSHsNPEzvGFC/P
kajRmajFBDfHCr+st2Tx1B5Wlzeu/wxnuajCf8VcBt1bHiOQ4VdZ4v9wMF1U
5LykK3DVSuKahzxmsCpWtCZ2ogFergVBtR1RqzNJtxvpgDvpkDvpMLRB7yEV
sSVqUcKKzAz5i28MNxe/SuGstaJ4msAO2qzfPv6WNN0Qz/tSQQnvs9tm/bej
6xPtO2O0J6LEHrf4vjr/gzjLx9IFhunFixUijJsgiZ+rQFSjQdahTzFuTr3m
QP/WlxUEsIJQThDLjVzrCukEtCW/e03lRWYTTecDt95tkGxA+8M4F21pn++u
QS4hQ31JleGKiwBWown5hg/Tq1vyq0UeW6VebT6CT7NhzyPZ30RzAGiL5URu
0Ryvw9jumFOCDHiaMlGl/vVEBcIIGXw/UZzuAmQGBujJ3lEZ3RbFOJ3NsVzM
tdHjf67bnBzozFcneZV4yrj9EX45MneWzpoU60g5pLivmr4b5QixIM3yoq6P
YuzPYENUIfOOHoWAgm1jpHV8wdYGwkIJF/KNokA6ZJ7Sd7nKPazJF2b+ksDN
M9jZq8ygdi/+a5exuYnILvAYXVTfeWW894fxzLpW71Dm0f6kFO7nr84d+tKa
m1uAhTmEj/9hz7PDdcRM1YPh1LlWi/vV8M1W/hcDImBKAsxLBmkTziayzpZx
H3YLLdfzVkYxTvTf/qzD7Myw3BT2D9EX46Ndg6Wwp6Niaw++Ovw4NtpddIvT
15W6v+fz3lCgQIHiv4iemAPbbyp8V0wkr7mqYobq4qRYE1S4Et9xIW63wC/1
5qo9tQfIN6h/EeW8pCWCZq+IGaSNk6yDk8p0UYEQWYVNhumiEtclff4rlqJo
TlLo3nIYgYqYoapYMTo46YZ4+Sb4xSb4pab4pQZ4+erY8eLX3FODPk++1JAd
DjK4Cn1UncSw799kBE3qYPJ8wW+vIaNotgI1AmtJUknmXG6SOPai2JkGpEuh
zCCb+2Wh/P45a8WasVyz5UB3hmF6wLECBHBixfFz3ilHpwHFlAUNwp7+0J0J
+LEiBzqiuEECzyem8e4Vep/Ig5xGCeV47sn8wI5uuPB9EsgYd3NIOQzZroVJ
4XVbUb2J5XgLeUUcJ4jnQpawT4UhF6HcgoMsOPI1DQbtLNclA4UCuRokkG9E
yuCHS+N157+XDU8dws44pvl8zv1a+Ks2/jd3BV/3qf++e1J5u8OHa1tLA3sr
g7tzNY83hl34MP8IYTv1C6luKMkbNhxcPMcDDrq8uBArSe6rxrLIWI4AE5JU
V8rKMPrOFNbpQs4ndwTez61A1rFjAg5iwYvJT5tHeCpF25Kv1cCR6cq35F72
C3vaUjz9q4uub66xiFJmLXhN7xz/dN7eG++dUl57anAATBGH+kNzqh09aUcf
OTgqTs8pnXeII97UpBUXp0cJ3lVq1Jol1ZTMMpDHOX0btlgL3+sQfDko8npY
FJlifUK8yJe2P5yxPZwRMo3xEu7WVNaK1GMiVCF5sDEj27r/vrJ8hK/K62mJ
iY6vLouG/KSvWbA4k/PBAqoaLAoUKP5dwMilWZBKoCV81Uoe3VcTK8YQN8OO
sM6dpMuJqMWGoCr3tEAOyDfof5WGXzaSuuahgR1nhJdrT9Rshl+sSOfITS5D
9YsI7QVJhl9lWS6qcF7S4blszHflhuBVG2E0R2E0B2E0e+hVBM2J98qN9ODj
56O76wpBNgws1UM//8vSQtscqEEODLRpnNE63g5ngDpBUK7cFa0drIQPyYYh
HN2cHyPPmGwvng0U8IASOCjkedT01f+Hf4mxAK0W3RVrdnR7TgxnbkxvPuxI
UbxMOcIKNdIOffJxc+plO7p9V8bfvVmAPytyuWsQOwjmQOpHMDvyfQDrK28W
yEmW7Oj6jClz7RQ/9AzdY2FCMKQc5lzopbpkyKptSdwgnw/k84MCflDIj8wd
WiyAfIX+zIEEhqdUhxTk8k55MBRqkYRL4a9MvJ+sD3ZWqA2hH0lng2QD9AqB
KXEwJwkmxN52CDxeP375z90S18ogutFbbAcNvGBAuCuRpViTdCFB/9QvJKMs
sHTG7CyTKZ8yO9UT7UEFKYeBFLaFEp67HmGMHXmBP21jDGNfOtv9Mu5X3YLI
2AzIKNbflVqDtl0TsOfxDLqXlXcqAm0bsmBIJN6FMsKH5stTVNaX2Wdq1O0f
U35ucaWpZ0oZ0oz9tyabLwxn17Va++VHxt+vWtrcRKSmw17+cdZc60eEq0pP
ExLUChFD/jBSxAVt96vh6838a818220Cu3cEdtoFNlr4EY18KVbXl9LY66KZ
7qSzFYXS3/KlWTxupcnWJkJUAOPegPg6Yqi5rgBxR2C3V/hw//jqOfnZLuPd
oh21/IgHJ8UOoUCBAsV/BVVhE4qf+SDl4LmsL47mpIgRqI0db4ybA8mGF2mf
G3GH/2k1UCDfgJqLoNkqYYbo42bcIChzJu6wJWzoLJ6DPooKSFUTMae+IEZ7
QYr+VxmGX+UYLyowXVRivqjMfFGF5aIatEdT1PqEMq/3x3pALgw8qD/6E3oi
3zSXHfemB7f5QIcmcv/WMT/YkdMuoxmgWgWU8q1kGyKmewPk8bxkcG1FsJRY
rtgIY1VZU7y+xYWUjUo+UMEHvXm1dtZFuB7akrLkv0GbJt0VM1Y0R24MDzhW
qDBuijRBkTJxk871ARPKWSuaVXv6HWeGAzfGxx5MTz2YHrszQe93XRgQ9nTQ
pz1GlDUaZNn6XNtrny9kgO7RSZbRiR/rti7Zli8TckwjD7pCAVAqCMrebdD7
wne+kcSN8GRoMCJ/cgtebseL+FM2WmoLWmOYOmKZ1m7DQJcguCeJDBKYEX91
RwDag+j0+/Km2iujbwfSDqSx7tRAfiIMFqT6M9gfuNLXB321DPr+zurGYv/j
zeHMctnyDtUzfnsf2NlGpIUyTHSo6SkwKPGjG8viOGgQBJiSJDlTFAfSNsUy
9aazTRdy7jTy/gH50oQY0peWpJGmcbRBHjIl/uyuwJ1bknqKuB0Nx2R6X99c
M3XWTZ5waV0u/rDz8MnmnT7nnknllUd6e38YbzwzXNzT7Z1SLqgS3f8kxX14
hO3MfaXHz85agCYpSNWQ5MoqMVGhBHFBMH1jIktnJntfLsdwAdd4CfdUGWy2
ggfaZsphhQF0U3EsA3HM9QnMOf+PvbOOjiJZH/b/v++ushDXibu7uxN3IkRI
iLuHuLu7uwtxd3cgkJAQ9wRfbKG+6oRFQiCB3Xt39955Tp05k051dc0cOP2k
+q339afPCRVbmvtsrFRosFVhOtejddM4H2H4DUz3HY/xAIda0lZntjQt11Gv
voyWDTRo0PwtOSqAQvOdGMePyFMVGQxnNexgXbwEE4K8I+XwIO0rcfzS9tiy
3Fqx89aKWL6X8dItiaqcSTrcSQdsiOt3Vx99eJWBrrGy3DoXk2B9KSd9KUc9
KXtdSdsY//TTZ3hzABTwg6XGDw+2VRcE63NsR7KBYkHQKAb6dMGIAxgLAbey
wKA9aBEHDaLwrL10+Z07Qw93Vv0OZcNVBs9ECEufF8NJGrfWhhrk8YJyQXBd
BOlcJ/Ko2uxzczhGW0U+lA1V6p+PrAM2I5bzTnxYASJ40VIE2UrElZqkLXoU
0ChGTWmmzGhnLGhvWNBOmdPCH3uNqJp0Kco1SLMViWO1OG6NnJyw4mihw5wX
M1MDNefK+DiIDXmeknL4PAW2ZF4Qy/0kmH3ejbHLnDr8EsecCwOofy8Gdnps
BddoB5PYkMWNYQmwJA/m5dbKeW1UCYKukIzWHM+qMT3eW+5P3xjOdLeY53mH
CHJnX5avcKYFkVwVHrSv9o8b3cHuapavcJwdZWcC60GrEJKTfE4W3NR7cOvr
YnqjAjXfrF/ZOgznkOVFUnMc7ltBrCPRiSrXm64yhLEphqU3hX08l3OujHft
usBus+B2o+B6ncBCBW9XEltHvsHO9qq2En5tkdGJlxiZGDQMudjyNOX+UyTX
+uhUdm2H3MRdzZWHBpvPjFYfGczv6E0saNX3yFfW23x4IhLFkcr78vWZljhS
o21MVQn0ic+tk5Lki6NSPGlLQpma4PTSOKB1DORyQfGAr/05XD2ZnH6XUTt5
3PH2VKmetIMtnw0vOQK6hKgg5kCz6MKA5HSD6okdZkf1Hq4oXy9VevCfLQmE
Bg0aNF8FFAaoHAzfy3D8pCH0i6kchqs6dsiRcjiTtHmTjXiRjbTFfDaZgLtJ
uPQFJ02cKFPCIntUsxfZmCfZUIzGV8f2fw7EN0oEwXLjsePwjjwz0ttbX1Qd
YzeWoL8SwgrSuKFjbKbILWQZteZHzPx+Ky/yVg9XJ4K+4SiFay2GbSqE5SCF
2+9OjyybVAohstEiBprF3uTw3jlzSsmiuCCoGYbM5y05MODrkXVo058zY8fw
FMSJkSbMUkIVqZKUqpNWaJJWaZFVapIVq5HkKaOyFIkT5QhTdLlaM8NPvcqR
ddjIMoVfJByxpb3lxLDowTTrwjDtK97vIdoTfGm8LPpo02tNWujzYHYwHHJ0
YqQFeaEX7Xg6+/16ASRgYFUezEgr8F1Q5LtgrYLfnH88pUNagAb0k54E1vUq
PuThy+HqQZkRBTScmgCGnRa1Dzsv3BrwMkA5XSI6akEWZCXBDGBQ/FWf2G9j
Eq/nQ8/4HUJuzvTf6RQFLxChhdbhYiGvIYZ1ZB3W6gQuesRQPKJtKVJcqLM8
aQt86UoDGYr86fO86aCKJDtTZYVqHY1zWZstM1byc1cxtNGO6bGo7fe63q7f
PqI0dU97+cHl1ccGi/v6dzZ1x+Y1W4cU86skHjw8vsgWHmF747bKwyenh/ck
RVhflse7RPjzFilJGRdRuB1lujddWRhTTQxL3eE6RmMiG3xTFcUc70ydbUP5
oIg3L1Rs7uaZdqrmZoVd0UPtzckvzX0UT4UsazTHvz5Qf7Gj1lTzpR0raNCg
QfM3Ido/9VA5ZKFyiPxiBpVDDTtY5/DBiiOq+RrZoDf5WKTgxMInOcY3lndk
MVyVsQKM8LNtieuvkQ37kE84k3TeHji9FsYZQXwDWsHuKQmZj/Rj5pPlgraC
iGgt4jhtVJAKoasMnrM07lUhLHc5vCk/RsQ3qoRAkxhoF4ftaSrXSOVX7B88
Ug5jlgsREvgpckTxMoR+wrguvFiKh89Z4HHoHo48WB6COL7CuN5CuD7CuGHq
7HWpoZ8+QDkV+OlgK0wLGU9hB6sn/yHfHGOPhJV22reVRHkboFIdqXrjWbeq
+cGEJPSN/SHt7Y2VsuywRB+1wYbYD0+cHu+NtqYo8qYbSWPfh34yLQXWFBq8
GeBorVY0xd60N3K5Xuy9X+JIDtCAmuGsQ3QwKXmkHNkeNGku1KX+9KMZHPdb
hJ7MnDVZ1vbWSm6cFHj0/lEItI7oQEs9GRyoHKZKeJZqBHZahI6XiKB7eBig
rhmRXDNEuV0mDrDhqSp4L2yONoqhnnQj/SkVdda5ZRoFlZpdgyFjMzlj09mj
U9mZxRrF16VqOy4O31aHgnF3R+/Olu7shs7MsvboHQ0oG0W1koNjJ4QDbW6u
xCXyPH15ei4OD1tFTSlsdbJzO2QkJeyEnldIw+0p067R5kA7CmDIC2TID2TI
9qPP9KVz0CDcyOJKdhI441c0PdFXEsViZUCSEMayv6h4sB79/MkMNI3Guljw
WBM81bo5rDsy8HUBz2jQoEHzF3KkHEw/XOQ8XOWQwXBWwQq4hBtnhJ9pS1zn
SToARQK2Kud7i4MPjk7ZXN6zvRglj+llgBR1bfQkG/Imn3Al6Z0b2PkTJzaY
5QyaxXfmvyXeHt6j4y6hYrVRMVqoUDUiX0XkqYqFCLa7HP56NBviG9VCyOJG
pwRsz9K45ntPLk3+OY6Uw4T1Qow0YbEqSa8h1aIN/bItw7Y7S7sVXbsNQ9FV
ftgHtpmh0xNhnYVAByXQLwb2Ck78sK3Z4SseTNupfG0+TJEW5C0RTIvFPGBE
AlmvWDte7esdrXWF8XYUJb50k1kcBw2C4LbsvVaRDU9mkCVwWRw7yJR0Opvz
0Wzmu/5BNrzQMTwNUGBF3sWEMtRNWFcK21AOx0adIMKSvCmSeb9B4Ned8TN+
oqrSyOd3Lx4tcRyxs7lSG8a0PSDW1lBYkReeEW0T660W4aHqYcoV4akKf6zM
P740BO+/2mqE5vb0rj6swTHc4Ql8aQUiKXnC5Y3SxXVS1W2yvVMqsI3c0Rif
14RtYkELvu+dVm3uV4AqUlRp8bnphUfYTkwrHTw8IWriQwzUmJVEMJVQPx2Q
kZayEtrqELkbkYTYUMS5UMe7Ukc7UYXZUlppEWpJYRsoM6dbUoAx3ftnqGtT
URgxUyuw2CpcnnE5NNjK352uo1Z4/ZY8eKIFnmnPTegP96NNAw0aNP88jpSD
/nspth9V+M8ZSl6wU8T00cSJvIyXYk5Y6oRq9SQbhMrhSz4RI3TTlaTbhaQL
Ng/SAU+yYS+yUQ/SQXvipqyQ2tOv9DVsR7GDFnF4M/2Gc3M91dL0SfOMyVP1
SaO1iENUiaKMuYItFXyUCHbj2EEuL6gWfusbHRJbMexP9k6O/P8csH+eu5oV
P5a7GG6yAlG5OunwFep1e8aX19hAKBdIEwKF6kiCrz+P7Y2V0mBRpLTZ/skp
WEsTQ5qMKUGmQHcQS1UAw0w2J+Inixe/4BtR/hbQE0r96KeyOR82CSKRon5M
IFvQQgj7sjROoAlJdzzrRsdHd+SD3dVkD0GwKl/QZQV+TxmqJIhxVQkv0oq8
P4Vtr139jJ9oZ3ulMZcbPHu/hWRna6UmlBH5jF/DNW/NSwYUesZUxuY01k6M
br6svqGcsWkCueXiOWViFc0yDT3ybcNKXePK3RMqsLUOKta0y+VXSaTkqHxh
2M3NlfgknienpTeXF8SQ5rsgS/Aj9I0OWiJtaRxDRTxzDYKragRXlPGNlfAt
tAnzY1m2JqTARpSbIcdBAe9+z5fSoUCDSo/UXmoT6cjh6v89xgMezMkKs7fk
batVG0GbBho0aP7JDHSNQuWg/JcQyw+K3D/riP5iIYfhpoodpI0bcxkvFVqH
A6rJhaTDjbTXg7TfHWl9rqQ9tsT1ZoSl6tjhnqbRf+585nrKQYPYUJ7rN5y7
u7ECHSPLiCzvCnn6ZdJ4HVSyOe/dqf5EH4sIDeKdOA6Qw/t2faNLErSLQ984
48gPdlYHK6Jz7fgzjciqbaj6POlvh7DMhbLcDWO5FcB0w5Vh05HxlRfbYfpQ
IdAa+A2T/wK3JvtGktmQoiE70Z/WcH/5eGO82iNSmehFMPvjfKGbqZyvOkSQ
gu/Lx2M23uFqLh9qRlbiSwd943GLUG8IC0gXuOfNIst9/pIElos2UUMY03r7
R74xuzCe5scM1hQW1qaOjkBpgcqhJoxppYqf60l7p4j7yZljFxPCtMHB+/CD
7ubiqTwusH7yY6PPIa+KUtMm09Qj10YKv1JC8TC1pnP0ZIHWEZnElxrHV3iF
sYaJuEWboTlRuLJFtqROKqdM3DdEemKi/8sjp2fxP/r1FN+IDLCU5r0gg//j
HhlpOy2RugS2lhQ29I1sP/osX7onQxLPRyWQkNoVBbCuMFMnEKaPAjcur560
BxbqVmttTF8hz3KHSEmc1OKdM+WTR4MGDZp/HE5X/Mj/Hy/q/ziYvr/I9qMK
3zkD8fPWshhuSlh+6tih2jgxOrgJ0D0M8TNh08dL0caNlcFwUWN0Gume/tMn
sxAvCxpEv21xY39rJVEXlW9CXmBCnmlAmm3DD2UDHvcxlY/SIl6JZPstkwfZ
VNt8uL7RKLqScnptMmga1bF2rnJ4DtK4VuLY1xTwQ9SJWp1p5sNYYLsXy343
HHkze41xzZ7xN282pPBrwVn/0j87e9srxVHaM1mcYFoPbOS9+XXz9cHkq4Xs
lVrlO3nc0Ebkuc9bSeIMWNKADIEXFcJgWgasftbZvG0VA01Ii7zpJjI5+r0Y
D/OJCSpynVcSuKAvje1riOqIZVlqeb95Z3RioH7FuiSCDcl98Ttt9UghNtgu
y+CEmZN1xrNufT4H5jFmbwzcbBMBLzrh+9sz/UMZ7GBVvrvc7exfyMRkv7Q8
kbwKSlGdREWTVFWbTEOXXNeI0sSKzt6a3kWA0P6Xn6/8/CN8DcG8UIqHc5ON
fI+TKo+PdHPz5MTjH5Kcxrf/wP/LfbY2V6BvyBL+uEtG2s+Kyg1gGMzjnirj
na3mv1sncK9BcKVZaK1F+EGfGLL3Z1XB7TLqaSnfy8b3gbjbWyvN1dHlsSyz
9YJT1fy1SWzxPsL7u6c/c0GDBg2afyiJgbnMP8iz/aiM+j92mu/EGH+Qg9bB
87Ou4LkrYuetoHuIn7eBTfS8pfAvV9UZXTODq4e7Twnm/DZmu8tAicB8hec3
j/B4by1AmbDZgXrt1vs/Ei0VmBJ0UbeDmJ+mcsHxQb0IaBOHr9ulJl8eras4
CgqGkzSepRi2NtcFJdZfYPNUwD+SjUZHGlAp9DCTG77vsaQZNaFZtWMAkTwg
RRCsfSml5zfT2VjUkq6/U80PJqUWiniaw5k6U6RHmuKq8sM9rRVM5XHdtAmz
r5Dfc2MExcJgxOFzcap+9orehqgcD5pGa2qQJwTS+ftyuCy1WbXFsYzlcH0M
UXUhjO9SdkDZaFizqZwzb45iRvKNfzAZJQEM6Bsaopg+RqjuBNbZ3qSzf5aG
Annw3OfOTH9fChuUjcYM/a/6Khoai0Wl8CVkCaTlCWUUiOSUiBVUUarapJcM
KEwpMLV+/F72u38p4/5kcZHEVJBA9fvvrM79FIeFAagpQELcqYMnpvCubpye
Di4/I1SW4McdMpIuJqJgG4qKSObrcazNyWwd6Ry92ZxD+dyjRTzjJTy3a/gf
D4rPVPIH6aFAkzAYunRvdrCl3H2yin+ikg9qRoy3cFN19N4ZojvQoEGD5h9N
YmAe+48qUudtL+MmKmJ6kf4/LrrvpBi+l2H+QYH1R2XoHrCx/KBE971kQkDu
v3Umg0HioFzo0y0nZ6errjBQmXDYk+HDg2YXGaO0iUe9GZBHKkdbVFrEQIPo
XrnpF4bK9FDzViRwk8OzFscx4MfU4rqgyXlehe0X2BL1SaBjlFlS3glledks
GqdIlChLWKtFNmxM/cabDcTzg+GvS8B+dpAKKY1FjbnOtYUf1S6ZmegzkMax
VydId6bqjmbJv0qxeY0ZVGiA6exPB/G0UnC5RFR7lRLJYprM15PGAVbkjeRw
DWVwbFQJ0pypRtPY1/qQYIOOgdrmTduqeYuFtamCKG2wafxukBAX5UsSWFA2
9KWxo23IW6KYN299RV28lCjtO8OXpvO4oGw0faVsgMMoCz4hHCExPBEJ2PCP
3ENWkUiNB1f3xx+sKDCNdCks7BksHRiMzGmMzGhik4QcrYVzcLEALSVIPCUD
Rlom/9zCmaS3MCBgm4yknopAQQjTQAHP+ypZujddpi99fhBDSRhTZRRzfTxr
UxJbZwbH3TqBhlgWXWHMV5UCz4clJ4p4YtxpGquiB7pKT78MGjRo0PxX4GES
Bn1DDSvAGdXsRz7qJJ8w0DUa458eH5DtZhLiZhIaH5BTlnt6XZU/yM3OMpDB
cyfj64IGj9FTV1RoQj6edPnDg+7GctcU8NucaedDWX5N4wJF/EjKr0bRh1Wf
zWCQ7amWoIvyVyH0lMd3Rcqv4JiLYJuJYJmLYluKY1uJYztI4fbUF0XaKoEm
0SZLai9BnCRZwhotsi1HJhDLB6qtzzLbp/trs43xW+NfqjN+RqCH6EliG8vh
+hqi6kMYHzUJDaZy+MvgH/iyglL17bHqDzvnuKmN2NIiCdJjuTsjmZHCJfcu
JjhT2aoRuOkS5XvSjqSy789fL6pOat9zqLvjfhSz0VQeBcYl3pU1MVfCM1HA
NZTFsVDGj7Ymb4xg2pw9a+Tw3vZKYcwlZN/uotzXrmy846jE/LsmIIorJoV/
mei8+bmftBVQypok8iooDV3ynDKxzaeG288MR+9qeyYqxWNhAhpKYHj5c8NO
TPQlJPPenos6yxygb2yRkYwK8bTUFzpbykvzXtCQxHa6jAq0ogiypohypEpw
p0nzossNYCgOZRwu4J6t4jOSxtnN4z7ol9hA72lFgwbN/xjuJqEiv5hewc/0
IRu6RtoXZpH/l0yj118M5PH9kcUNSEagVb0t9WjuR6EL0DccpXDLLShHvBg2
otmRrOZlgqBa+GnNyflFM91Vs6+Q1dpSl5hTZBqRRWujfJQIXGTxnGRwnWXw
nKRxPeTxjxKFtdUUbMdz7JUJOvJgBYriZSkSL1gzgBg+kKt24sjv6CmNirjC
FaROVGFNdSuE+Vmp8pPhtD/ywZHJ1BVqiWFZq+JnuFDfLeIGk1LD1z0bM8NS
VIifBrI9z1LarLg2kOzU6Sx8FLBx054+wYpiIpMDDCLJzLO9acPNyfI8aYdS
2G8XcIcla3Y/dK6YdLq7+jZAFErCXAkPeFQE3w91lNioEVirEdhrEkZYkrVE
M/cmsZ1lknCQ5kKXB+1Ipu61Gv6S2Evf/Hk3N1egcvAL4wiL44lJE8gqEsuL
4Gn/+EOkMImdK1NsmkBjz8X2YcXOUaWRWfXFPb3l+/rdk6oCMjS+lPgvqciB
tMSJw4aE6fQMXNzeOdMTw6KAgE1SklXNt6ndtzZXkDhSvgvKYliWmoQ2l4gc
9IhdDUl8zciCbSji3ahbU9gX6gSMZHBuxrOBKemd4bPmTkeDBg2a/wKkaPRU
sHw9SXt8yAYv4URN9N7+z8+htyTqSSLnSM5nt1ScEVcN1h5XumNZNaBv2Ijj
pBmQNjvS3Apk3k/gQArAlQo8qj5hfaMsyjbdkHTMl3HSj7HXg77ejrrUgjLD
kDRcg9hLAR+KxzUF/LnJt1lJkbonMrigQyJagciDHydBhnDTgRHE8YMEhU9H
PuLBzmqhj8Y1RQIzUWwLcewEfZIRX8Y3+byglB9Uq+6cVCzjjGxvrCjwXtCX
wg42IR1KZgN9YmAO+St+d2OlOSu85BLZthfzqxAOEMO97M5kJYFjoYiXaE/Z
Gs28VycAbstMlPIWe9NNZXEsl/F2Vkn2PnGpnTi+0aY1+zLYQB6phNjyOmkT
ueoQBZiQZLnTNEcx3Wn3/vL0oGl0lLjuNQmCGamVar4kT8GUAAbw61dUzTsR
aB2BwTZ8QjhScoT69Fg5uFgRvuyRiXyJWYJZJaIF1RKldVIl1yWrWmS6x5Un
5jXHZq+ZXNWwJsICNJQ7TpdW7s99OFpDY3F2nuDIuPMZr55kanqfnPSeg/2H
B6F15GeGQuuQE8DQk8czUMC7ooxvrkHobIBKcKNZahTcHpU0ksbpC2YCE9Lb
Q+hVDjRo0PxPsL68LXnexhXV5kM2ZENUURja+pdMo9aSaj+W49u2pXyIqRDW
oCf9h8GikKLk4CuCmGHqRCVmFAOe9EsRrL+mckPleFqodOz0ogibaG1Utxsd
dJKdOA7Yc8qfqcOFttKKKsOQLF4XFaZBNNRcfGzwZxncewV8dtxYMVIEBy7M
IEkAqQl7Eks3ByK0iKFsOMniXuLBUGb7xU+FsM2VFvGNaiFwXRhUCb6Z/rqK
JB/iai6vIohhqYSf40azWs77Zkxy4+7bumDQOvqvF9WlhzVmhs+M9vrYKRpf
xPU2QBX70N0p5AaTks9npPsSWGfzuBaKeRoHL1UMnZAsojTFAczLtlREeV4m
9jEiibQiz/Gg7U5gHUlnP1gd/dysDnZX24pdD6BpjEgslPHGuwncmUH2DbUW
8oCnp1jKGYHWkZkd7sTG0EWEr6pEbO/G5O7H5hfGGRLDA90jKpkvMokvOUeo
ofvi+JzG0xe36qpLCnGxAQPNzXD16Qed78bx8RPvHby4tn7W3GXu9HRvKCnu
FRd/+qt31qEghKEqjqV7EddUjSDUjnKxQRCsKtzp9i1MDekOZATjUpuDaOVA
gwbNfwk7K8fTkr/DUjbQnaTDl2zIlaQ1QPmvCV2rjrG7F8LSn3nWPyq/gJUY
dr87/cOPQ/3h7VWb64KXAkGyHkmDPc20P9NWLPubLN6XxcofdhtsKk43IL0b
xvImhxfk8L7O5nmaxrUZy34zkLnTla7QjCJKi7gp73iiS+hIGUZkoEcySJag
SIUEhHODZME3Pidk9li6MRCuRRwLpUWT2EUOz1wMW4X9F0cZvBo76t/yeBHZ
aBIFzaKgTfPht26K3N5YkeU+D5XDXYeoJZIZ9Iq+mT05OqIwI1RTDMtCGT/M
nOx6KONunQCYkb5TxbdYwjNZL1k7cXL2ibkb/W/6xbrzuMItyJMdqXI9aZui
mIfT2GdqTt7pc393tT5Nb66U51mXyEw+V7Qzf3/b+7KtI9cFXz04fbfI2YmS
kx1CEaorsfEJ4cirokytac1t6a2dGOxcmZw8mR3cmWLT+FsHFOY3kOiazry8
dkL8XR6mtgaLyX2kJnJuXkRppWhTq81p13lLe15eJOaFXynIHq18do8t8oQl
EHnCoiiCqS+Pl+hB82ZaGqwpPpwN2d5YhsrRGcAIxqTW+r99XQsNGjRo/hLG
em42FfTP9C0e/ZgWVML7s5Y1+wkbFVeXNsJVGzxJu32QMvTtRnhp7876D5Nq
zrsYzPLHFzd66oquyeN3ONEeOw5HVmQ55ySNG6xGWHSVoseNbj6E5XUWz4sM
7t9+r9jV31AUrkE8H8qCbJgtFwQVgkjl+ny+X9O5V6PZRr0ZcozJSiJtT7yu
u7EcKOS7F8eBRIqmCoJEga384/VYF2f64/VIYEs3Jsu6QhapTeypgG8niWMn
hVNqRfkyhwfUC4M2MdAhDl9/7T0l+cMXKEgPgcphKIOTYEu5Wc0HRiXAfNiH
HR7srU22JZT40Fqq4KsIYUDliLIi74xjedkl8uqGdG+5WNPsZ+uvzd8ciLWj
OGgW6s3kqAxkaIhg6k1iG0w9vrgBL9FbF1sXKzmdx7VeK9CRwBJix9vX9tEi
wN7u6p0usfWP5/YHiZGTvU1KvLm5Ut9YrKrJAa1DVYtUQ4dMU5dc15DS8Cq1
owdzXrnYxF2N5XVkHa80MPAWCdE+H3PbglfXbFVQCHtZlejK6lnTw3bn5w0Q
EQwSEny5W3KYVl0S22VVZk1p7OlyXqR074bi/h1kB9ORcrT40oNRqa3p6i+P
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
44J5m/JC/u1l1/4ge5src5N9sN2ZQBr8cXdzZe+w3Z7o660v6qkrrEwPrUgP
7aor7K4r7Lxe+LWXgMqhzPoLohwSOIEqhB0utDcDmX/L4XmUzDXjxxSkQKDN
9Is6zTkj5vOwmbNjOHBjefBhewrg+AjhBorgBYvh+Qvjwvce/DjucsxlCcEz
Qz3Pb1+fC2PJNSV/XSe8m8hxkMy5l8jxOIcX2edy6A/IM5pGEVAsMO7PmGpI
evf3LaJBlgpu8vi3QpkfpXMhKc3rDrWnVWw9/oSMYUd0FEc5yuI6yeF5KOLH
XyZpc6e7n8b1poD3TbXqs26/52tnTR/xDu9gh459x5HFymPHtzdWZsZ72+oL
i7NCoX58+PzlU6Bp9IWHvqCnQEyDnjyVneV68AlJw/Z3V9NCmeZ7xD5c3ICG
UIKPvS0i8LUzP0bp776xvjkxPZt7vV22d0J5elFr9YH+5lODtYeXF3f17mxc
Gr2tllsudrS+0dBYPDimsL6VcDTC+uaaUcjF9uep4zNtcJyCgIBrUlLwdebQ
YdzNue10id2MSbzNyENsKePdaDJ86YtCGatjWKBIdKRz9OdxjRXz3qjkW6gX
XGkR3uoQ2ekS3e4SXW4Wmqnggx0GPg7SuD3Zl2hC9qSU71Z/+acfBw0aNGj+
QawubUT7p1wzjeT+Se0yTqQTUcU17tK1pc2/el5/Mdvry201BSl+lraSOC4y
eHkm5JWuQl3FUQqUP2nQnjNgOm/MfMGKA9OJB8tLAMeUHcOEHcOUA/MqB6Y7
P7aHrmxRXBBsUDOORnva6QcFA7apAKaj8IwRH8bpQKbtBA7EN/okQb8UEhnS
KLIRx55nSr44834XRoClgutFPCghG/HsyDJLhSCiHPXCdyNYPp32/e3VDA81
KBvmYtg6vBf0+TFc5fFLrCgPUjmRRzb1wojStGmufpzO/VSgb3Q9dLm11vVt
X+bu8nJ3WMg+LTk0DcBEVczFNlDw2ZJ/SZHafZUCVaUfVV/dXl6KkJOZJ0d1
hH4pAvMYM7dzR2+4jc9evb3kvbgWv7rRmmWrARioAxwYr3fIdY8pTS1ozm/q
zG/p3NnQubWqDdv0oubAjEpdp1xX/9sLQd+YX9JYWIp9N6xnsFN4p2XvkxM8
1smUy1yTECqHoz7K04QUKkesK3W6N11+EENZBHNtHGtTMltHBmIdo8U8k2W8
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
lUiBOzvItzjLrJCSLofbWq0kcHyUCVKNSK87UI/5M66lciKycVS+bVAKeYXi
0SiylchRaEGZ763+bgRfc3k3efy7UaxImMfRLpVDRXmRx7N556N1iVxv9UAN
Ih9VQvjqKo9nKop9RQRLlx/DSBgrVp9kJowFVAocZgwTQ9rvSTw68vPKiXGB
nBhITQBfz9REH/SN7ETdrT/2pz08/bI2W1YUy/7ty8+fIsrR0FgMVSE41MbO
UTU7N6KhqdjKRllQBFdRFVEOLT1yQ1MqKwd6V2/mpEyBjiGF5X3dR8+rPh15
YqKvZ/DivRWvs0wj2UM135Yyy+V9KtSGjurcBc8bKz35maHQOqT5LyiKYKpJ
YOvJ417VIAyzp7zXLASW5bcmT8i2igYNGjT/C1TnNdkTFjUUdJ/e9S+lNT7U
hvy8IfHPmgQ/BtBirRuIgJ3100/7hO3VZRd2rHtGtCBM/vX+V48AlUOF+mdH
bixfIdxkGcJCJdScBR0I4f6tPeX4hdaWMzW5XtqzgCQVcP/0mjXuV+Sgcujw
YthK4YRoEBWYU7S40K5lcCELGv1SSDDGEPJ8BDQgslFhQ1WT8FEN3HhfCwdZ
3IkgpvtHGdHrRZDnL1BUSvi359/7RoanWoIBSa4ZRZ45RfoVsngDkmBNIkc5
PHsZXCtJHFcF/OtONC8LeJFAkY7D07slHnX5HZ27u7ycx8kKWKhB2ke1P/7D
QOWICrVODGS8N6KzMZ+9vX7Cc6vNzZXAYBsBYRwpWQI5RSIVDRI9I0pLe/qE
dP7+KeWlPd25+eMLNdA3KmvF17asT51AeVZolStNrg3lyuz7DK7rm2uOWVoj
v5UezfDIOi4KYcoLY2pJ49jrEfflcr25IQM2rvyxT48GDRo0/1RGuictCbKK
Qpv/6ol8iUQdeQ8qDHcBxuro4LLIoKqoYG8azNfmkgdr3/LHMlQOJ3GmAzMG
EKMMvlI5oEW468iasFxw5kGUo0yV5LU/J4jknQzUObFzpofFxlV6kKIKuk95
tnK0xKHGcd5E+O1TlSZnmt1M7re1YgekEPGoElyKYSu2pLz3SS7KopRga0mc
Xi+G9QSO3/J5kajRZlHk3GL+1ZG3JVFaCyPCtImr7amb3WgbXWhrHKmLrSkz
Tclj9UmCNIkCNYg8ddjjL5NspXC+3eTSf5jHo1u8vylp/+EWHGFnebmahx0w
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
X8crkkMmPp1scs/TKlYlPXn2n9MopXknXXVHdf6Xebd/91nsHd+Un2WGS38x
cvhqt5ym1zq2U7sV3aSpI6OP8n7rjndGSAoHqt2/9v4/Qwl9FG+N1btZ9eaj
iWnBUfHH6ZLWczu1X1sXOQ5aqxb0V91rpSKMNTpkrXrnb8s/3lNWmOei+GOo
Xuu1XeWTuyqEKreaqthimmKLGUotJyu12NxL5dXN6pqKcq+uEmGkwevoMQ36
XM798/uqXsqS4aFYB4oy/RZZbzzhlfckTJo3XkXuuxO0+ojH3MyR4alD5ma5
L8v3TDjpt/WoT/Fie2nS6Gcg9DWQhore/wkbfd42/br2n9QhXtBLIviN+voi
a8rLE51tBXP9l501PzjsIF7gZ6h730RDGGx9/+g/xLMrhfm3O6kLPfVP539g
T/ftivLhLX/I1JS/S94AgMaQOnvroGauFj/aDG8zLVhxbbRyimsr35DxERP7
B4zX9xveaoKYQALaR4fJL4pVWDlbcfXybqmJLhkr3EcJU02FSZ2C1DyW+qzZ
M/9g1vzchQ7xc+yWObUYJSYNnf9jPFh31ImGnSzaWPZvSRLzxhj15hPrIsdM
43ZLzDpsMFfI6KNSYqt+emzv964/vjP1+GDNvOlD3r4S5+9pJ/+Dj1bLIL3W
C03aJ/RQECOHGDayLFVuDdE95Of6jzVIh1nkfpA+oV6j1UT55kPb/DhFueUa
Y7lzdprljtpCQsSbyyrKI/XaCh4mNcn/vMpxQlfJ1p8V/6iS4T98s1f7xmxx
SbswafmhsTFbh05b4xiTPmLpIY/1v07adGnqjuvBu+9G5DyKzn06c/+TmXvO
Bx5YYHvL3kgaKuqDR33AeJM03m1693rq1EeOFye+agPsdTFgdJcI5gb3B1rc
+Pgchxg5Rutp3zJWF1ytbyyP+9hlokO9u4phI3WS9wd/u9DeZnK75tnDHL+m
ZgBAvblecQOaObu18lkZs6bqavXymLXj20XPUtm22vxgypD8HYHFmfMPHU49
tmPjzpDx4f4Dgke1mRYot3SGlm192AjQ6O3XLmJSu/BxbQKHt5zg0Hyk9U9O
xv+3u3vf8Rkbd32TT5SyKNZR6Ud3teZeWi0CJK1CDNrEdmq3yUJpi7mSMMLk
2TvPtrh6vDDRSqnSXffojj83t54uyrOV/2GUanNvzZZTJa1jjdvFd5Xb+LOi
GDmKbdSuN2xGY4Zz/wkKzX3kmnvLNQtRa5Uq3m6pcsJG/Yyt5sPc9D9LXRB7
rJ+aEGp3/ZNrMw5sSYrWb5s7cfDn/zEapOb2tWXJMz1j+3jPHzB1lYMYM5bl
eSad9d9ePWOPmDEev8kYYtgQf9x5KzS9ekZa+fQtV6YlF0xIW+F4fISpdPmo
GDb61gUPK/2/tPrUUT/E4Wr1xUWuchwkmOsLXXXPB72/AucDn6guclQZqQmu
/W9+JHLsGuIg/Cw53rf7B3/7i8PAqR1a7LTo8sUFAwDemuO1aFwbf7GVvHPA
uJg6JtmEjmwz3bN97GS5xcGK6yKVUpf12DNXZef8jlkzldP8NayEKaZCgOm+
mX7pG3dsq2tLZ64QvxYf+uiBpU2prChvfDdd7x56gRYGoZaGMX2N9q+YlzIv
9pWdRPAZUH9NZWnhql4KF0fqpIRNfO/2lIWxQ5R/Gq3WfKJWy+mS1rOM263t
prChh0J1dkP3KWyaHxum3CpUuVWQaqtgSes4k/aJ3RXEyFFkrVaT8udoRk1F
eZyfZ27vjsIY44c+Vg/+NtdTL3G6z3Sd1tkR/7Bu5HPduFmdmrl6Zvwkj1n9
AlfYRacNW57vmXw+IONGcPb9SDFjHHgWI37d9zBq953wzFthGTdCdlwPFsPG
1oqgzVempf4+JfFswPqTfquOTVy5yinL3uC6mbp0UYeYLqTB46+po36ZR+8v
XDh6u6I8xFgv26JLw5duipEjyMb6skFHYUj/2yvef3zt3qGOQnddoZvOqQ+d
AH+pMD9cvuUm9Q5nPzTPAgD4XC4t3H3aBpV86GkmYuqoO180I2T8TH+byJFt
ggI6zfMdEOytrSjMMBMCTXf4Ojd9wV9D/Mc9QLXlayf9V3HB134t2jWw49lh
2okhPh+8WIwcM5z7e3WTjFVrHqDTKtbK+EEDFna+ld7HdLNELkytlXj7JK2W
MySt5xu3X99NIbdPx9/cewrvrIMVq0pZEBuo1eqOi64QMODC+r/8Z7y2qny5
m+3ojs2jexv9Xpz/t37euFJzuuG1Xb9ZnbQ93sWv25hIS7+lg8KTXZeJMeNc
QEZNcPaDyANPZx58HnPg2cz9j6PFH/fejxTDxq7bYTtvvg0b0+vDRtLZgISy
yWuO+y4vnLAwZ2zM9pGRy+3X2PU4bqTysLumdIGHlf7b4Y43UypiG9r3XlMt
h6iPHGf0VYSe+oK95R/Fb8amikY4v+iqc72T+pkPxQkxbCxQarNVQy5r3uym
qRMA/rdlJu72bRcyrKVHA6+/WVWeE+AqhHQVvAwb9zH0TSYnNXFrZ4UyW62j
Lhqlrppxo23/+Z66bTif1cvWebN+69LxkLGSmFiGKP00Tq25n1bLEEnrBZ3a
J3VXPNRX9Zqn5Xu3iKljrKnuAcuOL4bq3/Lqc9rd4tCQHumOXYN0WodI2ix3
+4c6T54ryX8U9+T1Rx97eq2mqvTU0Y1bVzh4m7mH9fZbIo0ZSw+OTzrrLx3N
qI8ZL2LqkkbMAensSXTOo6js+5F77kbsqv1P2KiSTqNsvvwmbGwom7y21Hdl
sfeSQx5zs9yjtw53DfhZ7OtuZUXJkvn79BQrTNUEc536eZZ7FrpvhziEOcGf
9ff8GmLkSJ4VE9ah5Z1O6i/MtK8EBx4b6SJ01T7Sp9sHN6RcLsxf1bFdjrbC
Jr8PL+oAAHyuWM950zrELpzQ0CMZC+3VheCul4fpXCn55yPQ/zvd/K0ox07t
4kidU8O0k0Lfn0ZpLMdNVZ720r60fXNNZXmwc387hR9HqDTz0Ww5Xbf1PON2
Cd3kC4ab//280PqBjqnardxUmo1Qbuau0sxbvcVUc4PzRz46rPGubSfmFT5d
8vfIUVp2dM7yEFuPziODLSYtHhi5aciyPI+U8wE7a4L3PYjIfRotZgxpqwsb
9SMbufVh44E0bGRJw0ZoXdgIqgsbU1Pqw8YpMWxMij/qsyzfKy53XOSWYQ4+
XY+V/vmh7lRWFC2et1Vbrsy447MeWlXdNf/MG70l23t3ueM3Sggc82p28M2Z
00+HBpaFBPwa7H9352ecSd5w9aljSrsWdzupCz9LdvQ0PfmhsHGlMD9Rrf1R
idIvDgNlUQYA/P/JXW/CDLm5WYl7GnJxWrivMN2saGzPi8e+y7Dx8EbliZBh
F0bonBmuvai7XGpnhVfj+15b//60/tfbMi/2taXO5Ql/nvEuBomywrzczUlr
p3ovHD7oaPqHH7zy5uJK6cWnCvNOF+WdKfqMxQMnz5bkPo4qerrkzqur4o/X
a6o2pC23Gd1p+HRz30U24Smuy/M9Uy8E7LoVuu9BpJgoxKQhRguxHXw+803k
eC79UXx9/+PofQ+j9t6L2P1HeOat0B033gkbFwLrRzbWlU5adcxnRdGEJQfH
T4l36OdmvDLhA8sy/6gsz1s0d1sv0yxdhT/zRi/JQTfnIgNlMYpc6axW00X9
flfNu101a800rnRWrRhk/rj6M6auGq4+dXxsN4oYkKQLNgw6LnMkbABAYxrX
2n9q+5jqq9cacvExR40XfiZHd3z0HO//Wg9uVF5IWXxppM4VN50jHj1T42aJ
AWCMic62zop3B2jfTGjkQzsP9u8q2BhU7pDhQRkfs610Xu4TaeTYUbbAxa+b
5+x+M9Y5LT04Lvmc/84bwXvvhe97EJHzMHL/46i/5I26yFH/vXQfyuPonId1
Myl1yzYyakLqd6PUh43Es/71YWN1ycTlBV7hqUPHxfTt7aofNnvKJwqrrSxf
oNKmqpumdItKL8nlFYvevF5RLraLhflvm5+x7krVdjLKG58gho10DblyY9WV
ToOauGsA+N+Wmbg7VG7+qokbG3Lxrzs3CQGdT/t9+WbGb+V0Ylyhk8bFETon
XDW3//Ln8j/p5MW82FnabSqtNGvdLG8db5xzO6VnkvfRFfroNMq7fa5fTx/b
/yhSjByZNcHrSyeuOea9rWJaVm3onjthe++GZ9+P2Pcg8i954+mbmPFn2Hh/
JiVk+7W6BaL1IxvnpNMoa45PXJQzNiRxsNdc60HjTbsP0v7gyMZ7tg51ONNZ
TQwbz13eX7vyroHN/7XauUGLahqRGDZ2acnfMFFPdGnqrgHgf16s57wo+aUL
JzRoc+LZ4vx1Fgovw2yE7NWyLqyxPLheWTB9yPnh2mJb59ylpvIDaz7FyOGu
0KzMQu3ZIN3K2VMffvV/q9f7TRBsjaqiP/WffZnKrVwu5o3cx1E5DyPEgLH7
j7A3YeNe+L770sGNnEfv5o26yFHXxB/FF8Vf7XsYKZ1JuRO+61Zoxo3g9Oqg
tKvTks8HrDrmI8aMiE1D/ZbajgrtbTPWpKezxGaI+btrNj7hTFrqESMVoZfu
2YKPThIdSEn0aPuTeGXj/T3+mRg29mjJPzDV2EDYAAAZmGITPFPhl9IGH/65
ZfHs7f1UBC9DIXuVTAtrFNWlheeGa1e5S4o9LfanJX3iypqK8iAH62RjOcFO
IvgNrFz3VSs6bplrCAMNm3464K3rNVX76xPF46j9jyP3PYh4GzbeTKY8inqT
N57U5w1pq//xz5mUu+FZtWE7rs/YdHHK2lJf6WjGxsG+cQPFmGHn2aXvCKMe
9joDh5k3ZFjjrXuVFVu15U+M/tSRZYHGkhil1l/9N/gMYtjYrSX/0kwr2cWu
KfsFgP9/3K6o/cfHsb3n0NbkA7aqr/xNhL3/1ZHj7rWKk0O0ro2WzHFr6MK/
kwWHx5nolJirvh5s+GRMn3OrFn1Bv9LJFGu918P6fMG9DVR2rqRE+vTSNLHl
ndhz6VrZ36858PuG3Lq8URc5osSM8TZsSAc33uSNN5Hjbasf2dhzJzzjRvCW
K1MTTk5acnB85KahfksGuYX2svUw7TvCsKejroN7r5UJi6s/5yiSt4rdB39i
cONwSlJAh+bnt276gnf+MmLYKHZzEbppHxzh1GSdAgAaQowcRQ7q0pPM59gL
tz/v4a1N4861isNjze+O11813v6zbqxf0TFBqXmFlcYre72az19HunKSlzDI
8MbMaZ97YwOdOFm87rj3nj9CpXMl98Ky74btuhVy9OXSqy8P1b648vayazeq
9twJky7keJs6HkW+GzbqW33MkK7WuBex63bo9uqg1AuBa09MXLRvTHiKq9/S
QWMi+zhO7Nrf3bjXYD2fILf4jV8YM9569MkHts61HxCp2OqhLB8Q86679WGj
u86+3mZN0yMA4LOUFeWlDe0mnVhZ4Cjs+a8b6MgOcH3hbbhnVI8vu70+dcRJ
2t3qp/VkdJ/PWtFxxKa7YGt0p0RWj4yPXj4x79XM2ev90/au3bJ7zaZdq5ck
RMWlTl2e7yGGkOLnSy4/P3SxWjricao2W8wkbyLHk6gDYrSoSx31q0nFsJF9
PyLrdmh65fSks/6rj3mLGSNqy9ApK+19FgxwD+vtPKnbwLEmzr5dvWZZzVoz
SUYf51015eVj2vx0eFpT9CXUhY1jdWEjr0/XpukRAPAFairLty+dfXW4jvSs
0Zz/ohWk2yc53xqrV+bT+4OrQxtOjBweis1LzFVfjet7YXWD5lZyUhIf9dIS
rPW+pt9P2J2bvqN6+op8jxu33h9WEl/ZvHtNTOK4Nce8d9eGFj5dcurJ9l23
Quq2okgjxwExckgXaUhjRubN4E0XA8WMsWCPe3iyq/8y2wlzrUdHWI6O6D0u
2nLqStvgdfYJx7323w1OOO6ZXtDQs+C+UvxEr2D5ljeLG/pslK8hho0TowaL
YeOgJWEDAL4DW5fMlp44GtBZOtBR++3nVq6UFBxz0bgxWlL2OcdkfYz0jI5O
OgmGcq8d9KsbcCxYypwYwUr3/qzpX9/1B3nGWB18GrXz8Kf2L588W7IseWZ0
wpjleR4Z12fk1K3ZeDPE8VQ6xLH5UqAYM4LWOvousvGc1XfyEhu/uP4RiU5L
c0atODR6Zd7YtN/9Dj0KPfgwdNeliIrbZ2T0Wf7O31iyTq19E3Qkho3f3KVh
Yz/TKADw/aipLI/qZ/xonIGw0FEo3vlti9np53J7rN7fH/b6xernVuZotxXs
9W+P/NSpEaJlvp6vrXRvrmn8A0tFCVuW7bwe9MvBcQ28/sat6k1Zq6vunL/6
6nD2vfCDz97sQ9ldG+ozv7/1SEOvGMvYLYNj01znZQxbtHvE0v2jlh0cnVzm
c1AMG49CD1Q00bDGW0Nb/XDYTeaP/7t2pCBfoiT00MkhbADA90aMHOlLZ1eM
0BXmO37DfSulO1NPDdU6O0z7K2dS/k6MHJNUWgi2kiej+9z5+GrGOY42ryx1
qld9xhbRhpuzLGTXzRmbcr8kzNysvXblxaHcJ1GHns8UW3rl9Amz+87c5BKz
ZfDcHUMXZo2oG9wYI51DuRd8+En43oroRq//Hw1s/q+Tn9wq+/XKliw4Y6gi
dNNO6NFJph0BAGRn65LZJc4awrQu3+p0jmRXs1tj9DJ+mSOLN6+pKB+n2Eyw
k7waa/WxyBFuZvCst/a1nTI5xnzeipC9d0KT9i784ne4cas6o2zBwWczD7+M
yb4XPmurdGQjbs/IX3LdV+aNWXfUI7s2KP9Z+M6qwGt3zzVi5Q1k0/xf5wb8
fDcjTRZvfr+yotDN+ZKx6h1TjR1zZ8miCwBAkzlbnH/IVk3wMxFSI5u464Or
5p0dpp3voC67LsTI4S7/02t7PWFcvwtF+Vlxcy7FTLkdMOLVjar6C4K76N/u
qXldNnljSszYnPvhmXmJX/wO8Qlx5nZakxf3Tz3vn/cqZv/DiKX7pcMaqwrH
rT3qsbtmWv6ziKwb067dO9+IZTfcqDY/njHu+LSbpjDYSvBzF7LSX50ofnmi
+NW1qq952wdVFWeWLiiUKF0xVj3er/sHnwkLAPju1FSWb3Qxe+FpKBzJaMp+
4y0UrrlL8rYly7SX+lGO4h4dL/RSv9VX64G19uuBusL4fvW/XT/E9llvnerV
MplPGRUwIPdxZH5pg57k+57q65Uek4c4+ZhGpTovzBqxONstbKPTlkuBmTdm
rDvmmXDca9f1qXnPIrJrgwrKNzR65Q1UU15+Mv9w/ESvdC25653Vhd76gqWB
0Oc/zVJfGNpPGNJXcLUSXKyEiW4vvN0eRU+/EzntfsbWh8eO3D9W9KS68nHV
m3b7aOGlZYvO9O9xs7P6H6Yavxt1nN3FQOziW306AECj278lKcNaRYhquods
Jng5nBiseXCqq6w7OhO/6KCZ8lkLtTv9tIVBEsHRQHA2FFyMhOXh4m9Pd1UV
+kmeXJPJSeajpw48+DTq8PHdn3WXmDTiE+IsB0t85/dbkjPql1z3FYfHrCoY
t7bYY+l+98gUl+TTvpnXpuY9Dc+5E7zvkkyS0ucSU0FOcuL2ubOSJnmn+Hmn
utpnD3fKt+pa0q97nkQxT6KUo6uwV0chS1thh5Z8prZ8to5Crq7iIYligZ7S
MX3lEn3lIj0l8UWxpWvKbe7Zeee82eIbfuuPBQBoZDWV5eFDba656T5bH9oE
3V0pKVhmLn/cRfP0kUbYA/sx96oq9o9zzjVTvtpb47WNrmCvL00arsbC0E71
rcq1lzDI8PncGTIqwM6z8+EX0YeOZjX8lpLSoq4D1AdPMotIchIzhtjWHPFY
d8xzw4kJib95p5yamHpmohg2Dj8N338vJPmUz71Ht2RUvCyIsURsp/PzDiQn
HkpJWunjtdbXa7bdAPHrOl+vtRO90ubEEjMA4H/b/i1JK83lnwT1b4K+Urwd
9w5STQlttD2wf1deXJBgIJfdRelyL43XA+uGNcSkMaQuabgaP3LQr7XUEuyM
XvXVvV8tq7O4bceZ5D6OOH2xtIHXZ+xJ62mvPSbMYn7m8FWF49cWe6wv8dpY
OiHppE/K6Ymbzk3afGHSruvTDj8Jz70fIr7SlEdtAADQKGoqy8OG2BTYqz9Y
GyLTjg6vnp9spSS2Rt8D+9alI/nxeu1zzZRuWWlJ51Cc6oY1xCZ+Y6t320rr
bm8twcH4Ug/1tfodTkYFyKgM3xC3bVenxGc26O8ZnxDX01F7fFTvxdlu0rBx
1CPhuNfGX72TyyamnvXdcsEv7eLk3TXTxbBRN7JB2AAAfK/KivJiTNtd97d6
ce6YjLpI9XZa2F1um7XK2eJ8GXVRW1keo9Fmq7HCtT6aYrqQLtUQm6OBGDxu
j+idNdpJsNIV7Iz2myiVRgZ4KTbPte0mo0pKfj2ycK/7vpp/3u0rhg0LRx3P
mD5L9o2Kz5fOoawv8dpQOiGpzCfljO/m85O2/O63++b0Q4/D9v0xI/E377Ly
QzKqGQCAJhA2xCbNSvn1hrDGfdubVeWXSwo2+zgFGrROcDFrlKPLP2btcLsd
JgoXe6m/mUapSxop/UxT5sXWlhQJ/STCIIPk4fYxWm22mygMbPPvudptZVRJ
9fVKV//uh59Hl50r+cRlJaVF3Ww03GaYz9s5vG516NhVheOlazZKvd/mjb23
gw4+ChMjx/rjXievHpRRwQAANI2ayvI5AzrdGaMv7I7/rLvEdupI3qFtyUVr
FxxdvzB3lv/B2f7H5geWLAhcYS4/p2uHWLP2vnqtVoy1k13xol2LZi/SaXu6
p9qbaRQH/VwzpZ2LZou/urhykWAtEQboZS+SDjiI8cNbqfmgNv9eP1yGJU0K
HZV1K3jnoU9tWTW2ULYd1ykiyWnBrhFxe92W7ndffmhMfMG4NcUe60o8U8/6
7q2dkfsgdEdFYMqx6VdrTsuuWgAAmsztqvKD8fOOOmkIc+3Pb1pycM2Cst2b
929JEltZUV7Zrs1ioriR9svT9aHPF459FGRdO0av0k337FCtEhfNXDu1bdYq
Cb0Vl/SQEzNGTJd2E/Va+ffSn+c2aNfyObUyW5lZ72ZFub9Ky2zTumUbdvqC
vX6mjdn5IunEzenwAMFa73Vf3ZP5h9+9Xkwd52Q52BK/YfH6Ez6ZZz56xGj4
7EALJ13fBdaxW4fM2jZkbsYwMXUs3D0yLlsaPLZc8MuunbHnVlDqGd/iy9tl
VycAAN/E9qVzdlirCFNMhcDOQoCJMLmu+ZsI3ka3x+idHap9xEljt03HjZaK
8Y6mc2w6LXa33RDss/OXOTt+mZOfnpy37U07d1RW6zT+bq3/hASDDlWWGtKt
r3b6WQO7Xjwi7f1XD1fBWvJ8eB8xbDyorqg5VljfHlbL5NiNd5WUHglcbpv3
cubfn0cv1E24GFsoD/YzC9vgGLbRKTLZOSp18MzNYnNdmDVi6yV/MWlkXoos
KW/Sc9gAAGhKt6srju5ILclIzVk5T2xp4b774+ftWzl374q5vx/Lv3A0/7aM
xys+1xQzvazOikLdso3fLdTLiwvEF/PGuAhWuld6qK+1NMkyUSwyU7lqoX7T
UvNyT/XKXhplTuYVa+Iey+a8r3oTg902/+6fXjr3778Knx3Yy1nHf8mAGWvs
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
    
    "], {{0, 399.}, {360., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{360., 399.},
  PlotRange->{{0, 360.}, {0, 399.}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.804519048377294*^9, 3.8045191051856823`*^9, 
  3.804521990787737*^9, 3.804522050772972*^9, 3.804522413000515*^9, 
  3.804601410958055*^9},
 CellLabel->"Out[1]=",
 CellID->1766785253]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->754920879],

Cell[TextData[{
 "Import an ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Association", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Association",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " of atomic properties corresponding to a RCSB id:"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.7855804658291807`*^9, 3.785580518819921*^9}, 
   3.785582381063279*^9, {3.804512014968235*^9, 3.804512027072307*^9}, {
   3.804515391735133*^9, 3.8045153934558496`*^9}, {3.804515833872107*^9, 
   3.804515855207418*^9}, 3.804601311551283*^9, {3.8050427311511497`*^9, 
   3.8050427311511497`*^9}},
 CellID->444610718],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"PDBImport", "[", 
   RowBox[{
    RowBox[{"\"\<RCSB\>\"", "\[Rule]", "\"\<3J3I\>\""}], ",", 
    "\"\<AtomAssociation\>\""}], "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.804506415822452*^9, 3.804506439646926*^9}, {
  3.80450670460184*^9, 3.80450670943355*^9}, {3.804507621757039*^9, 
  3.80450763051254*^9}, {3.80450840089649*^9, 3.804508454220155*^9}, {
  3.804511431334689*^9, 3.80451148476338*^9}, {3.804517423327938*^9, 
  3.8045174237646933`*^9}},
 CellLabel->"In[1]:=",
 CellID->268955899],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"Atom\"\>", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"{", 
              
              RowBox[{"\<\"N\"\>", ",", "\<\"C\"\>", ",", "\<\"C\"\>", 
               ",", "\<\"O\"\>", ",", "\<\"C\"\>", ",", "\<\"C\"\>", 
               ",", "\<\"S\"\>", ",", "\<\"C\"\>", ",", "\<\"N\"\>", 
               ",", "\<\"C\"\>", ",", "\<\"C\"\>", ",", "\<\"O\"\>", 
               ",", "\<\"C\"\>", ",", "\<\"N\"\>", ",", "\<\"C\"\>", 
               ",", "\<\"C\"\>", ",", "\<\"O\"\>", ",", "\<\"C\"\>", 
               ",", "\<\"N\"\>", ",", "\<\"C\"\>", ",", "\<\"C\"\>", 
               ",", "\<\"O\"\>", ",", "\<\"C\"\>", ",", "\<\"C\"\>", 
               ",", "\<\"C\"\>", ",", "\<\"N\"\>", ",", "\<\"C\"\>", 
               ",", "\<\"C\"\>", ",", "\<\"O\"\>", ",", "\<\"C\"\>", 
               ",", "\<\"C\"\>", ",", "\<\"C\"\>", ",", "\<\"N\"\>", 
               ",", "\<\"C\"\>", ",", 
               TemplateBox[{"7447"},
                "OutputSizeLimit`Skeleton"], ",", "\<\"C\"\>", 
               ",", "\<\"C\"\>", ",", "\<\"N\"\>", ",", "\<\"N\"\>", 
               ",", "\<\"C\"\>", ",", "\<\"C\"\>", ",", "\<\"O\"\>", 
               ",", "\<\"C\"\>", ",", "\<\"C\"\>", ",", "\<\"O\"\>", 
               ",", "\<\"O\"\>", ",", "\<\"N\"\>", ",", "\<\"C\"\>", 
               ",", "\<\"C\"\>", ",", "\<\"O\"\>", ",", "\<\"C\"\>", 
               ",", "\<\"O\"\>", ",", "\<\"N\"\>", ",", "\<\"C\"\>", 
               ",", "\<\"C\"\>", ",", "\<\"O\"\>", ",", "\<\"C\"\>", 
               ",", "\<\"C\"\>", ",", "\<\"C\"\>", ",", "\<\"C\"\>", 
               ",", "\<\"N\"\>", ",", "\<\"C\"\>", ",", "\<\"C\"\>", 
               ",", "\<\"O\"\>", ",", "\<\"C\"\>", ",", "\<\"C\"\>", 
               ",", "\<\"C\"\>", ",", "\<\"O\"\>", ",", "\<\"O\"\>"}], "}"}], 
             "}"}]}], ",", 
           TemplateBox[{"4"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{60., {2., 7.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{47., {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{40., {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1, 33707869265659773641, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{53., {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{46.5, {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1, 33707869265659773641, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{40., {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1, 33707869265659773641, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{71., {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[33707869265659773641 === $SessionID, 
   Out[1], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.8045065264804077`*^9, {3.804506707437861*^9, 3.804506711224581*^9}, {
   3.8045076259099197`*^9, 3.804507632892399*^9}, 3.80450935908887*^9, {
   3.8045094066677217`*^9, 3.8045094595594254`*^9}, 3.804510402333815*^9, 
   3.804512032675684*^9, 3.804517433762208*^9, 3.804517518358842*^9, 
   3.8045219946558313`*^9, 3.804522052184931*^9, 3.804522119896509*^9, 
   3.80452218043653*^9, 3.804522295660502*^9, 3.804522414660036*^9, 
   3.8046014135360193`*^9},
 CellLabel->"Out[1]=",
 CellID->1104936250]
}, Open  ]],

Cell[TextData[{
 "Extract the ",
 Cell[BoxData[
  StyleBox["x", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " coordinates:"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.751956515315048*^9, 3.751956536317786*^9}, {
   3.76306599169547*^9, 3.7630660043801622`*^9}, 3.785580515076869*^9, {
   3.7855805740063047`*^9, 3.78558057855422*^9}, {3.785580643911677*^9, 
   3.7855806697037*^9}},
 CellID->807974276],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "[", "\"\<XCoordinate\>\"", "]"}], "//", "Short"}]], "Input",\

 TaggingRules->{},
 CellChangeTimes->{
  3.763066024273148*^9, 3.763066089319644*^9, {3.7630661366968937`*^9, 
   3.763066148393701*^9}, {3.763066955675253*^9, 3.76306696452525*^9}, {
   3.7630670067616034`*^9, 3.7630670476809673`*^9}, {3.763067285220023*^9, 
   3.7630672914478493`*^9}, {3.785573119920652*^9, 3.785573120822694*^9}, 
   3.785576629863531*^9, {3.785580586770784*^9, 3.785580587378964*^9}, {
   3.785580801961192*^9, 3.785580823512374*^9}, {3.804510419191608*^9, 
   3.80451042168606*^9}},
 CellLabel->"In[2]:=",
 CellID->1084556751],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
    "70.204`", ",", "70.893`", ",", "71.257`", ",", "71.753`", ",", "70.03`", 
     ",", 
     RowBox[{"\[LeftSkeleton]", "7506", "\[RightSkeleton]"}], ",", "99.93`", 
     ",", "100.235`", ",", "99.537`", ",", "101.171`"}], "}"}], "}"}],
  Short]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.785580589988492*^9, {3.7855808054368343`*^9, 3.78558082507353*^9}, 
   3.804506740583166*^9, 3.804508264817315*^9, 3.804510435934141*^9, 
   3.804511153767971*^9, 3.804512043035574*^9, 3.804517433808834*^9, 
   3.8045175184645243`*^9, 3.804521994839616*^9, 3.8045220522479553`*^9, 
   3.804522414704513*^9, 3.804601413602729*^9},
 CellLabel->"Out[2]//Short=",
 CellID->1372458141]
}, Open  ]],

Cell["Extract the atom types:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.751956515315048*^9, 3.751956536317786*^9}, {
  3.76306599169547*^9, 3.7630660043801622`*^9}, {3.763067067419162*^9, 
  3.763067070818231*^9}, {3.7855806264093924`*^9, 3.785580628185957*^9}, {
  3.78558067444053*^9, 3.7855806757472258`*^9}, {3.785580783346281*^9, 
  3.7855807844545507`*^9}, {3.804516740617959*^9, 3.804516741569613*^9}},
 CellID->305541187],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "[", "\"\<Atom\>\"", "]"}], "//", "Short"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{
  3.763066024273148*^9, 3.763066089319644*^9, {3.7630661366968937`*^9, 
   3.763066148393701*^9}, {3.763066955675253*^9, 3.76306696452525*^9}, {
   3.7630670067616034`*^9, 3.7630670476809673`*^9}, {3.763067081985668*^9, 
   3.763067085461883*^9}, {3.763067294307151*^9, 3.763067299532955*^9}, {
   3.785573123990923*^9, 3.7855731245972033`*^9}, 3.785576576115425*^9, {
   3.785580683035659*^9, 3.785580683625374*^9}, {3.785580716572447*^9, 
   3.785580726746973*^9}, {3.785580789034284*^9, 3.78558079011854*^9}, {
   3.785580834722988*^9, 3.785580836472485*^9}, {3.804522363812071*^9, 
   3.804522364700179*^9}},
 CellLabel->"In[3]:=",
 CellID->597329932],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"\<\"N\"\>", ",", "\<\"C\"\>", ",", "\<\"C\"\>", ",", "\<\"O\"\>",
      ",", "\<\"C\"\>", ",", "\<\"C\"\>", ",", "\<\"S\"\>", ",", "\<\"C\"\>", 
     ",", "\<\"N\"\>", ",", 
     RowBox[{"\[LeftSkeleton]", "7497", "\[RightSkeleton]"}], 
     ",", "\<\"N\"\>", ",", "\<\"C\"\>", ",", "\<\"C\"\>", ",", "\<\"O\"\>", 
     ",", "\<\"C\"\>", ",", "\<\"C\"\>", ",", "\<\"C\"\>", ",", "\<\"O\"\>", 
     ",", "\<\"O\"\>"}], "}"}], "}"}],
  Short]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.7855806849662743`*^9, {3.785580720345334*^9, 3.7855807295804043`*^9}, 
   3.785580791056096*^9, 3.785580837212058*^9, 3.804506745922185*^9, 
   3.8045082681196957`*^9, 3.80451058053585*^9, 3.804511152870904*^9, 
   3.804512045588482*^9, 3.804517433818797*^9, 3.804517518477501*^9, 
   3.804521994851802*^9, 3.8045220522573633`*^9, 3.804522365118575*^9, 
   3.804522414715088*^9, 3.8046014136133623`*^9},
 CellLabel->"Out[3]//Short=",
 CellID->782123360]
}, Open  ]],

Cell["Extract the atomic masses:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.751956515315048*^9, 3.751956536317786*^9}, {
  3.76306599169547*^9, 3.7630660043801622`*^9}, {3.763067067419162*^9, 
  3.763067070818231*^9}, {3.7855806264093924`*^9, 3.785580628185957*^9}, {
  3.78558067444053*^9, 3.7855806757472258`*^9}, {3.785580783346281*^9, 
  3.7855807844545507`*^9}, {3.804516740617959*^9, 3.804516741569613*^9}, {
  3.80452235118113*^9, 3.8045223580282183`*^9}},
 CellID->1783019297],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "[", "\"\<Mass\>\"", "]"}], "//", "Short"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.804522315926437*^9, 3.804522328645459*^9}, {
  3.804522367486133*^9, 3.804522368444038*^9}},
 CellLabel->"In[4]:=",
 CellID->1536255326],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
    "14.007`5.", ",", "12.011`5.", ",", "12.011`5.", ",", "15.999`5.", ",", 
     RowBox[{"\[LeftSkeleton]", "7508", "\[RightSkeleton]"}], ",", 
     "12.011`5.", ",", "15.999`5.", ",", "15.999`5."}], "}"}], "}"}],
  Short]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.804522326057432*^9, 3.8045223290306683`*^9}, 
   3.804522368886351*^9, 3.8045224147878647`*^9, 3.804601413689228*^9},
 CellLabel->"Out[4]//Short=",
 CellID->399908233]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->262135656],

Cell["Import an RCSB data file starting from row 154:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.7855804658291807`*^9, 3.785580518819921*^9}, 
   3.785582381063279*^9},
 CellID->1812908403],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"PDBImport", "[", 
   RowBox[{
   "\"\<https://files.rcsb.org/download/3J3I.pdb1.gz\>\"", ",", " ", "154"}], 
   "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{
  3.763066024273148*^9, 3.763066089319644*^9, {3.7630661366968937`*^9, 
   3.763066148393701*^9}, {3.763066955675253*^9, 3.76306696452525*^9}, {
   3.7630670067616034`*^9, 3.7630670476809673`*^9}, {3.763067285220023*^9, 
   3.7630672914478493`*^9}, {3.785573119920652*^9, 3.785573120822694*^9}, 
   3.785576629863531*^9, {3.785580526435155*^9, 3.785580543797659*^9}},
 CellLabel->"In[1]:=",
 CellID->1735677260],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"Atom\"\>", "\[Rule]", 
            RowBox[{"{", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
           RowBox[{"\<\"Mass\"\>", "\[Rule]", 
            RowBox[{"{", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"YCoordinate\"\>", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "125.769`", ",", "124.594`", ",", "124.781`", ",", "126.772`", 
                ",", "127.382`", ",", "128.637`", ",", "127.823`", ",", 
                "123.383`", ",", "122.152`", ",", "121.174`", ",", 
                TemplateBox[{"7494"},
                 "OutputSizeLimit`Skeleton"], ",", "44.756`", ",", "45.373`", 
                ",", "44.211`", ",", "43.119`", ",", "42.834`", ",", "43.68`",
                 ",", "42.737`", ",", "41.315`", ",", "40.801`", ",", 
                "40.705`"}], "}"}], ",", 
              TemplateBox[{"58"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"{", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"], "}"}]}], "}"}]}], ",", 
           RowBox[{"\<\"ZCoordinate\"\>", "\[Rule]", 
            RowBox[{"{", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "}"}]}]}], "\[RightAssociation]"}],
         
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{60., {2., 7.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{47., {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1, 33707869265659773641, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{53., {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1, 33707869265659773641, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{40., {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1, 33707869265659773641, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{71., {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[33707869265659773641 === $SessionID, 
   Out[1], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.785580563662346*^9, 3.785582525949039*^9, 
  3.804506734790588*^9, 3.8045082614893007`*^9, 3.804510148836274*^9, 
  3.804511152703987*^9, 3.8045174577909*^9, 3.804522013269158*^9, 
  3.804522108985955*^9, 3.804522437729075*^9, 3.804601434084774*^9},
 CellLabel->"Out[1]=",
 CellID->1781340568]
}, Open  ]],

Cell[TextData[{
 "Extract the ",
 Cell[BoxData[
  StyleBox["x", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " coordinates:"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.751956515315048*^9, 3.751956536317786*^9}, {
   3.76306599169547*^9, 3.7630660043801622`*^9}, 3.785580515076869*^9, {
   3.7855805740063047`*^9, 3.78558057855422*^9}, {3.785580643911677*^9, 
   3.7855806697037*^9}},
 CellID->221583938],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "[", "\"\<XCoordinate\>\"", "]"}], "//", "Short"}]], "Input",\

 TaggingRules->{},
 CellChangeTimes->{
  3.763066024273148*^9, 3.763066089319644*^9, {3.7630661366968937`*^9, 
   3.763066148393701*^9}, {3.763066955675253*^9, 3.76306696452525*^9}, {
   3.7630670067616034`*^9, 3.7630670476809673`*^9}, {3.763067285220023*^9, 
   3.7630672914478493`*^9}, {3.785573119920652*^9, 3.785573120822694*^9}, 
   3.785576629863531*^9, {3.785580586770784*^9, 3.785580587378964*^9}, {
   3.785580801961192*^9, 3.785580823512374*^9}, {3.804510419191608*^9, 
   3.80451042168606*^9}},
 CellLabel->"In[2]:=",
 CellID->1253662683],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"70.893`", ",", "71.257`", ",", "71.753`", ",", "70.03`", ",", 
      RowBox[{"\[LeftSkeleton]", "7506", "\[RightSkeleton]"}], ",", "99.93`", 
      ",", "100.235`", ",", "99.537`", ",", "101.171`"}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "58", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}]}], "}"}],
  Short]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.785580589988492*^9, {3.7855808054368343`*^9, 3.78558082507353*^9}, 
   3.804506740583166*^9, 3.804508264817315*^9, 3.804510435934141*^9, 
   3.804511153767971*^9, 3.804517458736525*^9, 3.804522014180979*^9, 
   3.804522438711648*^9, 3.804601435051373*^9},
 CellLabel->"Out[2]//Short=",
 CellID->921403549]
}, Open  ]],

Cell["Extract the atom types:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.751956515315048*^9, 3.751956536317786*^9}, {
  3.76306599169547*^9, 3.7630660043801622`*^9}, {3.763067067419162*^9, 
  3.763067070818231*^9}, {3.7855806264093924`*^9, 3.785580628185957*^9}, {
  3.78558067444053*^9, 3.7855806757472258`*^9}, {3.785580783346281*^9, 
  3.7855807844545507`*^9}, {3.804516752008979*^9, 3.80451675224905*^9}},
 CellID->656281988],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"data", "[", "\"\<Atom\>\"", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "Short"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{
  3.763066024273148*^9, 3.763066089319644*^9, {3.7630661366968937`*^9, 
   3.763066148393701*^9}, {3.763066955675253*^9, 3.76306696452525*^9}, {
   3.7630670067616034`*^9, 3.7630670476809673`*^9}, {3.763067081985668*^9, 
   3.763067085461883*^9}, {3.763067294307151*^9, 3.763067299532955*^9}, {
   3.785573123990923*^9, 3.7855731245972033`*^9}, 3.785576576115425*^9, {
   3.785580683035659*^9, 3.785580683625374*^9}, {3.785580716572447*^9, 
   3.785580726746973*^9}, {3.785580789034284*^9, 3.78558079011854*^9}, {
   3.785580834722988*^9, 3.785580836472485*^9}},
 CellLabel->"In[3]:=",
 CellID->1988537299],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{"\<\"C\"\>", ",", "\<\"C\"\>", ",", "\<\"O\"\>", ",", "\<\"C\"\>", 
    ",", "\<\"C\"\>", ",", "\<\"S\"\>", ",", "\<\"C\"\>", ",", "\<\"N\"\>", 
    ",", "\<\"C\"\>", ",", 
    RowBox[{"\[LeftSkeleton]", "7496", "\[RightSkeleton]"}], ",", "\<\"N\"\>",
     ",", "\<\"C\"\>", ",", "\<\"C\"\>", ",", "\<\"O\"\>", ",", "\<\"C\"\>", 
    ",", "\<\"C\"\>", ",", "\<\"C\"\>", ",", "\<\"O\"\>", ",", "\<\"O\"\>"}], 
   "}"}],
  Short]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.7855806849662743`*^9, {3.785580720345334*^9, 3.7855807295804043`*^9}, 
   3.785580791056096*^9, 3.785580837212058*^9, 3.804506745922185*^9, 
   3.8045082681196957`*^9, 3.80451058053585*^9, 3.804511152870904*^9, 
   3.804517458747428*^9, 3.8045220141903667`*^9, 3.804522438721113*^9, 
   3.8046014350648403`*^9},
 CellLabel->"Out[3]//Short=",
 CellID->524869526]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->1996740139],

Cell["Import an RCSB data file as a PDB string:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.7855804658291807`*^9, 3.785580518819921*^9}, 
   3.785582381063279*^9, {3.8044434154062643`*^9, 3.804443423524622*^9}},
 CellID->1722970136],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pdbString", "=", 
  RowBox[{"PDBImport", "[", 
   RowBox[{
   "\"\<https://files.rcsb.org/download/3J3I.pdb1.gz\>\"", ",", 
    "\"\<String\>\""}], "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.804443371735799*^9, 3.80444339263829*^9}, {
  3.804500753325333*^9, 3.804500753932151*^9}, {3.8045114914211073`*^9, 
  3.804511492354783*^9}, {3.8045167630107517`*^9, 3.804516764784977*^9}, {
  3.8045188248917093`*^9, 3.804518826097678*^9}, {3.804521967258131*^9, 
  3.804521971385036*^9}},
 CellLabel->"In[1]:=",
 CellID->484564504],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\<\"HEADER    VIRUS                                   \
08-MAR-13   XXXX              \\nTITLE     PENICILLIUM CHRYSOGENUM VIRUS \
(PCV) CAPSID STRUCTURE         \"\>", 
          "\[Ellipsis]", "\<\"    0    0    0   36   14    0    0    6 7515   \
 1    0   76          \\nEND                                                  \
                           \\n\"\>"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{60., {2., 7.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{47., {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1, 33707869265659773641, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{53., {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1, 33707869265659773641, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{40., {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{34.5, {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1, 33707869265659773641, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{71., {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[33707869265659773641 === $SessionID, 
   Out[1], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.804443437739039*^9, 3.804500898214151*^9, 3.804506236153248*^9, 
   3.8045067594059553`*^9, 3.804508294724881*^9, 3.804509542106924*^9, {
   3.80451185788848*^9, 3.80451187683781*^9}, 3.804512090387328*^9, 
   3.804516813944356*^9, 3.804517471328681*^9, 3.804518838401229*^9, 
   3.804522037518053*^9, 3.804522470903298*^9, 3.8046014783814583`*^9},
 CellLabel->"Out[1]=",
 CellID->1103360102]
}, Open  ]],

Cell[TextData[{
 "Extract the ",
 Cell[BoxData[
  StyleBox["x", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " coordinates using PDB import (which converts to picometers):"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.751956515315048*^9, 3.751956536317786*^9}, {
   3.76306599169547*^9, 3.7630660043801622`*^9}, 3.785580515076869*^9, {
   3.7855805740063047`*^9, 3.78558057855422*^9}, {3.785580643911677*^9, 
   3.7855806697037*^9}, {3.8044444604736977`*^9, 3.804444465433226*^9}, {
   3.804444662395447*^9, 3.804444676011066*^9}},
 CellID->569485792],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"First", "[", 
   RowBox[{"Transpose", "[", 
    RowBox[{"ImportString", "[", 
     RowBox[{"pdbString", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<PDB\>\"", ",", "\"\<VertexCoordinates\>\""}], "}"}]}], 
     "]"}], "]"}], "]"}], "//", "Short"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8044434357536983`*^9, 3.804443463060313*^9}, {
  3.804444221504251*^9, 3.8044442232422333`*^9}, {3.804444414405612*^9, 
  3.8044444251397038`*^9}, {3.8044444906912518`*^9, 3.8044444933766317`*^9}, {
  3.8045007569500933`*^9, 3.804500758852682*^9}},
 CellLabel->"In[2]:=",
 CellID->984920261],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
   "7020.4`", ",", "7089.3`", ",", "7125.700000000001`", ",", "7175.3`", ",", 
    
    RowBox[{"\[LeftSkeleton]", "7507", "\[RightSkeleton]"}], ",", "9993.`", 
    ",", "10023.5`", ",", "9953.7`", ",", "10117.1`"}], "}"}],
  Short]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.804444266622533*^9, 3.8044444680168867`*^9, 
  3.804444536686043*^9, 3.8045009397196283`*^9, 3.8045068000237427`*^9, 
  3.804508330562275*^9, 3.804517515271076*^9, 3.804518882199746*^9, 
  3.804522511708302*^9, 3.804601520870215*^9},
 CellLabel->"Out[2]//Short=",
 CellID->651942469]
}, Open  ]],

Cell["Extract the atom types:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.751956515315048*^9, 3.751956536317786*^9}, {
   3.76306599169547*^9, 3.7630660043801622`*^9}, 3.785580515076869*^9, {
   3.7855805740063047`*^9, 3.78558057855422*^9}, {3.785580643911677*^9, 
   3.7855806697037*^9}, {3.8044444604736977`*^9, 3.804444465433226*^9}, {
   3.804444662395447*^9, 3.804444676011066*^9}, 3.804518448551477*^9},
 CellID->1310912097],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{"ImportString", "[", 
    RowBox[{"pdbString", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<PDB\>\"", ",", "\"\<ResidueAtoms\>\""}], "}"}]}], "]"}], 
   "]"}], "//", "Short"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{
  3.763066024273148*^9, 3.763066089319644*^9, {3.7630661366968937`*^9, 
   3.763066148393701*^9}, {3.763066955675253*^9, 3.76306696452525*^9}, {
   3.7630670067616034`*^9, 3.7630670476809673`*^9}, {3.763067081985668*^9, 
   3.763067085461883*^9}, {3.763067294307151*^9, 3.763067299532955*^9}, {
   3.785573123990923*^9, 3.7855731245972033`*^9}, 3.785576576115425*^9, {
   3.785580683035659*^9, 3.785580683625374*^9}, {3.785580716572447*^9, 
   3.785580726746973*^9}, {3.785580789034284*^9, 3.78558079011854*^9}, {
   3.785580834722988*^9, 3.785580836472485*^9}, {3.804516820593597*^9, 
   3.80451683397462*^9}, {3.804517351413343*^9, 3.804517354156987*^9}, {
   3.804517479522996*^9, 3.8045174819124737`*^9}, {3.804518452826157*^9, 
   3.804518458998209*^9}},
 CellLabel->"In[3]:=",
 CellID->1424471183],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{"\<\"N\"\>", ",", "\<\"C\"\>", ",", "\<\"C\"\>", ",", "\<\"O\"\>", 
    ",", "\<\"C\"\>", ",", "\<\"C\"\>", ",", "\<\"S\"\>", ",", "\<\"C\"\>", 
    ",", "\<\"N\"\>", ",", 
    RowBox[{"\[LeftSkeleton]", "7497", "\[RightSkeleton]"}], ",", "\<\"N\"\>",
     ",", "\<\"C\"\>", ",", "\<\"C\"\>", ",", "\<\"O\"\>", ",", "\<\"C\"\>", 
    ",", "\<\"C\"\>", ",", "\<\"C\"\>", ",", "\<\"O\"\>", ",", "\<\"O\"\>"}], 
   "}"}],
  Short]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.7855806849662743`*^9, {3.785580720345334*^9, 3.7855807295804043`*^9}, 
   3.785580791056096*^9, 3.785580837212058*^9, 3.804506745922185*^9, 
   3.8045082681196957`*^9, 3.80451058053585*^9, 3.804511152870904*^9, {
   3.804516827612771*^9, 3.804516831245099*^9}, 3.804517399164448*^9, 
   3.804517949926577*^9, 3.804518503812108*^9, 3.804518932253757*^9, 
   3.804522552783127*^9, 3.804601563368898*^9},
 CellLabel->"Out[3]//Short=",
 CellID->735509489]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Neat Examples", "Subsection",
 TaggingRules->{},
 CellLabel->"In[4]:=",
 CellID->5316679],

Cell["\<\
Extract a protein chain and calculate the center of mass of its subunits:\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.751954456535962*^9, 3.751954487454554*^9}, {
  3.7519548565522337`*^9, 3.751954887913721*^9}, {3.7855808935013323`*^9, 
  3.785580893982135*^9}, {3.785582239820838*^9, 3.785582252172841*^9}, {
  3.785582433021554*^9, 3.7855824495680723`*^9}},
 CellID->188717845],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"PDBImport", "[", 
    RowBox[{
    "\"\<https://files.rcsb.org/download/3J3I.pdb1.gz\>\"", ",", " ", 
     "\"\<AtomAssociation\>\""}], "]"}]}], ";"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.751955129452759*^9, 3.751955217626206*^9}, {
   3.751955275219222*^9, 3.751955295934573*^9}, {3.751955331804435*^9, 
   3.751955335700931*^9}, {3.75195540121527*^9, 3.751955435946064*^9}, {
   3.751955706015542*^9, 3.751955712550928*^9}, {3.7519561713125267`*^9, 
   3.751956194909976*^9}, {3.751956416551166*^9, 3.751956418061823*^9}, {
   3.7519564689017563`*^9, 3.7519564693715973`*^9}, 3.7519566662873287`*^9, 
   3.7628732539610643`*^9, {3.763067105235959*^9, 3.76306717332321*^9}, {
   3.7630673266136417`*^9, 3.7630673318471727`*^9}, {3.763225497651614*^9, 
   3.763225499135915*^9}, 3.7632255535095367`*^9, {3.785573129105763*^9, 
   3.785573129705399*^9}, {3.785580884697173*^9, 3.785580885533084*^9}, {
   3.8045184066582193`*^9, 3.804518410543766*^9}},
 CellLabel->"In[1]:=",
 CellID->821173213],

Cell[BoxData[
 RowBox[{
  RowBox[{"centermass", "[", 
   RowBox[{"mass_", ",", "coor_"}], "]"}], " ", ":=", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"mass", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "*", " ", 
      RowBox[{"coor", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"Length", "[", "mass", "]"}]}], "}"}]}], "]"}], "  ", "/", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"mass", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"{", " ", 
      RowBox[{"i", ",", " ", 
       RowBox[{"Length", "[", "mass", "]"}]}], "}"}]}], "]"}]}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.751861355770804*^9, 3.7518613656421137`*^9}, 
   3.751888496186397*^9, {3.751954223573422*^9, 3.751954265652956*^9}, 
   3.751954976368305*^9, {3.751955037651614*^9, 3.751955048119605*^9}, {
   3.785580979021734*^9, 3.785580979715837*^9}, {3.7855819583498383`*^9, 
   3.785581968088832*^9}},
 CellLabel->"In[2]:=",
 CellID->617645659],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xset", " ", "=", " ", 
   RowBox[{"MapThread", "[", 
    RowBox[{"centermass", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "[", "\"\<Mass\>\"", "]"}], ",", 
       RowBox[{"data", "[", "\"\<XCoordinate\>\"", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yset", " ", "=", " ", 
   RowBox[{"MapThread", "[", 
    RowBox[{"centermass", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "[", "\"\<Mass\>\"", "]"}], ",", 
       RowBox[{"data", "[", "\"\<YCoordinate\>\"", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zset", " ", "=", " ", 
   RowBox[{"MapThread", "[", 
    RowBox[{"centermass", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "[", "\"\<Mass\>\"", "]"}], ",", 
       RowBox[{"data", "[", "\"\<ZCoordinate\>\"", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{
  3.751954983398837*^9, {3.751955057451919*^9, 3.7519550718090353`*^9}, {
   3.751955715988738*^9, 3.751955716886243*^9}, {3.751956219982992*^9, 
   3.7519562264265738`*^9}, {3.763225515248085*^9, 3.763225549798028*^9}, 
   3.785576602287882*^9, 3.785576662605744*^9, 3.785576692696356*^9, {
   3.785576732958355*^9, 3.785576734558859*^9}, {3.785580983701006*^9, 
   3.7855809857914667`*^9}, {3.785581098381567*^9, 3.7855811030286293`*^9}, {
   3.785581973195204*^9, 3.7855819748035*^9}},
 CellLabel->"In[3]:=",
 CellID->1982124862],

Cell[BoxData[
 RowBox[{
  RowBox[{"cmass", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"xset", ",", " ", "yset", ",", " ", "zset"}], "}"}], "]"}]}], 
  ";"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.785581315664321*^9, 3.785581333967181*^9}, {
  3.785581568617757*^9, 3.785581573947282*^9}, {3.78558198993067*^9, 
  3.785581992873929*^9}},
 CellLabel->"In[6]:=",
 CellID->1135730407],

Cell["Plot the center of mass of the subunits:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.751954456535962*^9, 3.751954487454554*^9}, {
  3.7519548565522337`*^9, 3.751954887913721*^9}, {3.7519564336360703`*^9, 
  3.751956449481207*^9}, {3.7855816628899193`*^9, 3.785581666646041*^9}, {
  3.785582194263636*^9, 3.7855822190852137`*^9}, {3.785582268561604*^9, 
  3.785582271827138*^9}},
 CellID->67900192],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"PointSize", "[", "0.02", "]"}], ",", "Pink", ",", 
    RowBox[{"Point", "[", "cmass", "]"}]}], "}"}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.7519562406048403`*^9, 3.7519562969753036`*^9}, {
   3.751956337929282*^9, 3.751956401880974*^9}, 3.785581141721661*^9, {
   3.785581432133913*^9, 3.785581449847767*^9}, {3.785581557572564*^9, 
   3.785581561337329*^9}, 3.785581997355302*^9},
 CellLabel->"In[7]:=",
 CellID->1425323488],

Cell[BoxData[
 Graphics3DBox[
  {RGBColor[1, 0.5, 0.5], PointSize[0.02], Point3DBox[CompressedData["
1:eJxllF2ITGEYgKdRtMKFjF21rTb5uRCyftpC7ygZyc/alCGrGaZdiTFKijQi
RklHaksu5sK0LnAhhaLRKzdKbetC2vZiQxrKRtS2WRfOl/f5nM5enKZzmr7v
eZ/znK89X9xTSCYSiQ3hNS28Ogee375Z3Cvpekvy/KxdsuzCjVeZSk52tw5/
ezSZlqEtmj9dWi2JhaPNzw4VpCV3q7Xv13aZ3l0rnc1u07FSV/HMu8Oys+nH
1Z/lg3Knt2vjqU8ZHVs5suDp3B6ZWF/7snROTt5OPnxz9HuHpIP7D9Z2HpBz
J6sf3P3FJ8E9dz9eyn52/4tzwAfHtZmDKcfRvy7TcHwv3lf6HMdQefYJx1HY
2tHk+OCovVwzz3EcSd697PjaVlQz7vnw73wqfK7LdxyrhM91/6VV9QifBq/L
jZBHYzxqPJr+0+iOeFHj0Xx/6njEixqP1tuWtLvfK9Vsb4RXNwX7Arc/XMar
5k0HNjc/jnj6v3+Ma/Dj4gm3/6LrM3oc19fxkfmOy7yq+VZ8x9ZRfDOH+VZ8
M4f5FnybVzXfgu8pvowXX9YX+wi+rC/1ff3rSK0v9lHeE57oCy7zLfiGy3z7
DvBBp/iO9we/eRXzLfi2jlhX6Ms6EuvLc8fWxT8difWl+KJr68v7svmYm848
Bz0xt83H3PibwgGfzaf0xNw2H3PTr/+++X6YO+bTd8e5QnfMzblCd8wNN+cF
Xce5Wd/69V7pGl94pWt8cV7Qdfw7YQ7WYw66tn55T5yb/jvhfKRr65c+6FH/
Andqm7s=
    "]]}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.785581436833193*^9, 3.785581450851507*^9}, 
   3.78558199911828*^9, 3.804508381040963*^9, 3.8045184474217253`*^9, 
   3.804522611471101*^9, 3.8046016309286222`*^9},
 CellLabel->"Out[7]=",
 CellID->792109491]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 CellTags->"Source & Additional Information",
 CellID->348526984],

Cell[CellGroupData[{

Cell[TextData[{
 "Contributed By",
 Cell[BoxData[
  TemplateBox[{"Contributed By", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Enter the name of the person, people or organization that should be \
publicly credited with contributing this function.", "MoreInfoText"], 
       Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
       GrayLevel[0.9], RoundingRadius -> 5]], "MoreInfoText", Deletable -> 
     True, CellTags -> {"SectionMoreInfoContributedBy"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Subsection",
 Editable->False,
 Deletable->False,
 DefaultNewCellStyle->"Text",
 CellTags->{"Contributed By", "ContributorInformation", "TemplateCellGroup"},
 CellID->581484318],

Cell["Jihyeon Je, Yury Polyachenko, John Cassel", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  TemplateBox[{"Keywords", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the function in search results.", 
        "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
       FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5]], "MoreInfoText", 
     Deletable -> True, CellTags -> {"SectionMoreInfoKeywords"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Subsection",
 Editable->False,
 Deletable->False,
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->234953024],

Cell["PDB", "Item"],

Cell["Protein", "Item"],

Cell["Data Import", "Item"],

Cell["Molecular Biology", "Item"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Categories", "Subsection",
 DefaultNewCellStyle->"Item",
 CellTags->{"Categories", "TemplateCellGroup"},
 CellID->360699210],

Cell["External Interfaces & Connections", "Item"],

Cell["Scientific and Medical Data & Computation", "Item"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Symbols",
 Cell[BoxData[
  TemplateBox[{"Related Symbols", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "List up to twenty documented, system-level Wolfram Language symbols \
related to the function.", "MoreInfoText"], Background -> GrayLevel[0.95], 
       FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 
       5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoRelatedSymbols"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Subsection",
 Editable->False,
 Deletable->False,
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Symbols", "TemplateCellGroup"},
 CellID->787980732],

Cell["Import", "Item"],

Cell["ChemicalData", "Item"],

Cell["Molecule", "Item"],

Cell["Atom", "Item"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  TemplateBox[{"Related Resource Objects", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "List the names of published resource objects from any Wolfram \
repository that are related to this function.", "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoRelatedResourceObjects"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Subsection",
 Editable->False,
 Deletable->False,
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Resource Objects", "TemplateCellGroup"},
 CellID->202501204],

Cell["ChemicalNameToSMILES", "Item"],

Cell["SelectAtoms3D", "Item"],

Cell["MoleculeRingPattern", "Item"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source/Reference Citation",
 Cell[BoxData[
  TemplateBox[{"Source/Reference Citation", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Give a bibliographic-style citation for the original source of the \
function and/or its components (e.g. a published paper, algorithm, or code \
repository).", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
       20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5]], 
     "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoSourceReferenceCitation"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Subsection",
 Editable->False,
 Deletable->False,
 DefaultNewCellStyle->"Text",
 CellTags->{"Source/Reference Citation", "TemplateCellGroup"},
 CellID->720896096],

Cell["Source, reference or citation information", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->"TabNext",
 CellID->343081869]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  TemplateBox[{"Links", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "List additional URLs or hyperlinks for external information related \
to the function.", "MoreInfoText"], Background -> GrayLevel[0.95], 
       FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 
       5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoLinks"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Subsection",
 Editable->False,
 Deletable->False,
 DefaultNewCellStyle->"Item",
 CellTags->{"Links", "TemplateCellGroup"},
 CellID->282884713],

Cell["Link to other related material", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->"TabNext",
 CellID->485448166]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Tests",
 Cell[BoxData[
  TemplateBox[{"Tests", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Specify an optional list of tests for verifying that the function is \
working properly in any environment. Tests can be specified as Input/Output \
cell pairs or as symbolic VerificationTest expressions for including \
additional options.", "MoreInfoText"], Background -> GrayLevel[0.95], 
       FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 
       5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoTests"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Subsection",
 Editable->False,
 Deletable->False,
 DefaultNewCellStyle->"Input",
 CellTags->{"TemplateCellGroup", "Tests", "VerificationTests"},
 CellID->899735658],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MyFunction", "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->667877521],

Cell[BoxData[
 RowBox[{"x", " ", "y"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->993233288]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Author Notes", "Section",
 DefaultNewCellStyle->"Text",
 CellTags->{"Author Notes", "TemplateCellGroup"},
 CellID->871584409],

Cell["Additional information about limitations, issues, etc.", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->"TabNext",
 CellID->567921317]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Submission Notes",
 Cell[BoxData[
  TemplateBox[{"Submission Notes", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Enter any additional information that you would like to communicate \
to the reviewer here. This section will not be included in the published \
resource.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
       20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5]], 
     "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoSubmissionNotes"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Section",
 Editable->False,
 Deletable->False,
 DefaultNewCellStyle->"Text",
 CellTags->{"Submission Notes", "TemplateCellGroup"},
 CellID->22658912],

Cell["Additional information for the reviewer.", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->"TabNext",
 CellID->920818074]
}, Open  ]]
},
WindowSize->Automatic,
WindowMargins->Automatic,
TaggingRules->{
 "ResourceType" -> "Function", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> "1.3.1", "CreationTimestamp" -> 
  3.80504313518123`16.332934573595058*^9, "UpdatedTimestamp" -> 
  3.805043135181298`16.332934573595068*^9},
CreateCellID->True,
FrontEndVersion->"12.1 for Linux x86 (64-bit) (March 18, 2020)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.9216, 0.3412, 0.1059], CellTags -> {"MainDockedCell"}], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{39, 5}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    AutoQuoteCharacters -> {}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.4588, 0.4588, 0.4588]], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.0909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcQBxj//Pfjx0tkS
Dp8u+SYJzFB0MORYIxP1RMZhgZT+XRU2BTgNE4epg+nDZe6cIwobijL44Xyg
7hTr+2xw/f2HvmrE9DPAzQcp+1n3xR5mz8MqkXXuD1/Zw+yB8WH2wPgwe2D6
YfbAzIfRMHGYOpg+XOai2wtzF0w/zN0w82H+gtmDKxxg9gAARU63WA==
               "], 
               CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.0458], 
              RGBColor[0.6274, 0.6274, 0.6274, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m0g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0faQfiT4/m0q0IOQNnSwtvSDmxCIvbHYoQcLjHcY+L0knGQ
5n2gO0FByEEnVfJRxHUEvyM59o5bsyycz+jbwuuvLwfXrzL9/4S63XJw86+F
vdHfrS4Pt38x4x5WoSnycPe9e33AUvmUvAPM/TD+46WzjygYiML5+R9aT4Yc
FIXr/7QhIHuWuRjc/LJCoIvWisHt14zpP/T1hRjcfTA+zP0wPsx/MP0w/8PM
h4UPzH5Y+MHcBwtf9PAHAM3Qoi4=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq2R1g/G8aMf2HvrI4KP39
VvrgjgAGH6b+c19wicp0IQf5LzlhtXoccL6BzzIut6WcaPLccP5W0d+n353k
gfM99tfKWqTzwflL9x4UV7vMD+c3FbtN+dYmAOd/2hCQPeu7IJz/KEJ8+8UD
QnC+Jsi5GcJw/uOls48ofEDw571ffsy7XATO/xEMVMEiCudffZ6l/W26qMPh
y9qpkosEHN7Os9G5cgvBXwY0bsMnMQfN0wLHd1mIOQTtkGt9fVHCAehKtvgZ
Yg5XK16qGXYg+DWJRqEGWSJwPsw/MD7MvzD+oi3mPw6l8MH5ORVVS3UO88D5
/1K/P0lU5EaYDw4QTjgfFh/o8QsASQbXkQ==
                "]}]}, {
              FaceForm[
               RGBColor[0.6274, 0.6274, 0.6274, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.0909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcQBxj//Pfjx0tkS
Dp8u+SYJzFB0MORYIxP1RMZhgZT+XRU2BTgNE4epg+nDZe6cIwobijL44Xyg
7hTr+2xw/f2HvmrE9DPAzQcp+1n3xR5mz8MqkXXuD1/Zw+yB8WH2wPgwe2D6
YfbAzIfRMHGYOpg+XOai2wtzF0w/zN0w82H+gtmDKxxg9gAARU63WA==
               "], 
               CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.0458], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcQBxj//Pfjx0tkS
Dp8u+SYJzFB0MORYIxP1RMZhgZT+XRU2BTgNE4epg+nDZe6cIwobijL44Xyg
7hTr+2xw/f2HvmrE9DPAzQcp+1n3xR5mz8MqkXXuD1/Zw+yB8WH2wPgwe2D6
YfbAzIfRMHGYOpg+XOai2wtzF0w/zN0w82H+gtmDKxxg9gAARU63WA==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m0g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0faQfiT4/m0q0IOQNnSwtvSDmxCIvbHYoQcLjHcY+L0knGQ
5n2gO0FByEEnVfJRxHUEvyM59o5bsyycz+jbwuuvLwfXrzL9/4S63XJw86+F
vdHfrS4Pt38x4x5WoSnycPe9e33AUvmUvAPM/TD+46WzjygYiML5+R9aT4Yc
FIXr/7QhIHuWuRjc/LJCoIvWisHt14zpP/T1hRjcfTA+zP0wPsx/MP0w/8PM
h4UPzH5Y+MHcBwtf9PAHAM3Qoi4=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq2R1g/G8aMf2HvrI4KP39
VvrgjgAGH6b+c19wicp0IQf5LzlhtXoccL6BzzIut6WcaPLccP5W0d+n353k
gfM99tfKWqTzwflL9x4UV7vMD+c3FbtN+dYmAOd/2hCQPeu7IJz/KEJ8+8UD
QnC+Jsi5GcJw/uOls48ofEDw571ffsy7XATO/xEMVMEiCudffZ6l/W26qMPh
y9qpkosEHN7Os9G5cgvBXwY0bsMnMQfN0wLHd1mIOQTtkGt9fVHCAehKtvgZ
Yg5XK16qGXYg+DWJRqEGWSJwPsw/MD7MvzD+oi3mPw6l8MH5ORVVS3UO88D5
/1K/P0lU5EaYDw4QTjgfFh/o8QsASQbXkQ==
                "]}]}, {
              FaceForm[
               RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False]}, 
           ImageSize -> {11., 11.}, PlotRange -> {{0., 11.}, {0., 11.}}, 
           AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
           "\"Click for more information\""}, "PrettyTooltipTemplate"], 
         ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ParentCell[
              EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}]]; 
          If[
            And[
             MatchQ[
              CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ParentCell[
                EvaluationCell[]], {
               TaggingRules, "AttachedMoreInfoTag"}] === #], CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ParentCell[
                 EvaluationCell[]], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
          "PrettyTooltipTemplate"], ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}]]; If[
            And[
             MatchQ[
              CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] === #],
             CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ReleaseHold[#3], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.0444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{
           
           ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
clickTime$$ = 0., 
            ResourceSystemClientTools`BuildDefinitionNotebook`Private`timeout$\
$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[
                    AbsoluteTime[] - 
                    ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
clickTime$$ > 
                    ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
timeout$$, 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.65], 
                    Thickness[2/45], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], 
                    Graphics[{
                    RGBColor[0.9882, 0.4196, 0.2039], 
                    Thickness[2/45], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]], 
                    "Click to copy to the clipboard"], 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Graphics[{
                    RGBColor[0, 2/3, 0], 
                    Thickness[2/45], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "Copied"]], UpdateInterval -> 
                    1, TrackedSymbols :> {
                    ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
clickTime$$}], StandardForm], Evaluator -> "System"], 
                 ButtonFunction :> (
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
clickTime$$ = AbsoluteTime[]; CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> RGBColor[0.5373, 0.5373, 0.5373], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain", 
           StripOnInput -> False], Background -> 
          RGBColor[0.9608, 0.9608, 0.9608], FrameStyle -> 
          RGBColor[0.898, 0.898, 0.898], FrameMargins -> 8, StripOnInput -> 
          False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          ResourceSystemClientTools`BuildDefinitionNotebook`Private`$$tooltip,
            "Text", FontColor -> RGBColor[0.5373, 0.5373, 0.5373], FontSize -> 
           12, FontWeight -> "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.9608, 0.9608, 0.9608], FrameStyle -> 
          RGBColor[0.898, 0.898, 0.898], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro", 
               FontSize -> 11, StripOnInput -> False], 
              "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
            With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = ButtonNotebook[], 
               ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$ = \
$ContextPath}, 
              Quiet[
               
               Block[{$ContextPath = 
                 ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                 ResourceSystemClientTools`BuildDefinitionNotebook`Private`nb$\
, 
                  
                  ResourceSystemClient`DefinitionNotebook`DocumentationTools`\
TemplateInput[]]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
            Dynamic[
              FEPrivate`If[
               CurrentValue["MouseOver"], {FontColor -> GrayLevel[1]}, {
               FontColor -> RGBColor[0.8275, 0.2078, 0.]}], Evaluator -> 
              "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCj08dhCBkQWRlQKmbsSY3g9WhKNYErhiu7NGRXTeC
1b5ePg63AsgGigDFEcoe3LsZZ/L95nk0xwBFgOJAWYhrgVpuReljdTZQHCjL
AAbEKCPSNOLdRqxPiQ43YmIBDWCNUwCVRq3x
                "], "Byte", ColorSpace -> 
                "RGB", Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCd04cgiBkQWRlQKltPjqbbcQhCMiGK4Yru3Vo92Y7
qZexWn+yTSAIyAaKAMXhyp48uLfNW+tNvDZcDQQBRYDiQFmIa4FattlJoqmB
IKA4UJYBDIhRRqRpxLuNSJ8SH27ExAIxcQoAZdNqHw==
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
              Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqx7vXP18+gSAgG64YruzVq1c/3zy/
m2hx2ZQBgoBsoAhQHK7s2bNnP968uB1tAFcDQUARoDhQFuJaoJYfj++gqYEg
oDhQlgEMiFFGpGnEu41InxIfbsTEAjFxCgDlLITg
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True]}, Background -> 
            GrayLevel[0.9], Method -> "Queued", ImageSize -> {All, 20}, 
            Evaluator -> Automatic], 
           ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
               FontSize -> 11, StripOnInput -> False], 
              "\"Format selection as literal Wolfram Language code\""}, 
             "PrettyTooltipTemplate"], ButtonFunction :> 
            With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = ButtonNotebook[], 
               ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$ = \
$ContextPath}, 
              Quiet[
               
               Block[{$ContextPath = 
                 ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                 ResourceSystemClientTools`BuildDefinitionNotebook`Private`nb$\
, 
                  
                  ResourceSystemClient`DefinitionNotebook`DocumentationTools`\
LiteralInput[]]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
            Dynamic[
              FEPrivate`If[
               CurrentValue["MouseOver"], {FontColor -> GrayLevel[1]}, {
               FontColor -> RGBColor[0.8275, 0.2078, 0.]}], Evaluator -> 
              "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCj08dhCBkQWRlQKmbsSY3g9WhKNYErhiu7NGRXTeC
1b5ePg63AsgGigDFEcoe3LsZZ/L95nk0xwBFgOJAWYhrgVpuReljdTZQHCjL
AAbEKCPSNOLdRqxPiQ43YmIBDWCNUwCVRq3x
                "], "Byte", ColorSpace -> 
                "RGB", Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCd04cgiBkQWRlQKltPjqbbcQhCMiGK4Yru3Vo92Y7
qZexWn+yTSAIyAaKAMXhyp48uLfNW+tNvDZcDQQBRYDiQFmIa4FattlJoqmB
IKA4UJYBDIhRRqRpxLuNSJ8SH27ExAIxcQoAZdNqHw==
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
              Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqx7vXP18+gSAgG64YruzVq1c/3zy/
m2hx2ZQBgoBsoAhQHK7s2bNnP968uB1tAFcDQUARoDhQFuJaoJYfj++gqYEg
oDhQlgEMiFFGpGnEu41InxIfbsTEAjFxCgDlLITg
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True]}, Background -> 
            GrayLevel[0.9], Method -> "Queued", ImageSize -> {All, 20}, 
            Evaluator -> Automatic], 
           ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Insert Delimiter\"", "Text", FontFamily -> "Source Sans Pro",
                FontSize -> 11, StripOnInput -> False], 
              "\"Insert example delimiter\""}, "PrettyTooltipTemplate"], 
            ButtonFunction :> 
            With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = ButtonNotebook[], 
               ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$ = \
$ContextPath}, 
              Quiet[
               
               Block[{$ContextPath = 
                 ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                 ResourceSystemClientTools`BuildDefinitionNotebook`Private`nb$\
, 
                  
                  ResourceSystemClient`DefinitionNotebook`DocumentationTools`\
DelimiterInsert[]]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
            Dynamic[
              FEPrivate`If[
               CurrentValue["MouseOver"], {FontColor -> GrayLevel[1]}, {
               FontColor -> RGBColor[0.8275, 0.2078, 0.]}], Evaluator -> 
              "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCj08dhCBkQWRlQKmbsSY3g9WhKNYErhiu7NGRXTeC
1b5ePg63AsgGigDFEcoe3LsZZ/L95nk0xwBFgOJAWYhrgVpuReljdTZQHCjL
AAbEKCPSNOLdRqxPiQ43YmIBDWCNUwCVRq3x
                "], "Byte", ColorSpace -> 
                "RGB", Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCd04cgiBkQWRlQKltPjqbbcQhCMiGK4Yru3Vo92Y7
qZexWn+yTSAIyAaKAMXhyp48uLfNW+tNvDZcDQQBRYDiQFmIa4FattlJoqmB
IKA4UJYBDIhRRqRpxLuNSJ8SH27ExAIxcQoAZdNqHw==
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
              Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqx7vXP18+gSAgG64YruzVq1c/3zy/
m2hx2ZQBgoBsoAhQHK7s2bNnP968uB1tAFcDQUARoDhQFuJaoJYfj++gqYEg
oDhQlgEMiFFGpGnEu41InxIfbsTEAjFxCgDlLITg
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True]}, Background -> 
            GrayLevel[0.9], Method -> "Queued", ImageSize -> {All, 20}, 
            Evaluator -> Automatic], 
           ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Subscripted Variable\"", "Text", FontFamily -> 
               "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
              "\"Insert subscripted variable placeholder\""}, 
             "PrettyTooltipTemplate"], ButtonFunction :> 
            With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = ButtonNotebook[], 
               ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$ = \
$ContextPath}, 
              Quiet[
               
               Block[{$ContextPath = 
                 ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                 ResourceSystemClientTools`BuildDefinitionNotebook`Private`nb$\
, 
                  
                  ResourceSystemClient`DefinitionNotebook`DocumentationTools`\
SubscriptInsert[]]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
            Dynamic[
              FEPrivate`If[
               CurrentValue["MouseOver"], {FontColor -> GrayLevel[1]}, {
               FontColor -> RGBColor[0.8275, 0.2078, 0.]}], Evaluator -> 
              "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCj08dhCBkQWRlQKmbsSY3g9WhKNYErhiu7NGRXTeC
1b5ePg63AsgGigDFEcoe3LsZZ/L95nk0xwBFgOJAWYhrgVpuReljdTZQHCjL
AAbEKCPSNOLdRqxPiQ43YmIBDWCNUwCVRq3x
                "], "Byte", ColorSpace -> 
                "RGB", Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCd04cgiBkQWRlQKltPjqbbcQhCMiGK4Yru3Vo92Y7
qZexWn+yTSAIyAaKAMXhyp48uLfNW+tNvDZcDQQBRYDiQFmIa4FattlJoqmB
IKA4UJYBDIhRRqRpxLuNSJ8SH27ExAIxcQoAZdNqHw==
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
              Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqx7vXP18+gSAgG64YruzVq1c/3zy/
m2hx2ZQBgoBsoAhQHK7s2bNnP968uB1tAFcDQUARoDhQFuJaoJYfj++gqYEg
oDhQlgEMiFFGpGnEu41InxIfbsTEAjFxCgDlLITg
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True]}, Background -> 
            GrayLevel[0.9], Method -> "Queued", ImageSize -> {All, 20}, 
            Evaluator -> Automatic], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
               "\"Tables\[ThinSpace]\[ThinSpace]\[ThinSpace]\
\[FilledDownTriangle]\"", "Text", FontFamily -> "Source Sans Pro", FontSize -> 
                11, StripOnInput -> False], "\"Table functions\""}, 
              "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = ButtonNotebook[], 
                ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$\
 = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = 
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                 CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "StatusMessage"}] = 
                  ProgressIndicator[Appearance -> "Necklace"]; 
                 Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                 ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, Null]; CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "StatusMessage"}] = ""; Null]]], 
             FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue["MouseOver"], {FontColor -> GrayLevel[1]}, {
                FontColor -> RGBColor[0.8275, 0.2078, 0.]}], Evaluator -> 
               "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCj08dhCBkQWRlQKmbsSY3g9WhKNYErhiu7NGRXTeC
1b5ePg63AsgGigDFEcoe3LsZZ/L95nk0xwBFgOJAWYhrgVpuReljdTZQHCjL
AAbEKCPSNOLdRqxPiQ43YmIBDWCNUwCVRq3x
                 "], "Byte", ColorSpace -> 
                 "RGB", Interleaving -> True], "Hover" -> 
               Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCd04cgiBkQWRlQKltPjqbbcQhCMiGK4Yru3Vo92Y7
qZexWn+yTSAIyAaKAMXhyp48uLfNW+tNvDZcDQQBRYDiQFmIa4FattlJoqmB
IKA4UJYBDIhRRqRpxLuNSJ8SH27ExAIxcQoAZdNqHw==
                 "], "Byte", 
                 ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
               Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqx7vXP18+gSAgG64YruzVq1c/3zy/
m2hx2ZQBgoBsoAhQHK7s2bNnP968uB1tAFcDQUARoDhQFuJaoJYfj++gqYEg
oDhQlgEMiFFGpGnEu41InxIfbsTEAjFxCgDlLITg
                 "], "Byte", 
                 ColorSpace -> "RGB", Interleaving -> True]}, Background -> 
             GrayLevel[0.9], Method -> "Queued", ImageSize -> {All, 20}, 
             Evaluator -> Automatic], {
            "\"Insert table with two columns\"" :> 
             With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = InputNotebook[], 
                ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$\
 = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = 
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                 Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                 ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, 
                   
                   ResourceSystemClient`DefinitionNotebook`DocumentationTools`\
TableInsert[2]]; Null]]], "\"Insert table with three columns\"" :> 
             With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = InputNotebook[], 
                ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$\
 = $ContextPath}, 
               Quiet[
                Block[{$ContextPath = 
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                 Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                 ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, 
                   
                   ResourceSystemClient`DefinitionNotebook`DocumentationTools`\
TableInsert[3]]; Null]]], "\"Add a row to the selected table\"" :> 
             With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = InputNotebook[], 
                ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$\
 = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = 
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                 Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                 ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, 
                   
                   ResourceSystemClient`DefinitionNotebook`DocumentationTools`\
TableRowInsert[]]; Null]]], "\"Sort the selected table\"" :> 
             With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = InputNotebook[], 
                ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$\
 = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = 
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                 Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                 ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, 
                   
                   ResourceSystemClient`DefinitionNotebook`DocumentationTools`\
TableSort[]]; Null]]], "\"Merge selected tables\"" :> 
             With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = InputNotebook[], 
                ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$\
 = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = 
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                 Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                 ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, 
                   
                   ResourceSystemClient`DefinitionNotebook`DocumentationTools`\
TableMerge[]]; Null]]]}, Appearance -> None, Method -> "Queued"], 
           ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Insert Comment\"", "Text", FontFamily -> "Source Sans Pro", 
               FontSize -> 11, StripOnInput -> False], 
              "\"Insert comment for reviewer\""}, "PrettyTooltipTemplate"], 
            ButtonFunction :> 
            With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = ButtonNotebook[], 
               ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$ = \
$ContextPath}, 
              Quiet[
               
               Block[{$ContextPath = 
                 ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                 ResourceSystemClientTools`BuildDefinitionNotebook`Private`nb$\
, 
                  
                  ResourceSystemClient`DefinitionNotebook`DocumentationTools`\
CommentInsert[]]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
            Dynamic[
              FEPrivate`If[
               CurrentValue["MouseOver"], {FontColor -> GrayLevel[1]}, {
               FontColor -> RGBColor[0.8275, 0.2078, 0.]}], Evaluator -> 
              "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCj08dhCBkQWRlQKmbsSY3g9WhKNYErhiu7NGRXTeC
1b5ePg63AsgGigDFEcoe3LsZZ/L95nk0xwBFgOJAWYhrgVpuReljdTZQHCjL
AAbEKCPSNOLdRqxPiQ43YmIBDWCNUwCVRq3x
                "], "Byte", ColorSpace -> 
                "RGB", Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCd04cgiBkQWRlQKltPjqbbcQhCMiGK4Yru3Vo92Y7
qZexWn+yTSAIyAaKAMXhyp48uLfNW+tNvDZcDQQBRYDiQFmIa4FattlJoqmB
IKA4UJYBDIhRRqRpxLuNSJ8SH27ExAIxcQoAZdNqHw==
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
              Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqx7vXP18+gSAgG64YruzVq1c/3zy/
m2hx2ZQBgoBsoAhQHK7s2bNnP968uB1tAFcDQUARoDhQFuJaoJYfj++gqYEg
oDhQlgEMiFFGpGnEu41InxIfbsTEAjFxCgDlLITg
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True]}, Background -> 
            GrayLevel[0.9], Method -> "Queued", ImageSize -> {All, 20}, 
            Evaluator -> Automatic]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             GrayLevel[0.9]}}, 
         GridBoxFrame -> {
          "Columns" -> False, "RowsIndexed" -> {1 -> GrayLevel[0.9]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "ColumnsIndexed" -> {1 -> 0, -1 -> 0}, "Rows" -> {{Automatic}}}, 
         FrameStyle -> GrayLevel[0.75]], "Grid"]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           TagBox[
            GridBox[{{
               GraphicsBox[{
                 Thickness[0.0222], {
                  FaceForm[{
                    RGBColor[0.8745, 0.2784, 0.0314], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}}, {{{45., 22.5}, {45., 10.074}, {34.926, 0.}, {22.5, 
                   0.}, {10.074, 0.}, {0., 10.074}, {0., 22.5}, {0., 
                   34.926}, {10.074, 45.}, {22.5, 45.}, {34.926, 45.}, {45., 
                   34.926}, {45., 22.5}}}]}, {
                  FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwAWIQLckSxqe7SdlhmnN3zvPblg4w/smyffOl/K0cEp5e
ULq9U9lhT8lkCZZrVg6VL9UMOd4oO1SLrHN/GGXtcLUCKOCh4sDDpN0udtPa
4fnvlR8v8ao6ZIE12ELMrVZzAHLC+HjtHICGz32fruGQC1Zo57BASv+uCpsW
RP9Me4g9YjoQe3gcHICqlx/z1nNgAAEFB4j6Y/oOQMvOfVd2gLhjlgGEz+zg
oBnTf+irhiFEfw/UvDJDiP2+9g7qhhxrZGYZQtS9sHP48vdKxcs2Q4i72u0c
pEHOSTSEuxfsTiFDiPhCWwcXoHd+rzRwWOS67fPfEFuHx0tnH1EoMHDYUJQx
8a2MrUPQDrnW14IGUPfaOnzTAFq0VR8aXrYOoFA6V64HcccvWwfTuF2ePEy6
UPPtHIC+CH68VBvOP70QaNFeLTg/X6j5wKlELYdPl3yTBCLsIP7U0YK49y3U
PR80HQJ6p+cJHbaB88HqZ1jD1QNdUyWSZwWJH2stiHtuWcLdC+ND4lvfwbzT
MeHpBEt4+IPld1lA4p9DH+LuVgu4eeh8sH18hnA+2J6velB3aUHSyxE9iP8U
9aDpBMH3A/rWskQHYt8JBQw+TD0kPpTh5sHSMzgd/0TwYe6B8WHulY1Ksb7f
rwDng+PHSQES31csIPF7UREePgCOg02w
                    "], {{19.051, 14.242}, {
                    19.051, 27.594}, {23.828, 27.594}, {23.828, 26.543}, {
                    21.426, 26.309}, {21.375, 26.258}, {21.375, 24.219}, {
                    21.375, 17.535}, {21.375, 15.602}, {21.426, 15.547}, {
                    23.828, 15.316}, {23.828, 14.242}}, {{24.578, 18.75}, {
                    24.578, 23.078}, {24.578, 23.539}, {24.953, 23.914}, {
                    25.418, 23.91}, {29.746, 23.91}, {30.203, 23.91}, {30.578,
                     23.539}, {30.578, 23.078}, {30.578, 18.75}, {30.582, 
                    18.289}, {30.207, 17.91}, {29.746, 17.91}, {25.418, 
                    17.91}, {24.953, 17.906}, {24.574, 18.285}, {24.578, 
                    18.75}}, {{31.328, 14.242}, {31.328, 15.316}, {33.684, 
                    15.539}, {33.789, 15.602}, {33.789, 17.641}, {33.789, 
                    24.188}, {33.789, 26.227}, {33.684, 26.281}, {31.328, 
                    26.512}, {31.328, 27.586}, {36.113, 27.586}, {36.113, 
                    14.234}}}]}}, {
                ImageSize -> {Automatic, 32}, 
                 ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                 Scaled[0.25], AspectRatio -> Automatic, Background -> 
                 RGBColor[0.9882, 0.4196, 0.2039], ImageSize -> {45., 45.}, 
                 PlotRange -> {{0., 45.}, {0., 45.}}}], 
               StyleBox[
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"Function Resource\"", FontFamily -> "Source Sans Pro", 
                    FontWeight -> "SemiBold", StripOnInput -> False], 
                    StyleBox[
                    "\"DEFINITION NOTEBOOK\"", FontFamily -> 
                    "Source Sans Pro", FontTracking -> "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "ColumnsIndexed" -> {2 -> GrayLevel[1]}, 
                    "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Grid"], FontSize -> 24, FontColor -> GrayLevel[1], 
                StripOnInput -> False]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
           "\[SpanFromLeft]", 
           ItemBox[
            TemplateBox[{
              StyleBox[
              "\"Function Repository \[RightGuillemet]  \"", "Text", 
               FontColor -> GrayLevel[1], StripOnInput -> False], 
              "https://resources.wolframcloud.com/FunctionRepository"}, 
             "HyperlinkURL"], Alignment -> {Right, Bottom}, StripOnInput -> 
            False]}, {
           TemplateBox[{
             
             TemplateBox[{
              "\"Open Sample\"", 
               "\"View a completed sample definition notebook\""}, 
              "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`ViewExampleNotebook[
              ButtonNotebook[]]& , 
             "\"View a completed sample definition notebook\"", False}, 
            "OrangeButtonTemplate"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Style Guidelines\"", 
               "\"View general guidelines for authoring resource \
functions\""}, "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`ViewStyleGuidelines[
              ButtonNotebook[]]& , 
             "\"View general guidelines for authoring resource functions\"", 
             False}, "OrangeButtonTemplate"], 
           TemplateBox[{
             TemplateBox[{
               TagBox[
                GridBox[{{"\"Tools\"", 
                   PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{0., 0.65}, {0., -0.65}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 10, 
                    PlotRangePadding -> None, Background -> None], True -> 
                    GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 10, 
                    PlotRangePadding -> None, Background -> None]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0.1]]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
               "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`ToggleToolbar[
              ButtonNotebook[]]& , "\"Toggle documentation toolbar\"", False},
             "OrangeButtonTemplate"], 
           TagBox[
            
            GridBox[{{"\"\"", "\"\""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxDividers -> {
              "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
             RGBColor[0.9941, 0.7098, 0.602]], "Grid"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Check\"", "\"Check notebook for potential errors\""}, 
              "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`CheckDefinitionNotebook[
              ButtonNotebook[]]& , "\"Check notebook for potential errors\"", 
             False}, "OrangeButtonTemplate"], 
           ActionMenuBox[
            
            TemplateBox[{
             "\"Preview \[FilledDownTriangle]\"", Null& , "\"\"", True}, 
             "OrangeButtonTemplate"], {
            "\"In a notebook\"" :> 
             With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = InputNotebook[], 
                ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$\
 = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = 
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                 CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "StatusMessage"}] = 
                  ProgressIndicator[Appearance -> "Necklace"]; 
                 Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                 ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, 
                   ResourceSystemClient`DefinitionNotebook`PreviewResource[
                    ButtonNotebook[], "Notebook"]]; 
                 CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "StatusMessage"}] = ""; Null]]], "\"On the cloud\"" :> 
             With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = InputNotebook[], 
                ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$\
 = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = 
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                 CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "StatusMessage"}] = 
                  ProgressIndicator[Appearance -> "Necklace"]; 
                 Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                 ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, 
                   ResourceSystemClient`DefinitionNotebook`PreviewResource[
                    ButtonNotebook[], "Cloud"]]; 
                 CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "StatusMessage"}] = ""; Null]]]}, Appearance -> None, 
            Method -> "Queued"], 
           ActionMenuBox[
            
            TemplateBox[{
             "\"Deploy \[FilledDownTriangle]\"", Null& , "\"\"", True}, 
             "OrangeButtonTemplate"], {
            "\"Locally on this computer\"" :> 
             With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = InputNotebook[], 
                ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$\
 = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = 
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                 CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "StatusMessage"}] = 
                  ProgressIndicator[Appearance -> "Necklace"]; 
                 Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                 ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, 
                   ResourceSystemClient`DefinitionNotebook`DisplayStripe[
                    ButtonNotebook[], 
                    ResourceSystemClient`DefinitionNotebook`DeployResource[
                    ButtonNotebook[], "Local"]]]; 
                 CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "StatusMessage"}] = ""; Null]]], 
             "\"For my cloud account\"" :> 
             With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = InputNotebook[], 
                ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$\
 = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = 
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                 CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "StatusMessage"}] = 
                  ProgressIndicator[Appearance -> "Necklace"]; 
                 Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                 ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, 
                   ResourceSystemClient`DefinitionNotebook`DisplayStripe[
                    ButtonNotebook[], 
                    ResourceSystemClient`DefinitionNotebook`DeployResource[
                    ButtonNotebook[], "CloudPrivate"]]]; 
                 CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "StatusMessage"}] = ""; Null]]], 
             "\"Publicly in the cloud\"" :> 
             With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = InputNotebook[], 
                ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$\
 = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = 
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                 CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "StatusMessage"}] = 
                  ProgressIndicator[Appearance -> "Necklace"]; 
                 Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                 ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, 
                   ResourceSystemClient`DefinitionNotebook`DisplayStripe[
                    ButtonNotebook[], 
                    ResourceSystemClient`DefinitionNotebook`DeployResource[
                    ButtonNotebook[], "CloudPublic"]]]; 
                 CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "StatusMessage"}] = ""; Null]]], 
             "\"In this session only (without documentation)\"" :> 
             With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$ = InputNotebook[], 
                ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$\
 = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = 
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`$\
cp$, ResourceSystemClient`$AsyncronousResourceInformationUpdates = False}, 
                 CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "StatusMessage"}] = 
                  ProgressIndicator[Appearance -> "Necklace"]; 
                 Needs["ResourceSystemClient`DefinitionNotebook`"]; 
                 ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, 
                   ResourceSystemClient`DefinitionNotebook`DisplayStripe[
                    ButtonNotebook[], 
                    ResourceSystemClient`DefinitionNotebook`DeployResource[
                    ButtonNotebook[], "KernelSession"]]]; 
                 CurrentValue[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb$, {TaggingRules, "StatusMessage"}] = ""; Null]]]}, Appearance -> None, 
            Method -> "Queued"], 
           ItemBox[
            StyleBox[
             DynamicBox[
              ToBoxes[
               CurrentValue[
                EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
               StandardForm], Evaluator -> "System", 
              Initialization :> (CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
               "")], "Text", 
             GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
            StripOnInput -> False], 
           DynamicBox[
            ToBoxes[
             If[
              CurrentValue[
               EvaluationNotebook[], {
               TaggingRules, "SubmissionReviewData", "Review"}, False], 
              RawBoxes[
               TemplateBox[{
                 TemplateBox[{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.0635], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[0.9608, 0.7059, 0.498, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                   "\"Submit changes to update your resource submission\""}, 
                  "PrettyTooltipTemplate"], 
                 With[{ResourceSystemClientTools`BuildDefinitionNotebook`\
Private`nb = ButtonNotebook[]}, 
                  ResourceSystemClient`DefinitionNotebook`DisplayStripe[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb, 
                   
                   ResourceSystemClient`DefinitionNotebook`\
SubmitRepositoryUpdate[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb], "ShowProgress" -> True]]& , 
                 "\"Submit changes to update your resource submission\"", 
                 True}, "OrangeButtonTemplate"]], 
              RawBoxes[
               TemplateBox[{
                 TemplateBox[{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.0635], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[0.9608, 0.7059, 0.498, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                   "\"Submit your function to the Wolfram Function Repository\
\""}, "PrettyTooltipTemplate"], 
                 With[{ResourceSystemClientTools`BuildDefinitionNotebook`\
Private`nb = ButtonNotebook[]}, 
                  ResourceSystemClient`DefinitionNotebook`DisplayStripe[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb, 
                   ResourceSystemClient`DefinitionNotebook`SubmitRepository[
                   ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb], "ShowProgress" -> True]]& , 
                 "\"Submit your function to the Wolfram Function \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
            "System", SingleEvaluation -> True]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.9882, 0.4196, 0.2039], 
             RGBColor[0.9216, 0.3412, 0.1059]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {
            1 -> RGBColor[0.9882, 0.4196, 0.2039], 2 -> 
             RGBColor[0.9216, 0.3412, 0.1059]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "Columns" -> {5, {0.9}, 5}, 
           "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 1.55}}, FrameStyle -> 
         RGBColor[0.9882, 0.4196, 0.2039]], "Grid"]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{
               Thickness[0.0222], {
                FaceForm[{
                  RGBColor[0.8745, 0.2784, 0.0314], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, {{{45., 22.5}, {45., 10.074}, {34.926, 0.}, {22.5, 
                 0.}, {10.074, 0.}, {0., 10.074}, {0., 22.5}, {0., 34.926}, {
                 10.074, 45.}, {22.5, 45.}, {34.926, 45.}, {45., 34.926}, {
                 45., 22.5}}}]}, {
                FaceForm[{
                  RGBColor[1., 1., 1.], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                  2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwAWIQLckSxqe7SdlhmnN3zvPblg4w/smyffOl/K0cEp5e
ULq9U9lhT8lkCZZrVg6VL9UMOd4oO1SLrHN/GGXtcLUCKOCh4sDDpN0udtPa
4fnvlR8v8ao6ZIE12ELMrVZzAHLC+HjtHICGz32fruGQC1Zo57BASv+uCpsW
RP9Me4g9YjoQe3gcHICqlx/z1nNgAAEFB4j6Y/oOQMvOfVd2gLhjlgGEz+zg
oBnTf+irhiFEfw/UvDJDiP2+9g7qhhxrZGYZQtS9sHP48vdKxcs2Q4i72u0c
pEHOSTSEuxfsTiFDiPhCWwcXoHd+rzRwWOS67fPfEFuHx0tnH1EoMHDYUJQx
8a2MrUPQDrnW14IGUPfaOnzTAFq0VR8aXrYOoFA6V64HcccvWwfTuF2ePEy6
UPPtHIC+CH68VBvOP70QaNFeLTg/X6j5wKlELYdPl3yTBCLsIP7U0YK49y3U
PR80HQJ6p+cJHbaB88HqZ1jD1QNdUyWSZwWJH2stiHtuWcLdC+ND4lvfwbzT
MeHpBEt4+IPld1lA4p9DH+LuVgu4eeh8sH18hnA+2J6velB3aUHSyxE9iP8U
9aDpBMH3A/rWskQHYt8JBQw+TD0kPpTh5sHSMzgd/0TwYe6B8WHulY1Ksb7f
rwDng+PHSQES31csIPF7UREePgCOg02w
                  "], {{19.051, 14.242}, {
                  19.051, 27.594}, {23.828, 27.594}, {23.828, 26.543}, {
                  21.426, 26.309}, {21.375, 26.258}, {21.375, 24.219}, {
                  21.375, 17.535}, {21.375, 15.602}, {21.426, 15.547}, {
                  23.828, 15.316}, {23.828, 14.242}}, {{24.578, 18.75}, {
                  24.578, 23.078}, {24.578, 23.539}, {24.953, 23.914}, {
                  25.418, 23.91}, {29.746, 23.91}, {30.203, 23.91}, {30.578, 
                  23.539}, {30.578, 23.078}, {30.578, 18.75}, {30.582, 
                  18.289}, {30.207, 17.91}, {29.746, 17.91}, {25.418, 
                  17.91}, {24.953, 17.906}, {24.574, 18.285}, {24.578, 
                  18.75}}, {{31.328, 14.242}, {31.328, 15.316}, {33.684, 
                  15.539}, {33.789, 15.602}, {33.789, 17.641}, {33.789, 
                  24.188}, {33.789, 26.227}, {33.684, 26.281}, {31.328, 
                  26.512}, {31.328, 27.586}, {36.113, 27.586}, {36.113, 
                  14.234}}}]}}, {
              ImageSize -> 12, AspectRatio -> Automatic, Background -> None, 
               ImageSize -> {45., 45.}, PlotRange -> {{0., 45.}, {0., 45.}}}],
              "Wolfram Function Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11]}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
         "SemiBold", FontTracking -> -0.9, FontSize -> 13, FontColor -> 
         GrayLevel[1], StripOnInput -> False], ButtonFunction :> 
        With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`nb$ = 
           ButtonNotebook[], 
           ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$ = \
$ContextPath}, 
          Quiet[
           
           Block[{$ContextPath = 
             ResourceSystemClientTools`BuildDefinitionNotebook`Private`$cp$, 
             ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
             False}, Needs["ResourceSystemClient`DefinitionNotebook`"]; 
            ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
             ResourceSystemClientTools`BuildDefinitionNotebook`Private`nb$, 
              If[
               TrueQ[#4], 
               
               With[{ResourceSystemClientTools`BuildDefinitionNotebook`\
Private`nb = ButtonNotebook[]}, 
                CurrentValue[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb, {TaggingRules, "StatusMessage"}] = 
                 ProgressIndicator[Appearance -> "Necklace"]; #2[]; 
                CurrentValue[
                  ResourceSystemClientTools`BuildDefinitionNotebook`Private`\
nb, {TaggingRules, "StatusMessage"}] = ""; Null], 
               #2[]]]; Null]]], FrameMargins -> {{5, 5}, {0, 0}}, 
        Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQvA6XhqPnQeIQhCyIrAwodd2K5Yo5IwQB2XDFcGXPAsWu
mjNdNmVARkARoDhc2aswqWtWLGhqIAgoDpSFuBao5QqGURB0BWwgAxgQo4xI
04h3G5E+JT7ciIkFYuIUAMJyEaA=
            "], "Byte", ColorSpace -> "RGB", 
            Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQvA6XhqMHARIQhCyIrAwotcmIc7UuOwQB2XDFcGX3/MXX
6LEv12ZDRkARoDhc2cswqY2GnGhqIAgoDpSFuBaoZTWGURC0GmwgAxgQo4xI
04h3G5E+JT7ciIkFYuIUAJxlBG4=
            "], "Byte", ColorSpace -> "RGB", 
            Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQvA6XhqN3hfYQhCyIrAwo9e36ma8PbkIQkA1XDFf2vtzt
28Obu6Jsl2uzQRCQDRQBisOVvYlR+nb99I5gU7gaCAKKAMWBshDXArV8unUR
TQ0EAcWBsgxgQIwyIk0j3m1E+pT4cCMmFoiJUwBBtDmK
            "], "Byte", 
            ColorSpace -> "RGB", Interleaving -> True]}, Background -> 
        RGBColor[0.9216, 0.3412, 0.1059], Method -> "Queued", 
        ImageSize -> {All, 23}, Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              AdjustmentBox[
               TemplateBox[{
                 ActionMenuBox[
                  TagBox[
                   PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                   MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                  Method -> "Queued"], "\"View suggestions\""}, 
                "PrettyTooltipTemplate"], BoxBaselineShift -> -0.3]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -1.}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.0556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.3084}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.3084}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/sWTrBh9WVTg5rt0
5zz/3akCt//sGRBQgbsPxoe5H8aH+Q+mH+Z/mPmw8IHZDws/mPtg4Yse/gBw
FJLS
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {
     "ReturnKeyDown" :> 
      With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`nb = 
         Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; 
        NotebookWrite[
         ResourceSystemClientTools`BuildDefinitionNotebook`Private`nb, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[
         ResourceSystemClientTools`BuildDefinitionNotebook`Private`nb, Before,
           CellContents]], {"KeyDown", "\t"} :> Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {
     "ReturnKeyDown" :> 
      With[{ResourceSystemClientTools`BuildDefinitionNotebook`Private`nb = 
         Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; 
        NotebookWrite[
         ResourceSystemClientTools`BuildDefinitionNotebook`Private`nb, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[
         ResourceSystemClientTools`BuildDefinitionNotebook`Private`nb, Before,
           CellContents]], {"KeyDown", "\t"} :> Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None], 
   Cell[
    StyleData["Hyperlink"], FontColor -> RGBColor[0.9216, 0.3412, 0.1059]], 
   Cell[
    StyleData["HyperlinkActive"], FontColor -> 
    RGBColor[0.6144, 0.2275, 0.0706]], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.8549, 0.3961, 0.1451], 
       RGBColor[0.0196, 0.2863, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink"], 
    TemplateBoxOptions -> {DisplayFunction :> (TagBox[
        DynamicBox[
         If[
          CurrentValue["MouseOver"], 
          ButtonBox[
           StyleBox[#, FontColor -> RGBColor[0.9686, 0.4667, 0.]], 
           ButtonData -> #2], 
          ButtonBox[#, ButtonData -> #2]]], 
        MouseAppearanceTag["LinkHand"]]& )}, 
    ButtonBoxOptions -> {
     BaseStyle -> {FontColor -> GrayLevel[0.4667], "Link"}}], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.9059]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, CellFrameColor -> 
    RGBColor[0.8807, 0.611, 0.1421], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.9821, 0.9417, 0.8713]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    CellFrameColor -> RGBColor[0.3684, 0.5068, 0.7098], Background -> 
    RGBColor[0.9053, 0.926, 0.9565]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    CellFrameColor -> RGBColor[0.5602, 0.6916, 0.1949], Background -> 
    RGBColor[0.934, 0.9537, 0.8792]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[0.9]]}, Visible -> False, FrontEndVersion -> 
  "12.1 for Linux x86 (64-bit) (March 18, 2020)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Title"->{
  Cell[558, 20, 46, 1, 70, "Title",ExpressionUUID->"2b3e1739-1d71-426f-a5cd-c3126a7ef279",
   CellTags->"Title"]},
 "Description"->{
  Cell[607, 23, 99, 1, 70, "Text",ExpressionUUID->"80cb0ef7-8f01-4089-883c-102966d3d4c6",
   CellTags->"Description"]},
 "Definition"->{
  Cell[731, 28, 946, 23, 70, "Section",ExpressionUUID->"a0b456e1-0b36-4b18-a9fe-bb61f0016816",
   CellTags->{"Definition", "Function", "TemplateCellGroup"},
   CellID->271561301]},
 "Function"->{
  Cell[731, 28, 946, 23, 70, "Section",ExpressionUUID->"a0b456e1-0b36-4b18-a9fe-bb61f0016816",
   CellTags->{"Definition", "Function", "TemplateCellGroup"},
   CellID->271561301]},
 "TemplateCellGroup"->{
  Cell[731, 28, 946, 23, 70, "Section",ExpressionUUID->"a0b456e1-0b36-4b18-a9fe-bb61f0016816",
   CellTags->{"Definition", "Function", "TemplateCellGroup"},
   CellID->271561301],
  Cell[11143, 303, 1697, 44, 70, "Subsection",ExpressionUUID->"e9e412b2-276b-45c9-a0bc-18d21ce7e25d",
   CellTags->{"TemplateCellGroup", "Usage"},
   CellID->657272351],
  Cell[14985, 444, 1187, 26, 70, "Subsection",ExpressionUUID->"1c67543b-7c0a-4339-bba1-d4887bfd32fe",
   CellTags->{"Details & Options", "Notes", "TemplateCellGroup"},
   CellID->25317349],
  Cell[20606, 570, 6634, 145, 70, "Section",ExpressionUUID->"35ad3f83-294a-4d3a-a801-a61390b07d43",
   CellTags->{"Examples", "TemplateCellGroup"},
   CellID->487306095],
  Cell[298944, 5716, 756, 20, 70, "Subsection",ExpressionUUID->"c7ca6c0d-4d90-48a2-8006-2bcd5bcd2354",
   CellTags->{"Contributed By", "ContributorInformation", "TemplateCellGroup"},
   CellID->581484318],
  Cell[299797, 5743, 731, 20, 70, "Subsection",ExpressionUUID->"93082850-030f-4721-94b5-dad133400338",
   CellTags->{"Keywords", "TemplateCellGroup"},
   CellID->234953024],
  Cell[300679, 5776, 130, 3, 70, "Subsection",ExpressionUUID->"0435f3ad-5d98-45a0-9acd-c6a75430ce1c",
   CellTags->{"Categories", "TemplateCellGroup"},
   CellID->360699210],
  Cell[300958, 5788, 708, 20, 70, "Subsection",ExpressionUUID->"6d6c4ba2-6349-4ade-a935-8d1b2140bae2",
   CellTags->{"Related Symbols", "TemplateCellGroup"},
   CellID->787980732],
  Cell[301809, 5821, 758, 20, 70, "Subsection",ExpressionUUID->"187d3d3d-9587-484c-95ed-eee5362eb836",
   CellTags->{"Related Resource Objects", "TemplateCellGroup"},
   CellID->202501204],
  Cell[302713, 5852, 809, 21, 70, "Subsection",ExpressionUUID->"d47d940f-bdc1-425f-92eb-ee3aaf66d521",
   CellTags->{"Source/Reference Citation", "TemplateCellGroup"},
   CellID->720896096],
  Cell[304058, 5888, 661, 20, 70, "Subsection",ExpressionUUID->"8ca8e7d6-6cdc-4dc4-9e06-4d9a8e48497f",
   CellTags->{"Links", "TemplateCellGroup"},
   CellID->282884713],
  Cell[305244, 5923, 836, 22, 70, "Subsection",ExpressionUUID->"8ebdae6d-ba3d-49a6-aaab-90c9b386b278",
   CellTags->{"TemplateCellGroup", "Tests", "VerificationTests"},
   CellID->899735658],
  Cell[306391, 5965, 131, 3, 70, "Section",ExpressionUUID->"52aa75d6-eee6-47b5-a79a-36855d64ab9b",
   CellTags->{"Author Notes", "TemplateCellGroup"},
   CellID->871584409],
  Cell[307071, 5983, 766, 21, 70, "Section",ExpressionUUID->"afac0212-522c-4348-80eb-af89fe5ac8c2",
   CellTags->{"Submission Notes", "TemplateCellGroup"},
   CellID->22658912]},
 "Documentation"->{
  Cell[11038, 297, 80, 2, 70, "Section",ExpressionUUID->"e83e28dd-34b6-4f83-8aef-085a50dd8e12",
   CellTags->"Documentation",
   CellID->363488142]},
 "Usage"->{
  Cell[11143, 303, 1697, 44, 70, "Subsection",ExpressionUUID->"e9e412b2-276b-45c9-a0bc-18d21ce7e25d",
   CellTags->{"TemplateCellGroup", "Usage"},
   CellID->657272351]},
 "Details & Options"->{
  Cell[14985, 444, 1187, 26, 70, "Subsection",ExpressionUUID->"1c67543b-7c0a-4339-bba1-d4887bfd32fe",
   CellTags->{"Details & Options", "Notes", "TemplateCellGroup"},
   CellID->25317349]},
 "Notes"->{
  Cell[14985, 444, 1187, 26, 70, "Subsection",ExpressionUUID->"1c67543b-7c0a-4339-bba1-d4887bfd32fe",
   CellTags->{"Details & Options", "Notes", "TemplateCellGroup"},
   CellID->25317349]},
 "TabNext"->{
  Cell[16175, 472, 1317, 28, 70, "Notes",ExpressionUUID->"f6dd67f2-cf4d-43b9-82a7-4acc5003bfed",
   CellTags->"TabNext",
   CellID->162665517],
  Cell[303525, 5875, 496, 8, 70, "Text",ExpressionUUID->"e636b870-2b98-4996-8708-bb2593effc12",
   CellTags->"TabNext",
   CellID->343081869],
  Cell[304722, 5910, 485, 8, 70, "Item",ExpressionUUID->"79d30c8e-ba01-4e1e-a09f-d1d627a2d70a",
   CellTags->"TabNext",
   CellID->485448166],
  Cell[306525, 5970, 509, 8, 70, "Text",ExpressionUUID->"fa574fbc-3205-4177-80a1-f6e36f163525",
   CellTags->"TabNext",
   CellID->567921317],
  Cell[307840, 6006, 495, 8, 70, "Text",ExpressionUUID->"908486db-ffcb-4f0d-ab27-582fb33ee940",
   CellTags->"TabNext",
   CellID->920818074]},
 "Examples"->{
  Cell[20606, 570, 6634, 145, 70, "Section",ExpressionUUID->"35ad3f83-294a-4d3a-a801-a61390b07d43",
   CellTags->{"Examples", "TemplateCellGroup"},
   CellID->487306095]},
 "Source & Additional Information"->{
  Cell[298803, 5710, 116, 2, 70, "Section",ExpressionUUID->"145e598c-ba70-4581-a696-48a49845517b",
   CellTags->"Source & Additional Information",
   CellID->348526984]},
 "Contributed By"->{
  Cell[298944, 5716, 756, 20, 70, "Subsection",ExpressionUUID->"c7ca6c0d-4d90-48a2-8006-2bcd5bcd2354",
   CellTags->{"Contributed By", "ContributorInformation", "TemplateCellGroup"},
   CellID->581484318]},
 "ContributorInformation"->{
  Cell[298944, 5716, 756, 20, 70, "Subsection",ExpressionUUID->"c7ca6c0d-4d90-48a2-8006-2bcd5bcd2354",
   CellTags->{"Contributed By", "ContributorInformation", "TemplateCellGroup"},
   CellID->581484318]},
 "Keywords"->{
  Cell[299797, 5743, 731, 20, 70, "Subsection",ExpressionUUID->"93082850-030f-4721-94b5-dad133400338",
   CellTags->{"Keywords", "TemplateCellGroup"},
   CellID->234953024]},
 "Categories"->{
  Cell[300679, 5776, 130, 3, 70, "Subsection",ExpressionUUID->"0435f3ad-5d98-45a0-9acd-c6a75430ce1c",
   CellTags->{"Categories", "TemplateCellGroup"},
   CellID->360699210]},
 "Related Symbols"->{
  Cell[300958, 5788, 708, 20, 70, "Subsection",ExpressionUUID->"6d6c4ba2-6349-4ade-a935-8d1b2140bae2",
   CellTags->{"Related Symbols", "TemplateCellGroup"},
   CellID->787980732]},
 "Related Resource Objects"->{
  Cell[301809, 5821, 758, 20, 70, "Subsection",ExpressionUUID->"187d3d3d-9587-484c-95ed-eee5362eb836",
   CellTags->{"Related Resource Objects", "TemplateCellGroup"},
   CellID->202501204]},
 "Source/Reference Citation"->{
  Cell[302713, 5852, 809, 21, 70, "Subsection",ExpressionUUID->"d47d940f-bdc1-425f-92eb-ee3aaf66d521",
   CellTags->{"Source/Reference Citation", "TemplateCellGroup"},
   CellID->720896096]},
 "Links"->{
  Cell[304058, 5888, 661, 20, 70, "Subsection",ExpressionUUID->"8ca8e7d6-6cdc-4dc4-9e06-4d9a8e48497f",
   CellTags->{"Links", "TemplateCellGroup"},
   CellID->282884713]},
 "Tests"->{
  Cell[305244, 5923, 836, 22, 70, "Subsection",ExpressionUUID->"8ebdae6d-ba3d-49a6-aaab-90c9b386b278",
   CellTags->{"TemplateCellGroup", "Tests", "VerificationTests"},
   CellID->899735658]},
 "VerificationTests"->{
  Cell[305244, 5923, 836, 22, 70, "Subsection",ExpressionUUID->"8ebdae6d-ba3d-49a6-aaab-90c9b386b278",
   CellTags->{"TemplateCellGroup", "Tests", "VerificationTests"},
   CellID->899735658]},
 "Author Notes"->{
  Cell[306391, 5965, 131, 3, 70, "Section",ExpressionUUID->"52aa75d6-eee6-47b5-a79a-36855d64ab9b",
   CellTags->{"Author Notes", "TemplateCellGroup"},
   CellID->871584409]},
 "Submission Notes"->{
  Cell[307071, 5983, 766, 21, 70, "Section",ExpressionUUID->"afac0212-522c-4348-80eb-af89fe5ac8c2",
   CellTags->{"Submission Notes", "TemplateCellGroup"},
   CellID->22658912]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Title", 394817, 7695},
 {"Description", 394950, 7698},
 {"Definition", 395087, 7701},
 {"Function", 395283, 7705},
 {"TemplateCellGroup", 395488, 7709},
 {"Documentation", 398052, 7752},
 {"Usage", 398214, 7756},
 {"Details & Options", 398409, 7760},
 {"Notes", 398612, 7764},
 {"TabNext", 398817, 7768},
 {"Examples", 399549, 7784},
 {"Source & Additional Information", 399759, 7788},
 {"Contributed By", 399951, 7792},
 {"ContributorInformation", 400187, 7796},
 {"Keywords", 400409, 7800},
 {"Categories", 400601, 7804},
 {"Related Symbols", 400799, 7808},
 {"Related Resource Objects", 401012, 7812},
 {"Source/Reference Citation", 401235, 7816},
 {"Links", 401439, 7820},
 {"Tests", 401623, 7824},
 {"VerificationTests", 401840, 7828},
 {"Author Notes", 402052, 7832},
 {"Submission Notes", 402250, 7836}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 46, 1, 70, "Title",ExpressionUUID->"2b3e1739-1d71-426f-a5cd-c3126a7ef279",
 CellTags->"Title"],
Cell[607, 23, 99, 1, 70, "Text",ExpressionUUID->"80cb0ef7-8f01-4089-883c-102966d3d4c6",
 CellTags->"Description"],
Cell[CellGroupData[{
Cell[731, 28, 946, 23, 70, "Section",ExpressionUUID->"a0b456e1-0b36-4b18-a9fe-bb61f0016816",
 CellTags->{"Definition", "Function", "TemplateCellGroup"},
 CellID->271561301],
Cell[1680, 53, 7578, 190, 70, "Input",ExpressionUUID->"2942d344-4ebd-43e6-8dfb-3190e6d26426",
 InitializationCell->True,
 CellID->138161661],
Cell[9261, 245, 864, 25, 70, "Input",ExpressionUUID->"1d6b7aaa-62ff-471c-b2e8-d276e94ed94d",
 InitializationCell->True,
 CellID->653214020],
Cell[CellGroupData[{
Cell[10150, 274, 198, 6, 70, "Input",ExpressionUUID->"66af3272-0ec7-472f-8859-8a53eec90f28",
 InitializationCell->True,
 CellID->631630676],
Cell[10351, 282, 660, 11, 70, "Output",ExpressionUUID->"5d2acb7f-09de-4144-bc9a-efddedc9f1f7",
 CellID->1393703902]
}, Open  ]]
}, Open  ]],
Cell[11038, 297, 80, 2, 70, "Section",ExpressionUUID->"e83e28dd-34b6-4f83-8aef-085a50dd8e12",
 CellTags->"Documentation",
 CellID->363488142],
Cell[CellGroupData[{
Cell[11143, 303, 1697, 44, 70, "Subsection",ExpressionUUID->"e9e412b2-276b-45c9-a0bc-18d21ce7e25d",
 CellTags->{"TemplateCellGroup", "Usage"},
 CellID->657272351],
Cell[CellGroupData[{
Cell[12865, 351, 89, 2, 70, "UsageInputs",ExpressionUUID->"826b9e16-1cb7-4c78-a525-351de77d5fca"],
Cell[12957, 355, 176, 6, 70, "UsageDescription",ExpressionUUID->"09b152d7-6673-4afa-a83a-aacfc58211c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13170, 366, 126, 3, 70, "UsageInputs",ExpressionUUID->"3455e094-b8de-4549-8f84-c2130d94be12"],
Cell[13299, 371, 204, 6, 70, "UsageDescription",ExpressionUUID->"a98a3546-ff2f-4591-8a4c-654fe0948f58"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13540, 382, 143, 4, 70, "UsageInputs",ExpressionUUID->"3eb518e6-dba0-4d9e-bedc-73eb08470ac4"],
Cell[13686, 388, 229, 6, 70, "UsageDescription",ExpressionUUID->"3e5ee035-9e5e-4541-8947-b3785f64dfe7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13952, 399, 135, 4, 70, "UsageInputs",ExpressionUUID->"20a320db-5d3e-4da8-9e39-aae8e963023d"],
Cell[14090, 405, 192, 6, 70, "UsageDescription",ExpressionUUID->"6ece631b-508c-425f-9bca-9b6df314d0d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14319, 416, 192, 6, 70, "UsageInputs",ExpressionUUID->"b1b77b69-1bae-4823-9730-6fe3caf8d6e7"],
Cell[14514, 424, 422, 14, 70, "UsageDescription",ExpressionUUID->"8cdd92ee-395f-41b9-ac31-ac084975b11b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14985, 444, 1187, 26, 70, "Subsection",ExpressionUUID->"1c67543b-7c0a-4339-bba1-d4887bfd32fe",
 CellTags->{"Details & Options", "Notes", "TemplateCellGroup"},
 CellID->25317349],
Cell[16175, 472, 1317, 28, 70, "Notes",ExpressionUUID->"f6dd67f2-cf4d-43b9-82a7-4acc5003bfed",
 CellTags->"TabNext",
 CellID->162665517],
Cell[17495, 502, 1436, 25, 70, "Notes",ExpressionUUID->"463a090d-2c18-4c78-a3f3-dc34076b8a83",
 CellID->206194200],
Cell[18934, 529, 1635, 36, 70, "Notes",ExpressionUUID->"4b37ebcd-fae5-4b8f-9cdc-c6a8f7d1c395",
 CellID->599508142]
}, Open  ]],
Cell[CellGroupData[{
Cell[20606, 570, 6634, 145, 70, "Section",ExpressionUUID->"35ad3f83-294a-4d3a-a801-a61390b07d43",
 CellTags->{"Examples", "TemplateCellGroup"},
 CellID->487306095],
Cell[CellGroupData[{
Cell[27265, 719, 99, 3, 70, "Subsection",ExpressionUUID->"f1ed35d0-9cd3-400f-ad37-9207a5cebf91",
 CellID->285421464],
Cell[27367, 724, 214, 4, 70, "Text",ExpressionUUID->"5f0a3982-ea74-4aef-9869-e666e45be61c",
 CellID->403524650],
Cell[CellGroupData[{
Cell[27606, 732, 242, 6, 70, "Input",ExpressionUUID->"dd591d47-813e-4742-a499-33ba1e1b5e88",
 CellID->1436758559],
Cell[27851, 740, 215464, 3540, 70, "Output",ExpressionUUID->"30c9ad23-841f-4959-9718-c9005b79e19c",
 CellID->1766785253]
}, Open  ]],
Cell[243330, 4283, 144, 4, 70, "ExampleDelimiter",ExpressionUUID->"a5bf1425-0bb7-4d39-a550-2bb8f793f563",
 CellID->754920879],
Cell[243477, 4289, 934, 25, 70, "Text",ExpressionUUID->"e3c52032-8c87-48be-82b6-d00418456914",
 CellID->444610718],
Cell[CellGroupData[{
Cell[244436, 4318, 559, 13, 70, "Input",ExpressionUUID->"1a3a1c16-ec1e-40e1-81ee-8071afa3ddac",
 CellID->268955899],
Cell[244998, 4333, 11173, 270, 70, "Output",ExpressionUUID->"e46d4653-dd09-40a6-8320-f35ef8c35c02",
 CellID->1104936250]
}, Open  ]],
Cell[256186, 4606, 428, 12, 70, "Text",ExpressionUUID->"8b2ed6da-05bf-4cfc-9ee6-081701fb519e",
 CellID->807974276],
Cell[CellGroupData[{
Cell[256639, 4622, 655, 14, 70, "Input",ExpressionUUID->"dd6c0a57-7103-41ce-9433-53dc05d84978",
 CellID->1084556751],
Cell[257297, 4638, 752, 18, 70, "Output",ExpressionUUID->"206412bc-03a2-4850-b09d-be3cea5ba4cc",
 CellID->1372458141]
}, Open  ]],
Cell[258064, 4659, 438, 7, 70, "Text",ExpressionUUID->"1cb9cfa5-0458-4198-94a7-74ff75cc6742",
 CellID->305541187],
Cell[CellGroupData[{
Cell[258527, 4670, 791, 15, 70, "Input",ExpressionUUID->"5c7cccce-6740-4e5e-9f3d-882a097d949c",
 CellID->597329932],
Cell[259321, 4687, 1018, 21, 70, "Output",ExpressionUUID->"9dc51b39-0444-4994-a742-53450589344a",
 CellID->782123360]
}, Open  ]],
Cell[260354, 4711, 492, 8, 70, "Text",ExpressionUUID->"8d7fa996-0402-47fd-b94a-31c573c5ff88",
 CellID->1783019297],
Cell[CellGroupData[{
Cell[260871, 4723, 274, 7, 70, "Input",ExpressionUUID->"25c6f91b-b1b2-4a73-a270-aac730db55ec",
 CellID->1536255326],
Cell[261148, 4732, 513, 13, 70, "Output",ExpressionUUID->"9cce90ca-9a42-4386-9f75-cdaf44e04565",
 CellID->399908233]
}, Open  ]],
Cell[261676, 4748, 144, 4, 70, "ExampleDelimiter",ExpressionUUID->"698d36f2-48dc-438b-8e9b-f180764a2c71",
 CellID->262135656],
Cell[261823, 4754, 197, 4, 70, "Text",ExpressionUUID->"b3fb36df-9d5e-4c77-a943-eacd58dc981d",
 CellID->1812908403],
Cell[CellGroupData[{
Cell[262045, 4762, 629, 14, 70, "Input",ExpressionUUID->"c0d5ebe5-32eb-4a88-b437-4280e054ec76",
 CellID->1735677260],
Cell[262677, 4778, 10388, 264, 70, "Output",ExpressionUUID->"1659547c-9918-486f-a188-857afabbfc2d",
 CellID->1781340568]
}, Open  ]],
Cell[273080, 5045, 428, 12, 70, "Text",ExpressionUUID->"108be0f2-3c3b-495d-802b-25d0c040ba3b",
 CellID->221583938],
Cell[CellGroupData[{
Cell[273533, 5061, 655, 14, 70, "Input",ExpressionUUID->"83d6b358-9060-4ce4-83f7-721a08edac3c",
 CellID->1253662683],
Cell[274191, 5077, 823, 19, 70, "Output",ExpressionUUID->"4eee3659-9bda-4f97-a89d-83af7775054f",
 CellID->921403549]
}, Open  ]],
Cell[275029, 5099, 437, 7, 70, "Text",ExpressionUUID->"1a25b27a-f686-46e8-bab8-d5159fa734c1",
 CellID->656281988],
Cell[CellGroupData[{
Cell[275491, 5110, 795, 16, 70, "Input",ExpressionUUID->"132a2046-bfb7-4bcb-b2a0-43447e5d7c9b",
 CellID->1988537299],
Cell[276289, 5128, 894, 19, 70, "Output",ExpressionUUID->"099d01bb-754e-4678-a2fc-6db09a6ed90d",
 CellID->524869526]
}, Open  ]],
Cell[277198, 5150, 145, 4, 70, "ExampleDelimiter",ExpressionUUID->"49517c90-64a5-4937-a3be-af46fc4f93d8",
 CellID->1996740139],
Cell[277346, 5156, 239, 4, 70, "Text",ExpressionUUID->"51d3427b-f281-4eb2-af17-113da9f25b6d",
 CellID->1722970136],
Cell[CellGroupData[{
Cell[277610, 5164, 565, 13, 70, "Input",ExpressionUUID->"005cff1f-ae44-4089-be17-c61545703ccb",
 CellID->484564504],
Cell[278178, 5179, 9365, 238, 70, "Output",ExpressionUUID->"18871ff1-8fa8-4807-bb1a-50931a692f39",
 CellID->1103360102]
}, Open  ]],
Cell[287558, 5420, 574, 13, 70, "Text",ExpressionUUID->"1b35feb6-4de7-4dda-bc6c-2d17b9382c81",
 CellID->569485792],
Cell[CellGroupData[{
Cell[288157, 5437, 626, 15, 70, "Input",ExpressionUUID->"b21985c0-1b5e-4887-9ea8-fbf8405c107b",
 CellID->984920261],
Cell[288786, 5454, 619, 15, 70, "Output",ExpressionUUID->"80953e78-db0b-44e9-95df-ccfe92588773",
 CellID->651942469]
}, Open  ]],
Cell[289420, 5472, 437, 7, 70, "Text",ExpressionUUID->"40ee9b2c-e344-4f83-aeeb-8a2090427eac",
 CellID->1310912097],
Cell[CellGroupData[{
Cell[289882, 5483, 1090, 22, 70, "Input",ExpressionUUID->"635ff961-3416-425f-84bc-2a9be0809f9f",
 CellID->1424471183],
Cell[290975, 5507, 984, 20, 70, "Output",ExpressionUUID->"13043cda-1a2d-4d9b-9b4d-9a8f551dae2a",
 CellID->735509489]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[292008, 5533, 95, 3, 70, "Subsection",ExpressionUUID->"495593f7-1638-492a-a933-6ae74f201c6b",
 CellID->5316679],
Cell[292106, 5538, 401, 8, 70, "Text",ExpressionUUID->"a188b3af-c451-41c5-8742-f256cb625f59",
 CellID->188717845],
Cell[292510, 5548, 1069, 20, 70, "Input",ExpressionUUID->"cdf4a1aa-3090-4ae2-a497-3a9691c598da",
 CellID->821173213],
Cell[293582, 5570, 1067, 29, 70, "Input",ExpressionUUID->"c19c567c-e2fb-4a48-9cb9-fc4236e0eb0d",
 CellID->617645659],
Cell[294652, 5601, 1515, 38, 70, "Input",ExpressionUUID->"1f22f596-bd15-4ec3-a6be-8b946f38d715",
 CellID->1982124862],
Cell[296170, 5641, 422, 12, 70, "Input",ExpressionUUID->"bbaaa21e-472a-40d8-992d-301e64580f92",
 CellID->1135730407],
Cell[296595, 5655, 410, 7, 70, "Text",ExpressionUUID->"3de3a0e8-d619-4079-b069-4fbdd7f988a0",
 CellID->67900192],
Cell[CellGroupData[{
Cell[297030, 5666, 534, 12, 70, "Input",ExpressionUUID->"6d605f8c-755b-4fce-885a-4f2a600c5ab2",
 CellID->1425323488],
Cell[297567, 5680, 1175, 23, 70, "Output",ExpressionUUID->"0e252e2f-26f8-4539-a4f0-5dc299f3d5c0",
 CellID->792109491]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[298803, 5710, 116, 2, 70, "Section",ExpressionUUID->"145e598c-ba70-4581-a696-48a49845517b",
 CellTags->"Source & Additional Information",
 CellID->348526984],
Cell[CellGroupData[{
Cell[298944, 5716, 756, 20, 70, "Subsection",ExpressionUUID->"c7ca6c0d-4d90-48a2-8006-2bcd5bcd2354",
 CellTags->{"Contributed By", "ContributorInformation", "TemplateCellGroup"},
 CellID->581484318],
Cell[299703, 5738, 57, 0, 70, "Text",ExpressionUUID->"d6b65ede-6c98-4a65-a1b9-20c5bbc6bf43"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299797, 5743, 731, 20, 70, "Subsection",ExpressionUUID->"93082850-030f-4721-94b5-dad133400338",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->234953024],
Cell[300531, 5765, 19, 0, 70, "Item",ExpressionUUID->"467085e5-ae6d-4b99-8d9d-2d21644f332f"],
Cell[300553, 5767, 23, 0, 70, "Item",ExpressionUUID->"1cbd179f-7dac-47a8-b325-b3ae302a2c90"],
Cell[300579, 5769, 27, 0, 70, "Item",ExpressionUUID->"6b7d403c-cb6f-4ac2-9110-5677403d0822"],
Cell[300609, 5771, 33, 0, 70, "Item",ExpressionUUID->"5dddc86b-473a-47dd-b71b-ae397e3f9166"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300679, 5776, 130, 3, 70, "Subsection",ExpressionUUID->"0435f3ad-5d98-45a0-9acd-c6a75430ce1c",
 CellTags->{"Categories", "TemplateCellGroup"},
 CellID->360699210],
Cell[300812, 5781, 49, 0, 70, "Item",ExpressionUUID->"9f14698f-0637-46c2-841d-4b9b8bce44d4"],
Cell[300864, 5783, 57, 0, 70, "Item",ExpressionUUID->"3d70b710-0fd9-4bf3-afd5-eabdb55b1750"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300958, 5788, 708, 20, 70, "Subsection",ExpressionUUID->"6d6c4ba2-6349-4ade-a935-8d1b2140bae2",
 CellTags->{"Related Symbols", "TemplateCellGroup"},
 CellID->787980732],
Cell[301669, 5810, 22, 0, 70, "Item",ExpressionUUID->"ea0b6c9b-1105-4423-808c-38a11749dcae"],
Cell[301694, 5812, 28, 0, 70, "Item",ExpressionUUID->"26e472fa-1cda-486f-936f-2412d89d3156"],
Cell[301725, 5814, 24, 0, 70, "Item",ExpressionUUID->"079fe7e6-8d8b-4509-9328-536dcb5b757a"],
Cell[301752, 5816, 20, 0, 70, "Item",ExpressionUUID->"5f0808a0-9caa-4180-9698-021044f60a06"]
}, Open  ]],
Cell[CellGroupData[{
Cell[301809, 5821, 758, 20, 70, "Subsection",ExpressionUUID->"187d3d3d-9587-484c-95ed-eee5362eb836",
 CellTags->{"Related Resource Objects", "TemplateCellGroup"},
 CellID->202501204],
Cell[302570, 5843, 36, 0, 70, "Item",ExpressionUUID->"baebc329-e7ee-4c32-a1a6-24f60e334750"],
Cell[302609, 5845, 29, 0, 70, "Item",ExpressionUUID->"576cda60-907e-41f1-a54e-d74b093e55f9"],
Cell[302641, 5847, 35, 0, 70, "Item",ExpressionUUID->"12ba51cc-8b65-4ce0-ad21-767c1961e9bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[302713, 5852, 809, 21, 70, "Subsection",ExpressionUUID->"d47d940f-bdc1-425f-92eb-ee3aaf66d521",
 CellTags->{"Source/Reference Citation", "TemplateCellGroup"},
 CellID->720896096],
Cell[303525, 5875, 496, 8, 70, "Text",ExpressionUUID->"e636b870-2b98-4996-8708-bb2593effc12",
 CellTags->"TabNext",
 CellID->343081869]
}, Open  ]],
Cell[CellGroupData[{
Cell[304058, 5888, 661, 20, 70, "Subsection",ExpressionUUID->"8ca8e7d6-6cdc-4dc4-9e06-4d9a8e48497f",
 CellTags->{"Links", "TemplateCellGroup"},
 CellID->282884713],
Cell[304722, 5910, 485, 8, 70, "Item",ExpressionUUID->"79d30c8e-ba01-4e1e-a09f-d1d627a2d70a",
 CellTags->"TabNext",
 CellID->485448166]
}, Open  ]],
Cell[CellGroupData[{
Cell[305244, 5923, 836, 22, 70, "Subsection",ExpressionUUID->"8ebdae6d-ba3d-49a6-aaab-90c9b386b278",
 CellTags->{"TemplateCellGroup", "Tests", "VerificationTests"},
 CellID->899735658],
Cell[CellGroupData[{
Cell[306105, 5949, 129, 4, 70, "Input",ExpressionUUID->"a035f491-764e-40b5-b6ff-fab51a870db7",
 CellID->667877521],
Cell[306237, 5955, 93, 3, 70, "Output",ExpressionUUID->"709552f9-b3c2-4e2a-b44a-175f2f1c5fd2",
 CellID->993233288]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[306391, 5965, 131, 3, 70, "Section",ExpressionUUID->"52aa75d6-eee6-47b5-a79a-36855d64ab9b",
 CellTags->{"Author Notes", "TemplateCellGroup"},
 CellID->871584409],
Cell[306525, 5970, 509, 8, 70, "Text",ExpressionUUID->"fa574fbc-3205-4177-80a1-f6e36f163525",
 CellTags->"TabNext",
 CellID->567921317]
}, Open  ]],
Cell[CellGroupData[{
Cell[307071, 5983, 766, 21, 70, "Section",ExpressionUUID->"afac0212-522c-4348-80eb-af89fe5ac8c2",
 CellTags->{"Submission Notes", "TemplateCellGroup"},
 CellID->22658912],
Cell[307840, 6006, 495, 8, 70, "Text",ExpressionUUID->"908486db-ffcb-4f0d-ab27-582fb33ee940",
 CellTags->"TabNext",
 CellID->920818074]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
